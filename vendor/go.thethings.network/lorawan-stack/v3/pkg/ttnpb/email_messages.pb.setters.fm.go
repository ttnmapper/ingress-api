// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package ttnpb

import fmt "fmt"

func (dst *CreateClientEmailMessage) SetFields(src *CreateClientEmailMessage, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "create_client_request":
			if len(subs) > 0 {
				var newDst, newSrc *CreateClientRequest
				if (src == nil || src.CreateClientRequest == nil) && dst.CreateClientRequest == nil {
					continue
				}
				if src != nil {
					newSrc = src.CreateClientRequest
				}
				if dst.CreateClientRequest != nil {
					newDst = dst.CreateClientRequest
				} else {
					newDst = &CreateClientRequest{}
					dst.CreateClientRequest = newDst
				}
				if err := newDst.SetFields(newSrc, subs...); err != nil {
					return err
				}
			} else {
				if src != nil {
					dst.CreateClientRequest = src.CreateClientRequest
				} else {
					dst.CreateClientRequest = nil
				}
			}
		case "api_key":
			if len(subs) > 0 {
				var newDst, newSrc *APIKey
				if (src == nil || src.ApiKey == nil) && dst.ApiKey == nil {
					continue
				}
				if src != nil {
					newSrc = src.ApiKey
				}
				if dst.ApiKey != nil {
					newDst = dst.ApiKey
				} else {
					newDst = &APIKey{}
					dst.ApiKey = newDst
				}
				if err := newDst.SetFields(newSrc, subs...); err != nil {
					return err
				}
			} else {
				if src != nil {
					dst.ApiKey = src.ApiKey
				} else {
					dst.ApiKey = nil
				}
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}
