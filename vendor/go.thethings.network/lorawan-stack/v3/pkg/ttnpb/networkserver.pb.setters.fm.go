// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package ttnpb

import fmt "fmt"

func (dst *GenerateDevAddrResponse) SetFields(src *GenerateDevAddrResponse, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "dev_addr":
			if len(subs) > 0 {
				return fmt.Errorf("'dev_addr' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.DevAddr = src.DevAddr
			} else {
				dst.DevAddr = nil
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}

func (dst *GetDefaultMACSettingsRequest) SetFields(src *GetDefaultMACSettingsRequest, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "frequency_plan_id":
			if len(subs) > 0 {
				return fmt.Errorf("'frequency_plan_id' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.FrequencyPlanId = src.FrequencyPlanId
			} else {
				var zero string
				dst.FrequencyPlanId = zero
			}
		case "lorawan_phy_version":
			if len(subs) > 0 {
				return fmt.Errorf("'lorawan_phy_version' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.LorawanPhyVersion = src.LorawanPhyVersion
			} else {
				dst.LorawanPhyVersion = 0
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}

func (dst *GetNetIDResponse) SetFields(src *GetNetIDResponse, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "net_id":
			if len(subs) > 0 {
				return fmt.Errorf("'net_id' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.NetId = src.NetId
			} else {
				dst.NetId = nil
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}

func (dst *GetDeviceAdressPrefixesResponse) SetFields(src *GetDeviceAdressPrefixesResponse, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "dev_addr_prefixes":
			if len(subs) > 0 {
				return fmt.Errorf("'dev_addr_prefixes' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.DevAddrPrefixes = src.DevAddrPrefixes
			} else {
				dst.DevAddrPrefixes = nil
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}
