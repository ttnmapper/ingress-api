// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/mqtt.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The connection information of an MQTT frontend.
type MQTTConnectionInfo struct {
	// The public listen address of the frontend.
	PublicAddress string `protobuf:"bytes,1,opt,name=public_address,json=publicAddress,proto3" json:"public_address,omitempty"`
	// The public listen address of the TLS frontend.
	PublicTlsAddress string `protobuf:"bytes,2,opt,name=public_tls_address,json=publicTlsAddress,proto3" json:"public_tls_address,omitempty"`
	// The username to be used for authentication.
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQTTConnectionInfo) Reset()         { *m = MQTTConnectionInfo{} }
func (m *MQTTConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*MQTTConnectionInfo) ProtoMessage()    {}
func (*MQTTConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbbf9b6b10797b61, []int{0}
}
func (m *MQTTConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MQTTConnectionInfo.Unmarshal(m, b)
}
func (m *MQTTConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MQTTConnectionInfo.Marshal(b, m, deterministic)
}
func (m *MQTTConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQTTConnectionInfo.Merge(m, src)
}
func (m *MQTTConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_MQTTConnectionInfo.Size(m)
}
func (m *MQTTConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MQTTConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MQTTConnectionInfo proto.InternalMessageInfo

func (m *MQTTConnectionInfo) GetPublicAddress() string {
	if m != nil {
		return m.PublicAddress
	}
	return ""
}

func (m *MQTTConnectionInfo) GetPublicTlsAddress() string {
	if m != nil {
		return m.PublicTlsAddress
	}
	return ""
}

func (m *MQTTConnectionInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto.RegisterType((*MQTTConnectionInfo)(nil), "ttn.lorawan.v3.MQTTConnectionInfo")
	golang_proto.RegisterType((*MQTTConnectionInfo)(nil), "ttn.lorawan.v3.MQTTConnectionInfo")
}

func init() { proto.RegisterFile("lorawan-stack/api/mqtt.proto", fileDescriptor_dbbf9b6b10797b61) }
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/mqtt.proto", fileDescriptor_dbbf9b6b10797b61)
}

var fileDescriptor_dbbf9b6b10797b61 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x92, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x86, 0x99, 0xaf, 0xf0, 0xa1, 0x01, 0x8b, 0x64, 0x55, 0x8a, 0x88, 0x48, 0x17, 0x49, 0x71,
	0x32, 0x6a, 0xe9, 0xc2, 0x6c, 0x42, 0xea, 0xca, 0x85, 0x0b, 0x4b, 0x57, 0xfd, 0x93, 0x49, 0x3a,
	0x4d, 0x43, 0xd3, 0x99, 0x98, 0x9c, 0xa4, 0xb6, 0xd6, 0x9d, 0x20, 0xb8, 0xf0, 0x3e, 0xbc, 0x01,
	0x77, 0x82, 0xf7, 0xe2, 0x5d, 0xb8, 0x92, 0x66, 0x6a, 0x53, 0xf1, 0x06, 0xdc, 0x3d, 0x87, 0xf3,
	0xbe, 0x87, 0x07, 0x66, 0x94, 0xbd, 0x40, 0x44, 0x74, 0x4a, 0x39, 0x8e, 0x81, 0xba, 0x63, 0x42,
	0x43, 0x9f, 0x4c, 0x6e, 0x00, 0x8c, 0x30, 0x12, 0x20, 0xd4, 0x22, 0x00, 0x37, 0x56, 0x09, 0x23,
	0xad, 0x95, 0x6d, 0xcf, 0x87, 0x51, 0xe2, 0x18, 0xae, 0x98, 0x10, 0xc6, 0x53, 0x31, 0x0b, 0x23,
	0x71, 0x3b, 0x23, 0x59, 0xd8, 0xc5, 0x1e, 0xe3, 0x38, 0xa5, 0x81, 0x3f, 0xa0, 0xc0, 0xc8, 0x2f,
	0x90, 0x27, 0xcb, 0x78, 0xe3, 0x84, 0x27, 0x3c, 0x21, 0xcb, 0x4e, 0x32, 0xcc, 0xa6, 0x6c, 0xc8,
	0x48, 0xc6, 0x0f, 0x5f, 0x0a, 0x8a, 0x7a, 0x79, 0xd5, 0x6a, 0x9d, 0x0b, 0xce, 0x99, 0x0b, 0xbe,
	0xe0, 0x17, 0x7c, 0x28, 0xd4, 0x57, 0xa4, 0x14, 0xc3, 0xc4, 0x09, 0x7c, 0xf7, 0x9a, 0x0e, 0x06,
	0x11, 0x8b, 0xe3, 0x12, 0x3a, 0x40, 0xda, 0x76, 0xe3, 0x19, 0x7d, 0x36, 0x9e, 0x50, 0xf4, 0x88,
	0x4e, 0x1f, 0x50, 0x5f, 0xb3, 0x4c, 0xcd, 0x32, 0x3b, 0x14, 0xcf, 0x6d, 0xdc, 0x3e, 0xc6, 0x67,
	0xbd, 0xc5, 0x06, 0xe7, 0xd8, 0xc5, 0xbd, 0xea, 0xc6, 0x42, 0xef, 0x1a, 0x7a, 0x75, 0xd9, 0xb3,
	0x71, 0x9b, 0xe2, 0xb9, 0xec, 0xe5, 0x9c, 0x63, 0xd6, 0xcb, 0x17, 0xba, 0x66, 0x99, 0x66, 0x67,
	0x49, 0x77, 0x27, 0x47, 0xf5, 0x7b, 0xdd, 0xaa, 0x2c, 0xfa, 0x95, 0xe6, 0x8e, 0xd4, 0xb4, 0xa5,
	0xa5, 0xfa, 0x86, 0x14, 0x75, 0x25, 0x0e, 0x41, 0xbc, 0x96, 0xff, 0xf7, 0x37, 0xe5, 0x77, 0xa5,
	0x6a, 0x2b, 0x88, 0xbf, 0xfd, 0xcb, 0xca, 0x56, 0x12, 0xb3, 0x88, 0xd3, 0x09, 0x2b, 0x15, 0x96,
	0xd2, 0xcd, 0xf5, 0xdc, 0xa8, 0xbf, 0x7f, 0xec, 0xa3, 0x36, 0xf1, 0x84, 0x01, 0x23, 0x06, 0x23,
	0x9f, 0x7b, 0xb1, 0xc1, 0x19, 0x4c, 0x45, 0x34, 0x26, 0x3f, 0xbf, 0x59, 0x5a, 0x23, 0xe1, 0xd8,
	0x23, 0x00, 0x3c, 0x74, 0x9c, 0xff, 0xd9, 0x4b, 0xd7, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0xab,
	0xc4, 0x52, 0x65, 0x8b, 0x02, 0x00, 0x00,
}
