// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/regional.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ConcentratorConfig struct {
	Channels             []*ConcentratorConfig_Channel           `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	LoraStandardChannel  *ConcentratorConfig_LoRaStandardChannel `protobuf:"bytes,2,opt,name=lora_standard_channel,json=loraStandardChannel,proto3" json:"lora_standard_channel,omitempty"`
	FskChannel           *ConcentratorConfig_FSKChannel          `protobuf:"bytes,3,opt,name=fsk_channel,json=fskChannel,proto3" json:"fsk_channel,omitempty"`
	Lbt                  *ConcentratorConfig_LBTConfiguration    `protobuf:"bytes,4,opt,name=lbt,proto3" json:"lbt,omitempty"`
	PingSlot             *ConcentratorConfig_Channel             `protobuf:"bytes,5,opt,name=ping_slot,json=pingSlot,proto3" json:"ping_slot,omitempty"`
	Radios               []*GatewayRadio                         `protobuf:"bytes,6,rep,name=radios,proto3" json:"radios,omitempty"`
	ClockSource          uint32                                  `protobuf:"varint,7,opt,name=clock_source,json=clockSource,proto3" json:"clock_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ConcentratorConfig) Reset()         { *m = ConcentratorConfig{} }
func (m *ConcentratorConfig) String() string { return proto.CompactTextString(m) }
func (*ConcentratorConfig) ProtoMessage()    {}
func (*ConcentratorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfe48e1cbcf8ee88, []int{0}
}
func (m *ConcentratorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcentratorConfig.Unmarshal(m, b)
}
func (m *ConcentratorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcentratorConfig.Marshal(b, m, deterministic)
}
func (m *ConcentratorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcentratorConfig.Merge(m, src)
}
func (m *ConcentratorConfig) XXX_Size() int {
	return xxx_messageInfo_ConcentratorConfig.Size(m)
}
func (m *ConcentratorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcentratorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ConcentratorConfig proto.InternalMessageInfo

func (m *ConcentratorConfig) GetChannels() []*ConcentratorConfig_Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *ConcentratorConfig) GetLoraStandardChannel() *ConcentratorConfig_LoRaStandardChannel {
	if m != nil {
		return m.LoraStandardChannel
	}
	return nil
}

func (m *ConcentratorConfig) GetFskChannel() *ConcentratorConfig_FSKChannel {
	if m != nil {
		return m.FskChannel
	}
	return nil
}

func (m *ConcentratorConfig) GetLbt() *ConcentratorConfig_LBTConfiguration {
	if m != nil {
		return m.Lbt
	}
	return nil
}

func (m *ConcentratorConfig) GetPingSlot() *ConcentratorConfig_Channel {
	if m != nil {
		return m.PingSlot
	}
	return nil
}

func (m *ConcentratorConfig) GetRadios() []*GatewayRadio {
	if m != nil {
		return m.Radios
	}
	return nil
}

func (m *ConcentratorConfig) GetClockSource() uint32 {
	if m != nil {
		return m.ClockSource
	}
	return 0
}

type ConcentratorConfig_Channel struct {
	// Frequency (Hz).
	Frequency            uint64   `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Radio                uint32   `protobuf:"varint,2,opt,name=radio,proto3" json:"radio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcentratorConfig_Channel) Reset()         { *m = ConcentratorConfig_Channel{} }
func (m *ConcentratorConfig_Channel) String() string { return proto.CompactTextString(m) }
func (*ConcentratorConfig_Channel) ProtoMessage()    {}
func (*ConcentratorConfig_Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfe48e1cbcf8ee88, []int{0, 0}
}
func (m *ConcentratorConfig_Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcentratorConfig_Channel.Unmarshal(m, b)
}
func (m *ConcentratorConfig_Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcentratorConfig_Channel.Marshal(b, m, deterministic)
}
func (m *ConcentratorConfig_Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcentratorConfig_Channel.Merge(m, src)
}
func (m *ConcentratorConfig_Channel) XXX_Size() int {
	return xxx_messageInfo_ConcentratorConfig_Channel.Size(m)
}
func (m *ConcentratorConfig_Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcentratorConfig_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_ConcentratorConfig_Channel proto.InternalMessageInfo

func (m *ConcentratorConfig_Channel) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *ConcentratorConfig_Channel) GetRadio() uint32 {
	if m != nil {
		return m.Radio
	}
	return 0
}

type ConcentratorConfig_LoRaStandardChannel struct {
	// Frequency (Hz).
	Frequency uint64 `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Radio     uint32 `protobuf:"varint,2,opt,name=radio,proto3" json:"radio,omitempty"`
	// Bandwidth (Hz).
	Bandwidth            uint32   `protobuf:"varint,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	SpreadingFactor      uint32   `protobuf:"varint,4,opt,name=spreading_factor,json=spreadingFactor,proto3" json:"spreading_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcentratorConfig_LoRaStandardChannel) Reset() {
	*m = ConcentratorConfig_LoRaStandardChannel{}
}
func (m *ConcentratorConfig_LoRaStandardChannel) String() string { return proto.CompactTextString(m) }
func (*ConcentratorConfig_LoRaStandardChannel) ProtoMessage()    {}
func (*ConcentratorConfig_LoRaStandardChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfe48e1cbcf8ee88, []int{0, 1}
}
func (m *ConcentratorConfig_LoRaStandardChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel.Unmarshal(m, b)
}
func (m *ConcentratorConfig_LoRaStandardChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel.Marshal(b, m, deterministic)
}
func (m *ConcentratorConfig_LoRaStandardChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel.Merge(m, src)
}
func (m *ConcentratorConfig_LoRaStandardChannel) XXX_Size() int {
	return xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel.Size(m)
}
func (m *ConcentratorConfig_LoRaStandardChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel.DiscardUnknown(m)
}

var xxx_messageInfo_ConcentratorConfig_LoRaStandardChannel proto.InternalMessageInfo

func (m *ConcentratorConfig_LoRaStandardChannel) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *ConcentratorConfig_LoRaStandardChannel) GetRadio() uint32 {
	if m != nil {
		return m.Radio
	}
	return 0
}

func (m *ConcentratorConfig_LoRaStandardChannel) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *ConcentratorConfig_LoRaStandardChannel) GetSpreadingFactor() uint32 {
	if m != nil {
		return m.SpreadingFactor
	}
	return 0
}

type ConcentratorConfig_FSKChannel struct {
	// Frequency (Hz).
	Frequency            uint64   `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Radio                uint32   `protobuf:"varint,2,opt,name=radio,proto3" json:"radio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcentratorConfig_FSKChannel) Reset()         { *m = ConcentratorConfig_FSKChannel{} }
func (m *ConcentratorConfig_FSKChannel) String() string { return proto.CompactTextString(m) }
func (*ConcentratorConfig_FSKChannel) ProtoMessage()    {}
func (*ConcentratorConfig_FSKChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfe48e1cbcf8ee88, []int{0, 2}
}
func (m *ConcentratorConfig_FSKChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcentratorConfig_FSKChannel.Unmarshal(m, b)
}
func (m *ConcentratorConfig_FSKChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcentratorConfig_FSKChannel.Marshal(b, m, deterministic)
}
func (m *ConcentratorConfig_FSKChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcentratorConfig_FSKChannel.Merge(m, src)
}
func (m *ConcentratorConfig_FSKChannel) XXX_Size() int {
	return xxx_messageInfo_ConcentratorConfig_FSKChannel.Size(m)
}
func (m *ConcentratorConfig_FSKChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcentratorConfig_FSKChannel.DiscardUnknown(m)
}

var xxx_messageInfo_ConcentratorConfig_FSKChannel proto.InternalMessageInfo

func (m *ConcentratorConfig_FSKChannel) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *ConcentratorConfig_FSKChannel) GetRadio() uint32 {
	if m != nil {
		return m.Radio
	}
	return 0
}

type ConcentratorConfig_LBTConfiguration struct {
	// Received signal strength (dBm).
	RssiTarget float32 `protobuf:"fixed32,1,opt,name=rssi_target,json=rssiTarget,proto3" json:"rssi_target,omitempty"`
	// Received signal strength offset (dBm).
	RssiOffset           float32         `protobuf:"fixed32,2,opt,name=rssi_offset,json=rssiOffset,proto3" json:"rssi_offset,omitempty"`
	ScanTime             *types.Duration `protobuf:"bytes,3,opt,name=scan_time,json=scanTime,proto3" json:"scan_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConcentratorConfig_LBTConfiguration) Reset()         { *m = ConcentratorConfig_LBTConfiguration{} }
func (m *ConcentratorConfig_LBTConfiguration) String() string { return proto.CompactTextString(m) }
func (*ConcentratorConfig_LBTConfiguration) ProtoMessage()    {}
func (*ConcentratorConfig_LBTConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfe48e1cbcf8ee88, []int{0, 3}
}
func (m *ConcentratorConfig_LBTConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcentratorConfig_LBTConfiguration.Unmarshal(m, b)
}
func (m *ConcentratorConfig_LBTConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcentratorConfig_LBTConfiguration.Marshal(b, m, deterministic)
}
func (m *ConcentratorConfig_LBTConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcentratorConfig_LBTConfiguration.Merge(m, src)
}
func (m *ConcentratorConfig_LBTConfiguration) XXX_Size() int {
	return xxx_messageInfo_ConcentratorConfig_LBTConfiguration.Size(m)
}
func (m *ConcentratorConfig_LBTConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcentratorConfig_LBTConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ConcentratorConfig_LBTConfiguration proto.InternalMessageInfo

func (m *ConcentratorConfig_LBTConfiguration) GetRssiTarget() float32 {
	if m != nil {
		return m.RssiTarget
	}
	return 0
}

func (m *ConcentratorConfig_LBTConfiguration) GetRssiOffset() float32 {
	if m != nil {
		return m.RssiOffset
	}
	return 0
}

func (m *ConcentratorConfig_LBTConfiguration) GetScanTime() *types.Duration {
	if m != nil {
		return m.ScanTime
	}
	return nil
}

func init() {
	proto.RegisterType((*ConcentratorConfig)(nil), "ttn.lorawan.v3.ConcentratorConfig")
	golang_proto.RegisterType((*ConcentratorConfig)(nil), "ttn.lorawan.v3.ConcentratorConfig")
	proto.RegisterType((*ConcentratorConfig_Channel)(nil), "ttn.lorawan.v3.ConcentratorConfig.Channel")
	golang_proto.RegisterType((*ConcentratorConfig_Channel)(nil), "ttn.lorawan.v3.ConcentratorConfig.Channel")
	proto.RegisterType((*ConcentratorConfig_LoRaStandardChannel)(nil), "ttn.lorawan.v3.ConcentratorConfig.LoRaStandardChannel")
	golang_proto.RegisterType((*ConcentratorConfig_LoRaStandardChannel)(nil), "ttn.lorawan.v3.ConcentratorConfig.LoRaStandardChannel")
	proto.RegisterType((*ConcentratorConfig_FSKChannel)(nil), "ttn.lorawan.v3.ConcentratorConfig.FSKChannel")
	golang_proto.RegisterType((*ConcentratorConfig_FSKChannel)(nil), "ttn.lorawan.v3.ConcentratorConfig.FSKChannel")
	proto.RegisterType((*ConcentratorConfig_LBTConfiguration)(nil), "ttn.lorawan.v3.ConcentratorConfig.LBTConfiguration")
	golang_proto.RegisterType((*ConcentratorConfig_LBTConfiguration)(nil), "ttn.lorawan.v3.ConcentratorConfig.LBTConfiguration")
}

func init() { proto.RegisterFile("lorawan-stack/api/regional.proto", fileDescriptor_cfe48e1cbcf8ee88) }
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/regional.proto", fileDescriptor_cfe48e1cbcf8ee88)
}

var fileDescriptor_cfe48e1cbcf8ee88 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x55, 0xd6, 0xad, 0x5d, 0x5d, 0x0a, 0x93, 0x07, 0x52, 0xa8, 0xa6, 0xad, 0xf0, 0x54, 0x90,
	0xea, 0x48, 0x2b, 0xec, 0x0d, 0x09, 0xad, 0xd0, 0x3d, 0x80, 0x40, 0x4a, 0xfb, 0xc4, 0x4b, 0xe4,
	0x24, 0x8e, 0x6b, 0x92, 0xda, 0xc1, 0xbe, 0x5d, 0xb5, 0x7f, 0xe0, 0x89, 0x8f, 0xe0, 0x3b, 0xf8,
	0x17, 0x7e, 0x04, 0xc5, 0x49, 0x5a, 0xad, 0xe3, 0xa1, 0xdb, 0x9b, 0x7d, 0x7c, 0xce, 0xb9, 0xd7,
	0x3e, 0xbe, 0xa8, 0x9f, 0x29, 0x4d, 0x57, 0x54, 0x0e, 0x0d, 0xd0, 0x28, 0xf5, 0x68, 0x2e, 0x3c,
	0xcd, 0xb8, 0x50, 0x92, 0x66, 0x24, 0xd7, 0x0a, 0x14, 0x7e, 0x0c, 0x20, 0x49, 0xc5, 0x22, 0xd7,
	0xa3, 0xde, 0x90, 0x0b, 0x98, 0x2f, 0x43, 0x12, 0xa9, 0x85, 0xc7, 0x15, 0x57, 0x9e, 0xa5, 0x85,
	0xcb, 0xc4, 0xee, 0xec, 0xc6, 0xae, 0x4a, 0x79, 0xef, 0x94, 0x2b, 0xc5, 0x33, 0xb6, 0x61, 0xc5,
	0x4b, 0x4d, 0x41, 0x28, 0x59, 0x9d, 0x9f, 0xdd, 0x6d, 0x80, 0x53, 0x60, 0x2b, 0x7a, 0x53, 0x12,
	0x5e, 0xfe, 0x6e, 0x21, 0x3c, 0x56, 0x32, 0x62, 0x12, 0x34, 0x05, 0xa5, 0xc7, 0x4a, 0x26, 0x82,
	0xe3, 0x09, 0x3a, 0x8c, 0xe6, 0x54, 0x4a, 0x96, 0x19, 0xd7, 0xe9, 0x37, 0x06, 0x9d, 0xf3, 0xd7,
	0xe4, 0x76, 0xa7, 0xe4, 0xae, 0x8a, 0x8c, 0x4b, 0x89, 0xbf, 0xd6, 0xe2, 0xef, 0xe8, 0x59, 0x21,
	0x09, 0x0c, 0x50, 0x19, 0x53, 0x1d, 0x07, 0xd5, 0x89, 0xbb, 0xd7, 0x77, 0x06, 0x9d, 0xf3, 0x8b,
	0x1d, 0x4c, 0x3f, 0x2b, 0x9f, 0x4e, 0x2b, 0x79, 0x5d, 0xe0, 0xb8, 0x90, 0x6c, 0x81, 0xf8, 0x0b,
	0xea, 0x24, 0x26, 0x5d, 0x57, 0x68, 0xd8, 0x0a, 0xc3, 0x1d, 0x2a, 0x4c, 0xa6, 0x9f, 0x6a, 0x63,
	0x94, 0x98, 0xb4, 0xf6, 0xfb, 0x88, 0x1a, 0x59, 0x08, 0xee, 0xbe, 0xf5, 0x19, 0xed, 0xd2, 0xe9,
	0xe5, 0xac, 0x5c, 0x55, 0x19, 0xf8, 0x85, 0x1e, 0x5f, 0xa1, 0x76, 0x2e, 0x24, 0x0f, 0x4c, 0xa6,
	0xc0, 0x3d, 0xb0, 0x66, 0xf7, 0x7a, 0xcb, 0x42, 0x3c, 0xcd, 0x14, 0xe0, 0x37, 0xa8, 0xa9, 0x69,
	0x2c, 0x94, 0x71, 0x9b, 0x36, 0x91, 0x93, 0x6d, 0x97, 0xab, 0x32, 0x59, 0xbf, 0x20, 0xf9, 0x15,
	0x17, 0xbf, 0x40, 0x8f, 0xa2, 0x4c, 0x45, 0x69, 0x60, 0xd4, 0x52, 0x47, 0xcc, 0x6d, 0xf5, 0x9d,
	0x41, 0xd7, 0xef, 0x58, 0x6c, 0x6a, 0xa1, 0xde, 0x3b, 0xd4, 0xaa, 0xef, 0x7c, 0x82, 0xda, 0x89,
	0x66, 0x3f, 0x96, 0x4c, 0x46, 0x37, 0xae, 0xd3, 0x77, 0x06, 0xfb, 0xfe, 0x06, 0xc0, 0x4f, 0xd1,
	0x81, 0x75, 0xb5, 0xe9, 0x75, 0xfd, 0x72, 0xd3, 0xfb, 0xe5, 0xa0, 0xe3, 0xff, 0x84, 0xf4, 0x10,
	0xaf, 0x42, 0x13, 0x52, 0x19, 0xaf, 0x44, 0x0c, 0x73, 0x9b, 0x60, 0xd7, 0xdf, 0x00, 0xf8, 0x15,
	0x3a, 0x32, 0xb9, 0x66, 0x34, 0x2e, 0xde, 0x33, 0xa1, 0x11, 0x28, 0x6d, 0xe3, 0xe9, 0xfa, 0x4f,
	0xd6, 0xf8, 0xc4, 0xc2, 0xbd, 0xf7, 0x08, 0x6d, 0x62, 0x7d, 0xd0, 0xb5, 0x7e, 0x3a, 0xe8, 0x68,
	0x3b, 0x51, 0x7c, 0x86, 0x3a, 0xda, 0x18, 0x11, 0x00, 0xd5, 0x9c, 0x81, 0xb5, 0xda, 0xf3, 0x51,
	0x01, 0xcd, 0x2c, 0xb2, 0x26, 0xa8, 0x24, 0x31, 0x0c, 0xac, 0x63, 0x45, 0xf8, 0x6a, 0x11, 0x7c,
	0x81, 0xda, 0x26, 0xa2, 0x32, 0x00, 0xb1, 0x60, 0xd5, 0x1f, 0x7d, 0x4e, 0xca, 0x29, 0x26, 0xf5,
	0x14, 0x93, 0x0f, 0xf5, 0x0f, 0x3a, 0x2c, 0xb8, 0x33, 0xb1, 0x60, 0x97, 0x6f, 0xff, 0xfc, 0x3d,
	0x75, 0xbe, 0x79, 0x5c, 0x11, 0x98, 0x33, 0x98, 0x0b, 0xc9, 0x0d, 0x91, 0x0c, 0x56, 0x4a, 0xa7,
	0xde, 0xed, 0x21, 0xbf, 0x1e, 0x79, 0x79, 0xca, 0x3d, 0x00, 0x99, 0x87, 0x61, 0xd3, 0x7a, 0x8e,
	0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x35, 0x4e, 0x59, 0x8c, 0x8a, 0x04, 0x00, 0x00,
}
