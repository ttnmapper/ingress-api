// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.4.0
// - protoc             v3.9.1
// source: lorawan-stack/api/gatewayserver.proto

package ttnpb

import (
	gogo "github.com/TheThingsIndustries/protoc-gen-go-json/gogo"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the GatewayUp message to JSON.
func (x *GatewayUp) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.UplinkMessages) > 0 || s.HasField("uplink_messages") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("uplink_messages")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.UplinkMessages {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("uplink_messages"))
		}
		s.WriteArrayEnd()
	}
	if x.GatewayStatus != nil || s.HasField("gateway_status") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_status")
		x.GatewayStatus.MarshalProtoJSON(s.WithField("gateway_status"))
	}
	if x.TxAcknowledgment != nil || s.HasField("tx_acknowledgment") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tx_acknowledgment")
		x.TxAcknowledgment.MarshalProtoJSON(s.WithField("tx_acknowledgment"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GatewayUp to JSON.
func (x *GatewayUp) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GatewayUp message from JSON.
func (x *GatewayUp) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "uplink_messages", "uplinkMessages":
			s.AddField("uplink_messages")
			if s.ReadNil() {
				x.UplinkMessages = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.UplinkMessages = append(x.UplinkMessages, nil)
					return
				}
				v := &UplinkMessage{}
				v.UnmarshalProtoJSON(s.WithField("uplink_messages", false))
				if s.Err() != nil {
					return
				}
				x.UplinkMessages = append(x.UplinkMessages, v)
			})
		case "gateway_status", "gatewayStatus":
			if s.ReadNil() {
				x.GatewayStatus = nil
				return
			}
			x.GatewayStatus = &GatewayStatus{}
			x.GatewayStatus.UnmarshalProtoJSON(s.WithField("gateway_status", true))
		case "tx_acknowledgment", "txAcknowledgment":
			if s.ReadNil() {
				x.TxAcknowledgment = nil
				return
			}
			x.TxAcknowledgment = &TxAcknowledgment{}
			x.TxAcknowledgment.UnmarshalProtoJSON(s.WithField("tx_acknowledgment", true))
		}
	})
}

// UnmarshalJSON unmarshals the GatewayUp from JSON.
func (x *GatewayUp) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GatewayDown message to JSON.
func (x *GatewayDown) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.DownlinkMessage != nil || s.HasField("downlink_message") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink_message")
		x.DownlinkMessage.MarshalProtoJSON(s.WithField("downlink_message"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GatewayDown to JSON.
func (x *GatewayDown) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GatewayDown message from JSON.
func (x *GatewayDown) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "downlink_message", "downlinkMessage":
			if s.ReadNil() {
				x.DownlinkMessage = nil
				return
			}
			x.DownlinkMessage = &DownlinkMessage{}
			x.DownlinkMessage.UnmarshalProtoJSON(s.WithField("downlink_message", true))
		}
	})
}

// UnmarshalJSON unmarshals the GatewayDown from JSON.
func (x *GatewayDown) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the ScheduleDownlinkResponse message to JSON.
func (x *ScheduleDownlinkResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Delay != nil || s.HasField("delay") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("delay")
		if x.Delay == nil {
			s.WriteNil()
		} else {
			gogo.MarshalDuration(s, x.Delay)
		}
	}
	if x.DownlinkPath != nil || s.HasField("downlink_path") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink_path")
		x.DownlinkPath.MarshalProtoJSON(s.WithField("downlink_path"))
	}
	if x.Rx1 || s.HasField("rx1") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rx1")
		s.WriteBool(x.Rx1)
	}
	if x.Rx2 || s.HasField("rx2") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rx2")
		s.WriteBool(x.Rx2)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the ScheduleDownlinkResponse to JSON.
func (x *ScheduleDownlinkResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the ScheduleDownlinkResponse message from JSON.
func (x *ScheduleDownlinkResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "delay":
			s.AddField("delay")
			if s.ReadNil() {
				x.Delay = nil
				return
			}
			v := gogo.UnmarshalDuration(s)
			if s.Err() != nil {
				return
			}
			x.Delay = v
		case "downlink_path", "downlinkPath":
			if s.ReadNil() {
				x.DownlinkPath = nil
				return
			}
			x.DownlinkPath = &DownlinkPath{}
			x.DownlinkPath.UnmarshalProtoJSON(s.WithField("downlink_path", true))
		case "rx1":
			s.AddField("rx1")
			x.Rx1 = s.ReadBool()
		case "rx2":
			s.AddField("rx2")
			x.Rx2 = s.ReadBool()
		}
	})
}

// UnmarshalJSON unmarshals the ScheduleDownlinkResponse from JSON.
func (x *ScheduleDownlinkResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the BatchGetGatewayConnectionStatsRequest message to JSON.
func (x *BatchGetGatewayConnectionStatsRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.GatewayIds) > 0 || s.HasField("gateway_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_ids")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.GatewayIds {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("gateway_ids"))
		}
		s.WriteArrayEnd()
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			gogo.MarshalFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the BatchGetGatewayConnectionStatsRequest to JSON.
func (x *BatchGetGatewayConnectionStatsRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the BatchGetGatewayConnectionStatsRequest message from JSON.
func (x *BatchGetGatewayConnectionStatsRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway_ids", "gatewayIds":
			s.AddField("gateway_ids")
			if s.ReadNil() {
				x.GatewayIds = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.GatewayIds = append(x.GatewayIds, nil)
					return
				}
				v := &GatewayIdentifiers{}
				v.UnmarshalProtoJSON(s.WithField("gateway_ids", false))
				if s.Err() != nil {
					return
				}
				x.GatewayIds = append(x.GatewayIds, v)
			})
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := gogo.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the BatchGetGatewayConnectionStatsRequest from JSON.
func (x *BatchGetGatewayConnectionStatsRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}
