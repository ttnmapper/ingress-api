// Copyright Â© 2019 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: lorawan-stack/api/picture.proto

package ttnpb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Picture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Embedded picture.
	// Omitted if there are external URLs available (in sizes).
	Embedded *Picture_Embedded `protobuf:"bytes,1,opt,name=embedded,proto3" json:"embedded,omitempty"`
	// URLs of the picture for different sizes, if available on a CDN.
	Sizes map[uint32]string `protobuf:"bytes,2,rep,name=sizes,proto3" json:"sizes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Picture) Reset() {
	*x = Picture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_picture_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Picture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Picture) ProtoMessage() {}

func (x *Picture) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_picture_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Picture.ProtoReflect.Descriptor instead.
func (*Picture) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_picture_proto_rawDescGZIP(), []int{0}
}

func (x *Picture) GetEmbedded() *Picture_Embedded {
	if x != nil {
		return x.Embedded
	}
	return nil
}

func (x *Picture) GetSizes() map[uint32]string {
	if x != nil {
		return x.Sizes
	}
	return nil
}

type Picture_Embedded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MIME type of the picture.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Picture data. A data URI can be constructed as follows:
	// `data:<mime_type>;base64,<data>`.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Picture_Embedded) Reset() {
	*x = Picture_Embedded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_picture_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Picture_Embedded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Picture_Embedded) ProtoMessage() {}

func (x *Picture_Embedded) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_picture_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Picture_Embedded.ProtoReflect.Descriptor instead.
func (*Picture_Embedded) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_picture_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Picture_Embedded) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Picture_Embedded) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_lorawan_stack_api_picture_proto protoreflect.FileDescriptor

var file_lorawan_stack_api_picture_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76,
	0x33, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e,
	0x2e, 0x76, 0x33, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x47,
	0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x9a, 0x01, 0x07, 0x2a, 0x05, 0x72, 0x03, 0x90, 0x01, 0x01,
	0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x20, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x7a, 0x05, 0x18, 0x80,
	0x80, 0x80, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x53, 0x69, 0x7a,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6f, 0x72, 0x61,
	0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x74, 0x74, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lorawan_stack_api_picture_proto_rawDescOnce sync.Once
	file_lorawan_stack_api_picture_proto_rawDescData = file_lorawan_stack_api_picture_proto_rawDesc
)

func file_lorawan_stack_api_picture_proto_rawDescGZIP() []byte {
	file_lorawan_stack_api_picture_proto_rawDescOnce.Do(func() {
		file_lorawan_stack_api_picture_proto_rawDescData = protoimpl.X.CompressGZIP(file_lorawan_stack_api_picture_proto_rawDescData)
	})
	return file_lorawan_stack_api_picture_proto_rawDescData
}

var file_lorawan_stack_api_picture_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lorawan_stack_api_picture_proto_goTypes = []interface{}{
	(*Picture)(nil),          // 0: ttn.lorawan.v3.Picture
	(*Picture_Embedded)(nil), // 1: ttn.lorawan.v3.Picture.Embedded
	nil,                      // 2: ttn.lorawan.v3.Picture.SizesEntry
}
var file_lorawan_stack_api_picture_proto_depIdxs = []int32{
	1, // 0: ttn.lorawan.v3.Picture.embedded:type_name -> ttn.lorawan.v3.Picture.Embedded
	2, // 1: ttn.lorawan.v3.Picture.sizes:type_name -> ttn.lorawan.v3.Picture.SizesEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lorawan_stack_api_picture_proto_init() }
func file_lorawan_stack_api_picture_proto_init() {
	if File_lorawan_stack_api_picture_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lorawan_stack_api_picture_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Picture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_picture_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Picture_Embedded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lorawan_stack_api_picture_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lorawan_stack_api_picture_proto_goTypes,
		DependencyIndexes: file_lorawan_stack_api_picture_proto_depIdxs,
		MessageInfos:      file_lorawan_stack_api_picture_proto_msgTypes,
	}.Build()
	File_lorawan_stack_api_picture_proto = out.File
	file_lorawan_stack_api_picture_proto_rawDesc = nil
	file_lorawan_stack_api_picture_proto_goTypes = nil
	file_lorawan_stack_api_picture_proto_depIdxs = nil
}
