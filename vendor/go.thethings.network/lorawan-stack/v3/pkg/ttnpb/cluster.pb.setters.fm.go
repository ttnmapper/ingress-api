// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package ttnpb

import fmt "fmt"

func (dst *PeerInfo) SetFields(src *PeerInfo, paths ...string) error {
	for name, subs := range _processPaths(paths) {
		switch name {
		case "grpc_port":
			if len(subs) > 0 {
				return fmt.Errorf("'grpc_port' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.GrpcPort = src.GrpcPort
			} else {
				var zero uint32
				dst.GrpcPort = zero
			}
		case "tls":
			if len(subs) > 0 {
				return fmt.Errorf("'tls' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.Tls = src.Tls
			} else {
				var zero bool
				dst.Tls = zero
			}
		case "roles":
			if len(subs) > 0 {
				return fmt.Errorf("'roles' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.Roles = src.Roles
			} else {
				dst.Roles = nil
			}
		case "tags":
			if len(subs) > 0 {
				return fmt.Errorf("'tags' has no subfields, but %s were specified", subs)
			}
			if src != nil {
				dst.Tags = src.Tags
			} else {
				dst.Tags = nil
			}

		default:
			return fmt.Errorf("invalid field: '%s'", name)
		}
	}
	return nil
}
