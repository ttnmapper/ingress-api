// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.4.2
// - protoc             v3.21.1
// source: lorawan-stack/api/email_messages.proto

package ttnpb

import (
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the CreateClientEmailMessage message to JSON.
func (x *CreateClientEmailMessage) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.CreateClientRequest != nil || s.HasField("create_client_request") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("create_client_request")
		x.CreateClientRequest.MarshalProtoJSON(s.WithField("create_client_request"))
	}
	if x.ApiKey != nil || s.HasField("api_key") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("api_key")
		x.ApiKey.MarshalProtoJSON(s.WithField("api_key"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the CreateClientEmailMessage to JSON.
func (x *CreateClientEmailMessage) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the CreateClientEmailMessage message from JSON.
func (x *CreateClientEmailMessage) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "create_client_request", "createClientRequest":
			if s.ReadNil() {
				x.CreateClientRequest = nil
				return
			}
			x.CreateClientRequest = &CreateClientRequest{}
			x.CreateClientRequest.UnmarshalProtoJSON(s.WithField("create_client_request", true))
		case "api_key", "apiKey":
			if s.ReadNil() {
				x.ApiKey = nil
				return
			}
			x.ApiKey = &APIKey{}
			x.ApiKey.UnmarshalProtoJSON(s.WithField("api_key", true))
		}
	})
}

// UnmarshalJSON unmarshals the CreateClientEmailMessage from JSON.
func (x *CreateClientEmailMessage) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}
