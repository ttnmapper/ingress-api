// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/end_device.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/TheThingsIndustries/protoc-gen-go-flags/annotations"
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Power state of the device.
type PowerState int32

const (
	PowerState_POWER_UNKNOWN  PowerState = 0
	PowerState_POWER_BATTERY  PowerState = 1
	PowerState_POWER_EXTERNAL PowerState = 2
)

var PowerState_name = map[int32]string{
	0: "POWER_UNKNOWN",
	1: "POWER_BATTERY",
	2: "POWER_EXTERNAL",
}

var PowerState_value = map[string]int32{
	"POWER_UNKNOWN":  0,
	"POWER_BATTERY":  1,
	"POWER_EXTERNAL": 2,
}

func (x PowerState) String() string {
	return proto.EnumName(PowerState_name, int32(x))
}

func (PowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{0}
}

type Session struct {
	// Device Address, issued by the Network Server or chosen by device manufacturer in case of testing range (beginning with 00-03).
	// Known by Network Server, Application Server and Join Server. Owned by Network Server.
	DevAddr []byte       `protobuf:"bytes,2,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	Keys    *SessionKeys `protobuf:"bytes,3,opt,name=keys,proto3" json:"keys,omitempty"`
	// Last uplink frame counter value used. Network Server only. Application Server assumes the Network Server checked it.
	LastFCntUp uint32 `protobuf:"varint,4,opt,name=last_f_cnt_up,json=lastFCntUp,proto3" json:"last_f_cnt_up,omitempty"`
	// Last network downlink frame counter value used. Network Server only.
	LastNFCntDown uint32 `protobuf:"varint,5,opt,name=last_n_f_cnt_down,json=lastNFCntDown,proto3" json:"last_n_f_cnt_down,omitempty"`
	// Last application downlink frame counter value used. Application Server only.
	LastAFCntDown uint32 `protobuf:"varint,6,opt,name=last_a_f_cnt_down,json=lastAFCntDown,proto3" json:"last_a_f_cnt_down,omitempty"`
	// Frame counter of the last confirmed downlink message sent. Network Server only.
	LastConfFCntDown uint32 `protobuf:"varint,7,opt,name=last_conf_f_cnt_down,json=lastConfFCntDown,proto3" json:"last_conf_f_cnt_down,omitempty"`
	// Time when the session started. Network Server only.
	StartedAt *types.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Queued Application downlink messages. Stored in Application Server and Network Server.
	QueuedApplicationDownlinks []*ApplicationDownlink `protobuf:"bytes,9,rep,name=queued_application_downlinks,json=queuedApplicationDownlinks,proto3" json:"queued_application_downlinks,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}               `json:"-"`
	XXX_unrecognized           []byte                 `json:"-"`
	XXX_sizecache              int32                  `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{0}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetDevAddr() []byte {
	if m != nil {
		return m.DevAddr
	}
	return nil
}

func (m *Session) GetKeys() *SessionKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Session) GetLastFCntUp() uint32 {
	if m != nil {
		return m.LastFCntUp
	}
	return 0
}

func (m *Session) GetLastNFCntDown() uint32 {
	if m != nil {
		return m.LastNFCntDown
	}
	return 0
}

func (m *Session) GetLastAFCntDown() uint32 {
	if m != nil {
		return m.LastAFCntDown
	}
	return 0
}

func (m *Session) GetLastConfFCntDown() uint32 {
	if m != nil {
		return m.LastConfFCntDown
	}
	return 0
}

func (m *Session) GetStartedAt() *types.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *Session) GetQueuedApplicationDownlinks() []*ApplicationDownlink {
	if m != nil {
		return m.QueuedApplicationDownlinks
	}
	return nil
}

type BoolValue struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolValue) Reset()         { *m = BoolValue{} }
func (m *BoolValue) String() string { return proto.CompactTextString(m) }
func (*BoolValue) ProtoMessage()    {}
func (*BoolValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{1}
}
func (m *BoolValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolValue.Unmarshal(m, b)
}
func (m *BoolValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolValue.Marshal(b, m, deterministic)
}
func (m *BoolValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolValue.Merge(m, src)
}
func (m *BoolValue) XXX_Size() int {
	return xxx_messageInfo_BoolValue.Size(m)
}
func (m *BoolValue) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolValue.DiscardUnknown(m)
}

var xxx_messageInfo_BoolValue proto.InternalMessageInfo

func (m *BoolValue) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// MACParameters represent the parameters of the device's MAC layer (active or desired).
// This is used internally by the Network Server.
type MACParameters struct {
	// Maximum EIRP (dBm).
	MaxEirp float32 `protobuf:"fixed32,1,opt,name=max_eirp,json=maxEirp,proto3" json:"max_eirp,omitempty"`
	// ADR: data rate index to use.
	AdrDataRateIndex DataRateIndex `protobuf:"varint,4,opt,name=adr_data_rate_index,json=adrDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"adr_data_rate_index,omitempty"`
	// ADR: transmission power index to use.
	AdrTxPowerIndex uint32 `protobuf:"varint,5,opt,name=adr_tx_power_index,json=adrTxPowerIndex,proto3" json:"adr_tx_power_index,omitempty"`
	// ADR: number of retransmissions.
	AdrNbTrans uint32 `protobuf:"varint,6,opt,name=adr_nb_trans,json=adrNbTrans,proto3" json:"adr_nb_trans,omitempty"`
	// ADR: number of messages to wait before setting ADRAckReq.
	// This field is deprecated, use adr_ack_limit_exponent instead.
	AdrAckLimit uint32 `protobuf:"varint,7,opt,name=adr_ack_limit,json=adrAckLimit,proto3" json:"adr_ack_limit,omitempty"` // Deprecated: Do not use.
	// ADR: number of messages to wait after setting ADRAckReq and before changing TxPower or DataRate.
	// This field is deprecated, use adr_ack_delay_exponent instead.
	AdrAckDelay uint32 `protobuf:"varint,8,opt,name=adr_ack_delay,json=adrAckDelay,proto3" json:"adr_ack_delay,omitempty"` // Deprecated: Do not use.
	// Rx1 delay (Rx2 delay is Rx1 delay + 1 second).
	Rx1Delay RxDelay `protobuf:"varint,9,opt,name=rx1_delay,json=rx1Delay,proto3,enum=ttn.lorawan.v3.RxDelay" json:"rx1_delay,omitempty"`
	// Data rate offset for Rx1.
	Rx1DataRateOffset DataRateOffset `protobuf:"varint,10,opt,name=rx1_data_rate_offset,json=rx1DataRateOffset,proto3,enum=ttn.lorawan.v3.DataRateOffset" json:"rx1_data_rate_offset,omitempty"`
	// Data rate index for Rx2.
	Rx2DataRateIndex DataRateIndex `protobuf:"varint,11,opt,name=rx2_data_rate_index,json=rx2DataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"rx2_data_rate_index,omitempty"`
	// Frequency for Rx2 (Hz).
	Rx2Frequency uint64 `protobuf:"varint,12,opt,name=rx2_frequency,json=rx2Frequency,proto3" json:"rx2_frequency,omitempty"`
	// Maximum uplink duty cycle (of all channels).
	MaxDutyCycle AggregatedDutyCycle `protobuf:"varint,13,opt,name=max_duty_cycle,json=maxDutyCycle,proto3,enum=ttn.lorawan.v3.AggregatedDutyCycle" json:"max_duty_cycle,omitempty"`
	// Time within which a rejoin-request must be sent.
	RejoinTimePeriodicity RejoinTimeExponent `protobuf:"varint,14,opt,name=rejoin_time_periodicity,json=rejoinTimePeriodicity,proto3,enum=ttn.lorawan.v3.RejoinTimeExponent" json:"rejoin_time_periodicity,omitempty"`
	// Message count within which a rejoin-request must be sent.
	RejoinCountPeriodicity RejoinCountExponent `protobuf:"varint,15,opt,name=rejoin_count_periodicity,json=rejoinCountPeriodicity,proto3,enum=ttn.lorawan.v3.RejoinCountExponent" json:"rejoin_count_periodicity,omitempty"`
	// Frequency of the class B ping slot (Hz).
	PingSlotFrequency uint64 `protobuf:"varint,16,opt,name=ping_slot_frequency,json=pingSlotFrequency,proto3" json:"ping_slot_frequency,omitempty"`
	// Data rate index of the class B ping slot.
	// This field is deprecated, use ping_slot_data_rate_index_value instead.
	PingSlotDataRateIndex DataRateIndex `protobuf:"varint,17,opt,name=ping_slot_data_rate_index,json=pingSlotDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"ping_slot_data_rate_index,omitempty"` // Deprecated: Do not use.
	// Frequency of the class B beacon (Hz).
	BeaconFrequency uint64 `protobuf:"varint,18,opt,name=beacon_frequency,json=beaconFrequency,proto3" json:"beacon_frequency,omitempty"`
	// Configured uplink channels and optionally Rx1 frequency.
	Channels []*MACParameters_Channel `protobuf:"bytes,19,rep,name=channels,proto3" json:"channels,omitempty"`
	// Whether uplink dwell time is set (400ms).
	// If this field is not set, then the value is either unknown or irrelevant(Network Server cannot modify it).
	UplinkDwellTime *BoolValue `protobuf:"bytes,20,opt,name=uplink_dwell_time,json=uplinkDwellTime,proto3" json:"uplink_dwell_time,omitempty"`
	// Whether downlink dwell time is set (400ms).
	// If this field is not set, then the value is either unknown or irrelevant(Network Server cannot modify it).
	DownlinkDwellTime *BoolValue `protobuf:"bytes,21,opt,name=downlink_dwell_time,json=downlinkDwellTime,proto3" json:"downlink_dwell_time,omitempty"`
	// ADR: number of messages to wait before setting ADRAckReq.
	AdrAckLimitExponent *ADRAckLimitExponentValue `protobuf:"bytes,22,opt,name=adr_ack_limit_exponent,json=adrAckLimitExponent,proto3" json:"adr_ack_limit_exponent,omitempty"`
	// ADR: number of messages to wait after setting ADRAckReq and before changing TxPower or DataRate.
	AdrAckDelayExponent *ADRAckDelayExponentValue `protobuf:"bytes,23,opt,name=adr_ack_delay_exponent,json=adrAckDelayExponent,proto3" json:"adr_ack_delay_exponent,omitempty"`
	// Data rate index of the class B ping slot.
	PingSlotDataRateIndexValue *DataRateIndexValue `protobuf:"bytes,24,opt,name=ping_slot_data_rate_index_value,json=pingSlotDataRateIndexValue,proto3" json:"ping_slot_data_rate_index_value,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}            `json:"-"`
	XXX_unrecognized           []byte              `json:"-"`
	XXX_sizecache              int32               `json:"-"`
}

func (m *MACParameters) Reset()         { *m = MACParameters{} }
func (m *MACParameters) String() string { return proto.CompactTextString(m) }
func (*MACParameters) ProtoMessage()    {}
func (*MACParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{2}
}
func (m *MACParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACParameters.Unmarshal(m, b)
}
func (m *MACParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACParameters.Marshal(b, m, deterministic)
}
func (m *MACParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACParameters.Merge(m, src)
}
func (m *MACParameters) XXX_Size() int {
	return xxx_messageInfo_MACParameters.Size(m)
}
func (m *MACParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_MACParameters.DiscardUnknown(m)
}

var xxx_messageInfo_MACParameters proto.InternalMessageInfo

func (m *MACParameters) GetMaxEirp() float32 {
	if m != nil {
		return m.MaxEirp
	}
	return 0
}

func (m *MACParameters) GetAdrDataRateIndex() DataRateIndex {
	if m != nil {
		return m.AdrDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACParameters) GetAdrTxPowerIndex() uint32 {
	if m != nil {
		return m.AdrTxPowerIndex
	}
	return 0
}

func (m *MACParameters) GetAdrNbTrans() uint32 {
	if m != nil {
		return m.AdrNbTrans
	}
	return 0
}

// Deprecated: Do not use.
func (m *MACParameters) GetAdrAckLimit() uint32 {
	if m != nil {
		return m.AdrAckLimit
	}
	return 0
}

// Deprecated: Do not use.
func (m *MACParameters) GetAdrAckDelay() uint32 {
	if m != nil {
		return m.AdrAckDelay
	}
	return 0
}

func (m *MACParameters) GetRx1Delay() RxDelay {
	if m != nil {
		return m.Rx1Delay
	}
	return RxDelay_RX_DELAY_0
}

func (m *MACParameters) GetRx1DataRateOffset() DataRateOffset {
	if m != nil {
		return m.Rx1DataRateOffset
	}
	return DataRateOffset_DATA_RATE_OFFSET_0
}

func (m *MACParameters) GetRx2DataRateIndex() DataRateIndex {
	if m != nil {
		return m.Rx2DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACParameters) GetRx2Frequency() uint64 {
	if m != nil {
		return m.Rx2Frequency
	}
	return 0
}

func (m *MACParameters) GetMaxDutyCycle() AggregatedDutyCycle {
	if m != nil {
		return m.MaxDutyCycle
	}
	return AggregatedDutyCycle_DUTY_CYCLE_1
}

func (m *MACParameters) GetRejoinTimePeriodicity() RejoinTimeExponent {
	if m != nil {
		return m.RejoinTimePeriodicity
	}
	return RejoinTimeExponent_REJOIN_TIME_0
}

func (m *MACParameters) GetRejoinCountPeriodicity() RejoinCountExponent {
	if m != nil {
		return m.RejoinCountPeriodicity
	}
	return RejoinCountExponent_REJOIN_COUNT_16
}

func (m *MACParameters) GetPingSlotFrequency() uint64 {
	if m != nil {
		return m.PingSlotFrequency
	}
	return 0
}

// Deprecated: Do not use.
func (m *MACParameters) GetPingSlotDataRateIndex() DataRateIndex {
	if m != nil {
		return m.PingSlotDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACParameters) GetBeaconFrequency() uint64 {
	if m != nil {
		return m.BeaconFrequency
	}
	return 0
}

func (m *MACParameters) GetChannels() []*MACParameters_Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *MACParameters) GetUplinkDwellTime() *BoolValue {
	if m != nil {
		return m.UplinkDwellTime
	}
	return nil
}

func (m *MACParameters) GetDownlinkDwellTime() *BoolValue {
	if m != nil {
		return m.DownlinkDwellTime
	}
	return nil
}

func (m *MACParameters) GetAdrAckLimitExponent() *ADRAckLimitExponentValue {
	if m != nil {
		return m.AdrAckLimitExponent
	}
	return nil
}

func (m *MACParameters) GetAdrAckDelayExponent() *ADRAckDelayExponentValue {
	if m != nil {
		return m.AdrAckDelayExponent
	}
	return nil
}

func (m *MACParameters) GetPingSlotDataRateIndexValue() *DataRateIndexValue {
	if m != nil {
		return m.PingSlotDataRateIndexValue
	}
	return nil
}

type MACParameters_Channel struct {
	// Uplink frequency of the channel (Hz).
	UplinkFrequency uint64 `protobuf:"varint,1,opt,name=uplink_frequency,json=uplinkFrequency,proto3" json:"uplink_frequency,omitempty"`
	// Downlink frequency of the channel (Hz).
	DownlinkFrequency uint64 `protobuf:"varint,2,opt,name=downlink_frequency,json=downlinkFrequency,proto3" json:"downlink_frequency,omitempty"`
	// Index of the minimum data rate for uplink.
	MinDataRateIndex DataRateIndex `protobuf:"varint,3,opt,name=min_data_rate_index,json=minDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"min_data_rate_index,omitempty"`
	// Index of the maximum data rate for uplink.
	MaxDataRateIndex DataRateIndex `protobuf:"varint,4,opt,name=max_data_rate_index,json=maxDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"max_data_rate_index,omitempty"`
	// Channel can be used by device for uplink.
	EnableUplink         bool     `protobuf:"varint,5,opt,name=enable_uplink,json=enableUplink,proto3" json:"enable_uplink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACParameters_Channel) Reset()         { *m = MACParameters_Channel{} }
func (m *MACParameters_Channel) String() string { return proto.CompactTextString(m) }
func (*MACParameters_Channel) ProtoMessage()    {}
func (*MACParameters_Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{2, 0}
}
func (m *MACParameters_Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACParameters_Channel.Unmarshal(m, b)
}
func (m *MACParameters_Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACParameters_Channel.Marshal(b, m, deterministic)
}
func (m *MACParameters_Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACParameters_Channel.Merge(m, src)
}
func (m *MACParameters_Channel) XXX_Size() int {
	return xxx_messageInfo_MACParameters_Channel.Size(m)
}
func (m *MACParameters_Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_MACParameters_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_MACParameters_Channel proto.InternalMessageInfo

func (m *MACParameters_Channel) GetUplinkFrequency() uint64 {
	if m != nil {
		return m.UplinkFrequency
	}
	return 0
}

func (m *MACParameters_Channel) GetDownlinkFrequency() uint64 {
	if m != nil {
		return m.DownlinkFrequency
	}
	return 0
}

func (m *MACParameters_Channel) GetMinDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MinDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACParameters_Channel) GetMaxDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MaxDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACParameters_Channel) GetEnableUplink() bool {
	if m != nil {
		return m.EnableUplink
	}
	return false
}

// Template for creating end devices.
type EndDeviceVersion struct {
	// Version identifiers.
	Ids *EndDeviceVersionIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	// LoRaWAN MAC version.
	LorawanVersion MACVersion `protobuf:"varint,2,opt,name=lorawan_version,json=lorawanVersion,proto3,enum=ttn.lorawan.v3.MACVersion" json:"lorawan_version,omitempty"`
	// LoRaWAN PHY version.
	LorawanPhyVersion PHYVersion `protobuf:"varint,3,opt,name=lorawan_phy_version,json=lorawanPhyVersion,proto3,enum=ttn.lorawan.v3.PHYVersion" json:"lorawan_phy_version,omitempty"`
	// ID of the frequency plan used by this device.
	FrequencyPlanId string `protobuf:"bytes,4,opt,name=frequency_plan_id,json=frequencyPlanId,proto3" json:"frequency_plan_id,omitempty"`
	// Photos contains file names of device photos.
	Photos []string `protobuf:"bytes,5,rep,name=photos,proto3" json:"photos,omitempty"`
	// Whether the device supports class B.
	SupportsClassB bool `protobuf:"varint,6,opt,name=supports_class_b,json=supportsClassB,proto3" json:"supports_class_b,omitempty"`
	// Whether the device supports class C.
	SupportsClassC bool `protobuf:"varint,7,opt,name=supports_class_c,json=supportsClassC,proto3" json:"supports_class_c,omitempty"`
	// Default MAC layer settings of the device.
	DefaultMacSettings *MACSettings `protobuf:"bytes,8,opt,name=default_mac_settings,json=defaultMacSettings,proto3" json:"default_mac_settings,omitempty"`
	// Minimum frequency the device is capable of using (Hz).
	MinFrequency uint64 `protobuf:"varint,9,opt,name=min_frequency,json=minFrequency,proto3" json:"min_frequency,omitempty"`
	// Maximum frequency the device is capable of using (Hz).
	MaxFrequency uint64 `protobuf:"varint,10,opt,name=max_frequency,json=maxFrequency,proto3" json:"max_frequency,omitempty"`
	// The device supports join (it's OTAA).
	SupportsJoin bool `protobuf:"varint,11,opt,name=supports_join,json=supportsJoin,proto3" json:"supports_join,omitempty"`
	// Whether the device resets the join and dev nonces (not LoRaWAN compliant).
	ResetsJoinNonces bool `protobuf:"varint,12,opt,name=resets_join_nonces,json=resetsJoinNonces,proto3" json:"resets_join_nonces,omitempty"`
	// Default formatters defining the payload formats for this end device.
	DefaultFormatters    *MessagePayloadFormatters `protobuf:"bytes,13,opt,name=default_formatters,json=defaultFormatters,proto3" json:"default_formatters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EndDeviceVersion) Reset()         { *m = EndDeviceVersion{} }
func (m *EndDeviceVersion) String() string { return proto.CompactTextString(m) }
func (*EndDeviceVersion) ProtoMessage()    {}
func (*EndDeviceVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{3}
}
func (m *EndDeviceVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDeviceVersion.Unmarshal(m, b)
}
func (m *EndDeviceVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDeviceVersion.Marshal(b, m, deterministic)
}
func (m *EndDeviceVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDeviceVersion.Merge(m, src)
}
func (m *EndDeviceVersion) XXX_Size() int {
	return xxx_messageInfo_EndDeviceVersion.Size(m)
}
func (m *EndDeviceVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDeviceVersion.DiscardUnknown(m)
}

var xxx_messageInfo_EndDeviceVersion proto.InternalMessageInfo

func (m *EndDeviceVersion) GetIds() *EndDeviceVersionIdentifiers {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *EndDeviceVersion) GetLorawanVersion() MACVersion {
	if m != nil {
		return m.LorawanVersion
	}
	return MACVersion_MAC_UNKNOWN
}

func (m *EndDeviceVersion) GetLorawanPhyVersion() PHYVersion {
	if m != nil {
		return m.LorawanPhyVersion
	}
	return PHYVersion_PHY_UNKNOWN
}

func (m *EndDeviceVersion) GetFrequencyPlanId() string {
	if m != nil {
		return m.FrequencyPlanId
	}
	return ""
}

func (m *EndDeviceVersion) GetPhotos() []string {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *EndDeviceVersion) GetSupportsClassB() bool {
	if m != nil {
		return m.SupportsClassB
	}
	return false
}

func (m *EndDeviceVersion) GetSupportsClassC() bool {
	if m != nil {
		return m.SupportsClassC
	}
	return false
}

func (m *EndDeviceVersion) GetDefaultMacSettings() *MACSettings {
	if m != nil {
		return m.DefaultMacSettings
	}
	return nil
}

func (m *EndDeviceVersion) GetMinFrequency() uint64 {
	if m != nil {
		return m.MinFrequency
	}
	return 0
}

func (m *EndDeviceVersion) GetMaxFrequency() uint64 {
	if m != nil {
		return m.MaxFrequency
	}
	return 0
}

func (m *EndDeviceVersion) GetSupportsJoin() bool {
	if m != nil {
		return m.SupportsJoin
	}
	return false
}

func (m *EndDeviceVersion) GetResetsJoinNonces() bool {
	if m != nil {
		return m.ResetsJoinNonces
	}
	return false
}

func (m *EndDeviceVersion) GetDefaultFormatters() *MessagePayloadFormatters {
	if m != nil {
		return m.DefaultFormatters
	}
	return nil
}

// Adaptive Data Rate settings.
type ADRSettings struct {
	// Types that are valid to be assigned to Mode:
	//	*ADRSettings_Static
	//	*ADRSettings_Dynamic
	//	*ADRSettings_Disabled
	Mode                 isADRSettings_Mode `protobuf_oneof:"mode"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ADRSettings) Reset()         { *m = ADRSettings{} }
func (m *ADRSettings) String() string { return proto.CompactTextString(m) }
func (*ADRSettings) ProtoMessage()    {}
func (*ADRSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{4}
}
func (m *ADRSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRSettings.Unmarshal(m, b)
}
func (m *ADRSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRSettings.Marshal(b, m, deterministic)
}
func (m *ADRSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRSettings.Merge(m, src)
}
func (m *ADRSettings) XXX_Size() int {
	return xxx_messageInfo_ADRSettings.Size(m)
}
func (m *ADRSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ADRSettings proto.InternalMessageInfo

type isADRSettings_Mode interface {
	isADRSettings_Mode()
}

type ADRSettings_Static struct {
	Static *ADRSettings_StaticMode `protobuf:"bytes,1,opt,name=static,proto3,oneof" json:"static,omitempty"`
}
type ADRSettings_Dynamic struct {
	Dynamic *ADRSettings_DynamicMode `protobuf:"bytes,2,opt,name=dynamic,proto3,oneof" json:"dynamic,omitempty"`
}
type ADRSettings_Disabled struct {
	Disabled *ADRSettings_DisabledMode `protobuf:"bytes,3,opt,name=disabled,proto3,oneof" json:"disabled,omitempty"`
}

func (*ADRSettings_Static) isADRSettings_Mode()   {}
func (*ADRSettings_Dynamic) isADRSettings_Mode()  {}
func (*ADRSettings_Disabled) isADRSettings_Mode() {}

func (m *ADRSettings) GetMode() isADRSettings_Mode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *ADRSettings) GetStatic() *ADRSettings_StaticMode {
	if x, ok := m.GetMode().(*ADRSettings_Static); ok {
		return x.Static
	}
	return nil
}

func (m *ADRSettings) GetDynamic() *ADRSettings_DynamicMode {
	if x, ok := m.GetMode().(*ADRSettings_Dynamic); ok {
		return x.Dynamic
	}
	return nil
}

func (m *ADRSettings) GetDisabled() *ADRSettings_DisabledMode {
	if x, ok := m.GetMode().(*ADRSettings_Disabled); ok {
		return x.Disabled
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ADRSettings) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ADRSettings_Static)(nil),
		(*ADRSettings_Dynamic)(nil),
		(*ADRSettings_Disabled)(nil),
	}
}

// Configuration options for static ADR.
type ADRSettings_StaticMode struct {
	// Data rate index to use.
	DataRateIndex DataRateIndex `protobuf:"varint,1,opt,name=data_rate_index,json=dataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"data_rate_index,omitempty"`
	// Transmission power index to use.
	TxPowerIndex uint32 `protobuf:"varint,2,opt,name=tx_power_index,json=txPowerIndex,proto3" json:"tx_power_index,omitempty"`
	// Number of retransmissions.
	NbTrans              uint32   `protobuf:"varint,3,opt,name=nb_trans,json=nbTrans,proto3" json:"nb_trans,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADRSettings_StaticMode) Reset()         { *m = ADRSettings_StaticMode{} }
func (m *ADRSettings_StaticMode) String() string { return proto.CompactTextString(m) }
func (*ADRSettings_StaticMode) ProtoMessage()    {}
func (*ADRSettings_StaticMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{4, 0}
}
func (m *ADRSettings_StaticMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRSettings_StaticMode.Unmarshal(m, b)
}
func (m *ADRSettings_StaticMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRSettings_StaticMode.Marshal(b, m, deterministic)
}
func (m *ADRSettings_StaticMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRSettings_StaticMode.Merge(m, src)
}
func (m *ADRSettings_StaticMode) XXX_Size() int {
	return xxx_messageInfo_ADRSettings_StaticMode.Size(m)
}
func (m *ADRSettings_StaticMode) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRSettings_StaticMode.DiscardUnknown(m)
}

var xxx_messageInfo_ADRSettings_StaticMode proto.InternalMessageInfo

func (m *ADRSettings_StaticMode) GetDataRateIndex() DataRateIndex {
	if m != nil {
		return m.DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *ADRSettings_StaticMode) GetTxPowerIndex() uint32 {
	if m != nil {
		return m.TxPowerIndex
	}
	return 0
}

func (m *ADRSettings_StaticMode) GetNbTrans() uint32 {
	if m != nil {
		return m.NbTrans
	}
	return 0
}

// Configuration options for dynamic ADR.
type ADRSettings_DynamicMode struct {
	// The ADR margin (dB) tells the network server how much margin it should add in ADR requests.
	// A bigger margin is less efficient, but gives a better chance of successful reception.
	// If unset, the default value from Network Server configuration will be used.
	Margin *types.FloatValue `protobuf:"bytes,1,opt,name=margin,proto3" json:"margin,omitempty"`
	// Minimum data rate index.
	// If unset, the default value from Network Server configuration will be used.
	MinDataRateIndex *DataRateIndexValue `protobuf:"bytes,2,opt,name=min_data_rate_index,json=minDataRateIndex,proto3" json:"min_data_rate_index,omitempty"`
	// Maximum data rate index.
	// If unset, the default value from Network Server configuration will be used.
	MaxDataRateIndex *DataRateIndexValue `protobuf:"bytes,3,opt,name=max_data_rate_index,json=maxDataRateIndex,proto3" json:"max_data_rate_index,omitempty"`
	// Minimum transmission power index.
	// If unset, the default value from Network Server configuration will be used.
	MinTxPowerIndex *types.UInt32Value `protobuf:"bytes,4,opt,name=min_tx_power_index,json=minTxPowerIndex,proto3" json:"min_tx_power_index,omitempty"`
	// Maximum transmission power index.
	// If unset, the default value from Network Server configuration will be used.
	MaxTxPowerIndex *types.UInt32Value `protobuf:"bytes,5,opt,name=max_tx_power_index,json=maxTxPowerIndex,proto3" json:"max_tx_power_index,omitempty"`
	// Minimum number of retransmissions.
	// If unset, the default value from Network Server configuration will be used.
	MinNbTrans *types.UInt32Value `protobuf:"bytes,6,opt,name=min_nb_trans,json=minNbTrans,proto3" json:"min_nb_trans,omitempty"`
	// Maximum number of retransmissions.
	// If unset, the default value from Network Server configuration will be used.
	MaxNbTrans           *types.UInt32Value `protobuf:"bytes,7,opt,name=max_nb_trans,json=maxNbTrans,proto3" json:"max_nb_trans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ADRSettings_DynamicMode) Reset()         { *m = ADRSettings_DynamicMode{} }
func (m *ADRSettings_DynamicMode) String() string { return proto.CompactTextString(m) }
func (*ADRSettings_DynamicMode) ProtoMessage()    {}
func (*ADRSettings_DynamicMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{4, 1}
}
func (m *ADRSettings_DynamicMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRSettings_DynamicMode.Unmarshal(m, b)
}
func (m *ADRSettings_DynamicMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRSettings_DynamicMode.Marshal(b, m, deterministic)
}
func (m *ADRSettings_DynamicMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRSettings_DynamicMode.Merge(m, src)
}
func (m *ADRSettings_DynamicMode) XXX_Size() int {
	return xxx_messageInfo_ADRSettings_DynamicMode.Size(m)
}
func (m *ADRSettings_DynamicMode) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRSettings_DynamicMode.DiscardUnknown(m)
}

var xxx_messageInfo_ADRSettings_DynamicMode proto.InternalMessageInfo

func (m *ADRSettings_DynamicMode) GetMargin() *types.FloatValue {
	if m != nil {
		return m.Margin
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMinDataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.MinDataRateIndex
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMaxDataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.MaxDataRateIndex
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMinTxPowerIndex() *types.UInt32Value {
	if m != nil {
		return m.MinTxPowerIndex
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMaxTxPowerIndex() *types.UInt32Value {
	if m != nil {
		return m.MaxTxPowerIndex
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMinNbTrans() *types.UInt32Value {
	if m != nil {
		return m.MinNbTrans
	}
	return nil
}

func (m *ADRSettings_DynamicMode) GetMaxNbTrans() *types.UInt32Value {
	if m != nil {
		return m.MaxNbTrans
	}
	return nil
}

// Configuration options for cases in which ADR is to be disabled
// completely.
type ADRSettings_DisabledMode struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADRSettings_DisabledMode) Reset()         { *m = ADRSettings_DisabledMode{} }
func (m *ADRSettings_DisabledMode) String() string { return proto.CompactTextString(m) }
func (*ADRSettings_DisabledMode) ProtoMessage()    {}
func (*ADRSettings_DisabledMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{4, 2}
}
func (m *ADRSettings_DisabledMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRSettings_DisabledMode.Unmarshal(m, b)
}
func (m *ADRSettings_DisabledMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRSettings_DisabledMode.Marshal(b, m, deterministic)
}
func (m *ADRSettings_DisabledMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRSettings_DisabledMode.Merge(m, src)
}
func (m *ADRSettings_DisabledMode) XXX_Size() int {
	return xxx_messageInfo_ADRSettings_DisabledMode.Size(m)
}
func (m *ADRSettings_DisabledMode) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRSettings_DisabledMode.DiscardUnknown(m)
}

var xxx_messageInfo_ADRSettings_DisabledMode proto.InternalMessageInfo

type MACSettings struct {
	// Maximum delay for the device to answer a MAC request or a confirmed downlink frame.
	// If unset, the default value from Network Server configuration will be used.
	ClassBTimeout *types.Duration `protobuf:"bytes,1,opt,name=class_b_timeout,json=classBTimeout,proto3" json:"class_b_timeout,omitempty"`
	// Periodicity of the class B ping slot.
	// If unset, the default value from Network Server configuration will be used.
	PingSlotPeriodicity *PingSlotPeriodValue `protobuf:"bytes,2,opt,name=ping_slot_periodicity,json=pingSlotPeriodicity,proto3" json:"ping_slot_periodicity,omitempty"`
	// Data rate index of the class B ping slot.
	// If unset, the default value from Network Server configuration will be used.
	PingSlotDataRateIndex *DataRateIndexValue `protobuf:"bytes,3,opt,name=ping_slot_data_rate_index,json=pingSlotDataRateIndex,proto3" json:"ping_slot_data_rate_index,omitempty"`
	// Frequency of the class B ping slot (Hz).
	// If unset, the default value from Network Server configuration will be used.
	PingSlotFrequency *FrequencyValue `protobuf:"bytes,4,opt,name=ping_slot_frequency,json=pingSlotFrequency,proto3" json:"ping_slot_frequency,omitempty"`
	// Frequency of the class B beacon (Hz).
	// If unset, the default value from Network Server configuration will be used.
	BeaconFrequency *FrequencyValue `protobuf:"bytes,25,opt,name=beacon_frequency,json=beaconFrequency,proto3" json:"beacon_frequency,omitempty"`
	// Maximum delay for the device to answer a MAC request or a confirmed downlink frame.
	// If unset, the default value from Network Server configuration will be used.
	ClassCTimeout *types.Duration `protobuf:"bytes,5,opt,name=class_c_timeout,json=classCTimeout,proto3" json:"class_c_timeout,omitempty"`
	// Class A Rx1 delay.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	Rx1Delay *RxDelayValue `protobuf:"bytes,6,opt,name=rx1_delay,json=rx1Delay,proto3" json:"rx1_delay,omitempty"`
	// Rx1 data rate offset.
	// If unset, the default value from Network Server configuration will be used.
	Rx1DataRateOffset *DataRateOffsetValue `protobuf:"bytes,7,opt,name=rx1_data_rate_offset,json=rx1DataRateOffset,proto3" json:"rx1_data_rate_offset,omitempty"`
	// Data rate index for Rx2.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	Rx2DataRateIndex *DataRateIndexValue `protobuf:"bytes,8,opt,name=rx2_data_rate_index,json=rx2DataRateIndex,proto3" json:"rx2_data_rate_index,omitempty"`
	// Frequency for Rx2 (Hz).
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	Rx2Frequency *FrequencyValue `protobuf:"bytes,9,opt,name=rx2_frequency,json=rx2Frequency,proto3" json:"rx2_frequency,omitempty"`
	// List of factory-preset frequencies.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	FactoryPresetFrequencies []uint64 `protobuf:"varint,10,rep,packed,name=factory_preset_frequencies,json=factoryPresetFrequencies,proto3" json:"factory_preset_frequencies,omitempty"`
	// Maximum uplink duty cycle (of all channels).
	MaxDutyCycle *AggregatedDutyCycleValue `protobuf:"bytes,11,opt,name=max_duty_cycle,json=maxDutyCycle,proto3" json:"max_duty_cycle,omitempty"`
	// Whether the device supports 32-bit frame counters.
	// If unset, the default value from Network Server configuration will be used.
	Supports_32BitFCnt *BoolValue `protobuf:"bytes,12,opt,name=supports_32_bit_f_cnt,json=supports32BitFCnt,proto3" json:"supports_32_bit_f_cnt,omitempty"`
	// Whether the Network Server should use ADR for the device.
	// This field is deprecated, use adr_settings instead.
	UseAdr *BoolValue `protobuf:"bytes,13,opt,name=use_adr,json=useAdr,proto3" json:"use_adr,omitempty"` // Deprecated: Do not use.
	// The ADR margin (dB) tells the network server how much margin it should add in ADR requests.
	// A bigger margin is less efficient, but gives a better chance of successful reception.
	// This field is deprecated, use adr_settings.dynamic.margin instead.
	AdrMargin *types.FloatValue `protobuf:"bytes,14,opt,name=adr_margin,json=adrMargin,proto3" json:"adr_margin,omitempty"` // Deprecated: Do not use.
	// Whether the device resets the frame counters (not LoRaWAN compliant).
	// If unset, the default value from Network Server configuration will be used.
	ResetsFCnt *BoolValue `protobuf:"bytes,15,opt,name=resets_f_cnt,json=resetsFCnt,proto3" json:"resets_f_cnt,omitempty"`
	// The interval after which a DevStatusReq MACCommand shall be sent.
	// If unset, the default value from Network Server configuration will be used.
	StatusTimePeriodicity *types.Duration `protobuf:"bytes,16,opt,name=status_time_periodicity,json=statusTimePeriodicity,proto3" json:"status_time_periodicity,omitempty"`
	// Number of uplink messages after which a DevStatusReq MACCommand shall be sent.
	// If unset, the default value from Network Server configuration will be used.
	StatusCountPeriodicity *types.UInt32Value `protobuf:"bytes,17,opt,name=status_count_periodicity,json=statusCountPeriodicity,proto3" json:"status_count_periodicity,omitempty"`
	// The Rx1 delay Network Server should configure device to use via MAC commands or Join-Accept.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	DesiredRx1Delay *RxDelayValue `protobuf:"bytes,18,opt,name=desired_rx1_delay,json=desiredRx1Delay,proto3" json:"desired_rx1_delay,omitempty"`
	// The Rx1 data rate offset Network Server should configure device to use via MAC commands or Join-Accept.
	// If unset, the default value from Network Server configuration will be used.
	DesiredRx1DataRateOffset *DataRateOffsetValue `protobuf:"bytes,19,opt,name=desired_rx1_data_rate_offset,json=desiredRx1DataRateOffset,proto3" json:"desired_rx1_data_rate_offset,omitempty"`
	// The Rx2 data rate index Network Server should configure device to use via MAC commands or Join-Accept.
	// If unset, the default value from frequency plan, Network Server configuration or regional parameters specification will be used.
	DesiredRx2DataRateIndex *DataRateIndexValue `protobuf:"bytes,20,opt,name=desired_rx2_data_rate_index,json=desiredRx2DataRateIndex,proto3" json:"desired_rx2_data_rate_index,omitempty"`
	// The Rx2 frequency index Network Server should configure device to use via MAC commands.
	// If unset, the default value from frequency plan, Network Server configuration or regional parameters specification will be used.
	DesiredRx2Frequency *FrequencyValue `protobuf:"bytes,21,opt,name=desired_rx2_frequency,json=desiredRx2Frequency,proto3" json:"desired_rx2_frequency,omitempty"`
	// The maximum uplink duty cycle (of all channels) Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration will be used.
	DesiredMaxDutyCycle *AggregatedDutyCycleValue `protobuf:"bytes,22,opt,name=desired_max_duty_cycle,json=desiredMaxDutyCycle,proto3" json:"desired_max_duty_cycle,omitempty"`
	// The ADR ACK limit Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	DesiredAdrAckLimitExponent *ADRAckLimitExponentValue `protobuf:"bytes,23,opt,name=desired_adr_ack_limit_exponent,json=desiredAdrAckLimitExponent,proto3" json:"desired_adr_ack_limit_exponent,omitempty"`
	// The ADR ACK delay Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	DesiredAdrAckDelayExponent *ADRAckDelayExponentValue `protobuf:"bytes,24,opt,name=desired_adr_ack_delay_exponent,json=desiredAdrAckDelayExponent,proto3" json:"desired_adr_ack_delay_exponent,omitempty"`
	// The data rate index of the class B ping slot Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration will be used.
	DesiredPingSlotDataRateIndex *DataRateIndexValue `protobuf:"bytes,27,opt,name=desired_ping_slot_data_rate_index,json=desiredPingSlotDataRateIndex,proto3" json:"desired_ping_slot_data_rate_index,omitempty"`
	// The frequency of the class B ping slot (Hz) Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	DesiredPingSlotFrequency *FrequencyValue `protobuf:"bytes,28,opt,name=desired_ping_slot_frequency,json=desiredPingSlotFrequency,proto3" json:"desired_ping_slot_frequency,omitempty"`
	// The frequency of the class B beacon (Hz) Network Server should configure device to use via MAC commands.
	// If unset, the default value from Network Server configuration will be used.
	DesiredBeaconFrequency *FrequencyValue `protobuf:"bytes,29,opt,name=desired_beacon_frequency,json=desiredBeaconFrequency,proto3" json:"desired_beacon_frequency,omitempty"`
	// Maximum EIRP (dBm).
	// If unset, the default value from regional parameters specification will be used.
	DesiredMaxEirp *DeviceEIRPValue `protobuf:"bytes,30,opt,name=desired_max_eirp,json=desiredMaxEirp,proto3" json:"desired_max_eirp,omitempty"`
	// The minimum duration passed before a network-initiated(e.g. Class B or C) downlink following an arbitrary downlink.
	ClassBCDownlinkInterval *types.Duration `protobuf:"bytes,31,opt,name=class_b_c_downlink_interval,json=classBCDownlinkInterval,proto3" json:"class_b_c_downlink_interval,omitempty"`
	// Whether uplink dwell time is set (400ms).
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	UplinkDwellTime *BoolValue `protobuf:"bytes,32,opt,name=uplink_dwell_time,json=uplinkDwellTime,proto3" json:"uplink_dwell_time,omitempty"`
	// Whether downlink dwell time is set (400ms).
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	DownlinkDwellTime *BoolValue `protobuf:"bytes,33,opt,name=downlink_dwell_time,json=downlinkDwellTime,proto3" json:"downlink_dwell_time,omitempty"`
	// Adaptive Data Rate settings.
	// If unset, the default value from Network Server configuration or regional parameters specification will be used.
	Adr *ADRSettings `protobuf:"bytes,34,opt,name=adr,proto3" json:"adr,omitempty"`
	// Whether or not downlink messages should be scheduled.
	// This option can be used in order to disable any downlink interaction with the end device. It will affect all types
	// of downlink messages: data and MAC downlinks, and join accepts.
	ScheduleDownlinks    *BoolValue `protobuf:"bytes,35,opt,name=schedule_downlinks,json=scheduleDownlinks,proto3" json:"schedule_downlinks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MACSettings) Reset()         { *m = MACSettings{} }
func (m *MACSettings) String() string { return proto.CompactTextString(m) }
func (*MACSettings) ProtoMessage()    {}
func (*MACSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{5}
}
func (m *MACSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACSettings.Unmarshal(m, b)
}
func (m *MACSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACSettings.Marshal(b, m, deterministic)
}
func (m *MACSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACSettings.Merge(m, src)
}
func (m *MACSettings) XXX_Size() int {
	return xxx_messageInfo_MACSettings.Size(m)
}
func (m *MACSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MACSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MACSettings proto.InternalMessageInfo

func (m *MACSettings) GetClassBTimeout() *types.Duration {
	if m != nil {
		return m.ClassBTimeout
	}
	return nil
}

func (m *MACSettings) GetPingSlotPeriodicity() *PingSlotPeriodValue {
	if m != nil {
		return m.PingSlotPeriodicity
	}
	return nil
}

func (m *MACSettings) GetPingSlotDataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.PingSlotDataRateIndex
	}
	return nil
}

func (m *MACSettings) GetPingSlotFrequency() *FrequencyValue {
	if m != nil {
		return m.PingSlotFrequency
	}
	return nil
}

func (m *MACSettings) GetBeaconFrequency() *FrequencyValue {
	if m != nil {
		return m.BeaconFrequency
	}
	return nil
}

func (m *MACSettings) GetClassCTimeout() *types.Duration {
	if m != nil {
		return m.ClassCTimeout
	}
	return nil
}

func (m *MACSettings) GetRx1Delay() *RxDelayValue {
	if m != nil {
		return m.Rx1Delay
	}
	return nil
}

func (m *MACSettings) GetRx1DataRateOffset() *DataRateOffsetValue {
	if m != nil {
		return m.Rx1DataRateOffset
	}
	return nil
}

func (m *MACSettings) GetRx2DataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.Rx2DataRateIndex
	}
	return nil
}

func (m *MACSettings) GetRx2Frequency() *FrequencyValue {
	if m != nil {
		return m.Rx2Frequency
	}
	return nil
}

func (m *MACSettings) GetFactoryPresetFrequencies() []uint64 {
	if m != nil {
		return m.FactoryPresetFrequencies
	}
	return nil
}

func (m *MACSettings) GetMaxDutyCycle() *AggregatedDutyCycleValue {
	if m != nil {
		return m.MaxDutyCycle
	}
	return nil
}

func (m *MACSettings) GetSupports_32BitFCnt() *BoolValue {
	if m != nil {
		return m.Supports_32BitFCnt
	}
	return nil
}

// Deprecated: Do not use.
func (m *MACSettings) GetUseAdr() *BoolValue {
	if m != nil {
		return m.UseAdr
	}
	return nil
}

// Deprecated: Do not use.
func (m *MACSettings) GetAdrMargin() *types.FloatValue {
	if m != nil {
		return m.AdrMargin
	}
	return nil
}

func (m *MACSettings) GetResetsFCnt() *BoolValue {
	if m != nil {
		return m.ResetsFCnt
	}
	return nil
}

func (m *MACSettings) GetStatusTimePeriodicity() *types.Duration {
	if m != nil {
		return m.StatusTimePeriodicity
	}
	return nil
}

func (m *MACSettings) GetStatusCountPeriodicity() *types.UInt32Value {
	if m != nil {
		return m.StatusCountPeriodicity
	}
	return nil
}

func (m *MACSettings) GetDesiredRx1Delay() *RxDelayValue {
	if m != nil {
		return m.DesiredRx1Delay
	}
	return nil
}

func (m *MACSettings) GetDesiredRx1DataRateOffset() *DataRateOffsetValue {
	if m != nil {
		return m.DesiredRx1DataRateOffset
	}
	return nil
}

func (m *MACSettings) GetDesiredRx2DataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.DesiredRx2DataRateIndex
	}
	return nil
}

func (m *MACSettings) GetDesiredRx2Frequency() *FrequencyValue {
	if m != nil {
		return m.DesiredRx2Frequency
	}
	return nil
}

func (m *MACSettings) GetDesiredMaxDutyCycle() *AggregatedDutyCycleValue {
	if m != nil {
		return m.DesiredMaxDutyCycle
	}
	return nil
}

func (m *MACSettings) GetDesiredAdrAckLimitExponent() *ADRAckLimitExponentValue {
	if m != nil {
		return m.DesiredAdrAckLimitExponent
	}
	return nil
}

func (m *MACSettings) GetDesiredAdrAckDelayExponent() *ADRAckDelayExponentValue {
	if m != nil {
		return m.DesiredAdrAckDelayExponent
	}
	return nil
}

func (m *MACSettings) GetDesiredPingSlotDataRateIndex() *DataRateIndexValue {
	if m != nil {
		return m.DesiredPingSlotDataRateIndex
	}
	return nil
}

func (m *MACSettings) GetDesiredPingSlotFrequency() *FrequencyValue {
	if m != nil {
		return m.DesiredPingSlotFrequency
	}
	return nil
}

func (m *MACSettings) GetDesiredBeaconFrequency() *FrequencyValue {
	if m != nil {
		return m.DesiredBeaconFrequency
	}
	return nil
}

func (m *MACSettings) GetDesiredMaxEirp() *DeviceEIRPValue {
	if m != nil {
		return m.DesiredMaxEirp
	}
	return nil
}

func (m *MACSettings) GetClassBCDownlinkInterval() *types.Duration {
	if m != nil {
		return m.ClassBCDownlinkInterval
	}
	return nil
}

func (m *MACSettings) GetUplinkDwellTime() *BoolValue {
	if m != nil {
		return m.UplinkDwellTime
	}
	return nil
}

func (m *MACSettings) GetDownlinkDwellTime() *BoolValue {
	if m != nil {
		return m.DownlinkDwellTime
	}
	return nil
}

func (m *MACSettings) GetAdr() *ADRSettings {
	if m != nil {
		return m.Adr
	}
	return nil
}

func (m *MACSettings) GetScheduleDownlinks() *BoolValue {
	if m != nil {
		return m.ScheduleDownlinks
	}
	return nil
}

// MACState represents the state of MAC layer of the device.
// MACState is reset on each join for OTAA or ResetInd for ABP devices.
// This is used internally by the Network Server.
type MACState struct {
	// Current LoRaWAN MAC parameters.
	CurrentParameters *MACParameters `protobuf:"bytes,1,opt,name=current_parameters,json=currentParameters,proto3" json:"current_parameters,omitempty"`
	// Desired LoRaWAN MAC parameters.
	DesiredParameters *MACParameters `protobuf:"bytes,2,opt,name=desired_parameters,json=desiredParameters,proto3" json:"desired_parameters,omitempty"`
	// Currently active LoRaWAN device class
	// - Device class is A by default
	// - If device sets ClassB bit in uplink, this will be set to B
	// - If device sent DeviceModeInd MAC message, this will be set to that value
	DeviceClass Class `protobuf:"varint,3,opt,name=device_class,json=deviceClass,proto3,enum=ttn.lorawan.v3.Class" json:"device_class,omitempty"`
	// LoRaWAN MAC version.
	LorawanVersion MACVersion `protobuf:"varint,4,opt,name=lorawan_version,json=lorawanVersion,proto3,enum=ttn.lorawan.v3.MACVersion" json:"lorawan_version,omitempty"`
	// Time when the last confirmed downlink message or MAC command was scheduled.
	LastConfirmedDownlinkAt *types.Timestamp `protobuf:"bytes,5,opt,name=last_confirmed_downlink_at,json=lastConfirmedDownlinkAt,proto3" json:"last_confirmed_downlink_at,omitempty"`
	// Frame counter value of last uplink containing DevStatusAns.
	LastDevStatusFCntUp uint32 `protobuf:"varint,6,opt,name=last_dev_status_f_cnt_up,json=lastDevStatusFCntUp,proto3" json:"last_dev_status_f_cnt_up,omitempty"`
	// Periodicity of the class B ping slot.
	PingSlotPeriodicity *PingSlotPeriodValue `protobuf:"bytes,7,opt,name=ping_slot_periodicity,json=pingSlotPeriodicity,proto3" json:"ping_slot_periodicity,omitempty"`
	// A confirmed application downlink, for which an acknowledgment is expected to arrive.
	PendingApplicationDownlink *ApplicationDownlink `protobuf:"bytes,8,opt,name=pending_application_downlink,json=pendingApplicationDownlink,proto3" json:"pending_application_downlink,omitempty"`
	// Queued MAC responses.
	// Regenerated on each uplink.
	QueuedResponses []*MACCommand `protobuf:"bytes,9,rep,name=queued_responses,json=queuedResponses,proto3" json:"queued_responses,omitempty"`
	// Pending MAC requests(i.e. sent requests, for which no response has been received yet).
	// Regenerated on each downlink.
	PendingRequests []*MACCommand `protobuf:"bytes,10,rep,name=pending_requests,json=pendingRequests,proto3" json:"pending_requests,omitempty"`
	// Queued join-accept.
	// Set each time a (re-)join request accept is received from Join Server and removed each time a downlink is scheduled.
	QueuedJoinAccept *MACState_JoinAccept `protobuf:"bytes,11,opt,name=queued_join_accept,json=queuedJoinAccept,proto3" json:"queued_join_accept,omitempty"`
	// Pending join request.
	// Set each time a join-accept is scheduled and removed each time an uplink is received from the device.
	PendingJoinRequest *MACState_JoinRequest `protobuf:"bytes,12,opt,name=pending_join_request,json=pendingJoinRequest,proto3" json:"pending_join_request,omitempty"`
	// Whether or not Rx windows are expected to be open.
	// Set to true every time an uplink is received.
	// Set to false every time a successful downlink scheduling attempt is made.
	RxWindowsAvailable bool `protobuf:"varint,13,opt,name=rx_windows_available,json=rxWindowsAvailable,proto3" json:"rx_windows_available,omitempty"`
	// Recent data uplink messages sorted by time.
	// The number of messages stored may depend on configuration.
	RecentUplinks []*MACState_UplinkMessage `protobuf:"bytes,14,rep,name=recent_uplinks,json=recentUplinks,proto3" json:"recent_uplinks,omitempty"`
	// Recent data downlink messages sorted by time.
	// The number of messages stored may depend on configuration.
	RecentDownlinks []*MACState_DownlinkMessage `protobuf:"bytes,15,rep,name=recent_downlinks,json=recentDownlinks,proto3" json:"recent_downlinks,omitempty"`
	// Time when the last network-initiated downlink message was scheduled.
	LastNetworkInitiatedDownlinkAt *types.Timestamp `protobuf:"bytes,16,opt,name=last_network_initiated_downlink_at,json=lastNetworkInitiatedDownlinkAt,proto3" json:"last_network_initiated_downlink_at,omitempty"`
	// ADR Data rate index values rejected by the device.
	// Reset each time `current_parameters.channels` change.
	// Elements are sorted in ascending order.
	RejectedAdrDataRateIndexes []DataRateIndex `protobuf:"varint,17,rep,packed,name=rejected_adr_data_rate_indexes,json=rejectedAdrDataRateIndexes,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"rejected_adr_data_rate_indexes,omitempty"`
	// ADR TX output power index values rejected by the device.
	// Elements are sorted in ascending order.
	RejectedAdrTxPowerIndexes []uint32 `protobuf:"varint,18,rep,packed,name=rejected_adr_tx_power_indexes,json=rejectedAdrTxPowerIndexes,proto3" json:"rejected_adr_tx_power_indexes,omitempty"`
	// Frequencies rejected by the device.
	RejectedFrequencies []uint64 `protobuf:"varint,19,rep,packed,name=rejected_frequencies,json=rejectedFrequencies,proto3" json:"rejected_frequencies,omitempty"`
	// Time when the last downlink message was scheduled.
	LastDownlinkAt *types.Timestamp `protobuf:"bytes,20,opt,name=last_downlink_at,json=lastDownlinkAt,proto3" json:"last_downlink_at,omitempty"`
	// Data rate ranges rejected by the device per frequency.
	RejectedDataRateRanges map[uint64]*MACState_DataRateRanges `protobuf:"bytes,21,rep,name=rejected_data_rate_ranges,json=rejectedDataRateRanges,proto3" json:"rejected_data_rate_ranges,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Frame counter of uplink, which confirmed the last ADR parameter change.
	LastAdrChangeFCntUp uint32 `protobuf:"varint,22,opt,name=last_adr_change_f_cnt_up,json=lastAdrChangeFCntUp,proto3" json:"last_adr_change_f_cnt_up,omitempty"`
	// MAC command identifiers sent by the end device in the last received uplink.
	// The Network Server may choose to store only certain types of MAC
	// command identifiers in the underlying implementation.
	RecentMacCommandIdentifiers []MACCommandIdentifier `protobuf:"varint,23,rep,packed,name=recent_mac_command_identifiers,json=recentMacCommandIdentifiers,proto3,enum=ttn.lorawan.v3.MACCommandIdentifier" json:"recent_mac_command_identifiers,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}               `json:"-"`
	XXX_unrecognized            []byte                 `json:"-"`
	XXX_sizecache               int32                  `json:"-"`
}

func (m *MACState) Reset()         { *m = MACState{} }
func (m *MACState) String() string { return proto.CompactTextString(m) }
func (*MACState) ProtoMessage()    {}
func (*MACState) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6}
}
func (m *MACState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState.Unmarshal(m, b)
}
func (m *MACState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState.Marshal(b, m, deterministic)
}
func (m *MACState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState.Merge(m, src)
}
func (m *MACState) XXX_Size() int {
	return xxx_messageInfo_MACState.Size(m)
}
func (m *MACState) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState.DiscardUnknown(m)
}

var xxx_messageInfo_MACState proto.InternalMessageInfo

func (m *MACState) GetCurrentParameters() *MACParameters {
	if m != nil {
		return m.CurrentParameters
	}
	return nil
}

func (m *MACState) GetDesiredParameters() *MACParameters {
	if m != nil {
		return m.DesiredParameters
	}
	return nil
}

func (m *MACState) GetDeviceClass() Class {
	if m != nil {
		return m.DeviceClass
	}
	return Class_CLASS_A
}

func (m *MACState) GetLorawanVersion() MACVersion {
	if m != nil {
		return m.LorawanVersion
	}
	return MACVersion_MAC_UNKNOWN
}

func (m *MACState) GetLastConfirmedDownlinkAt() *types.Timestamp {
	if m != nil {
		return m.LastConfirmedDownlinkAt
	}
	return nil
}

func (m *MACState) GetLastDevStatusFCntUp() uint32 {
	if m != nil {
		return m.LastDevStatusFCntUp
	}
	return 0
}

func (m *MACState) GetPingSlotPeriodicity() *PingSlotPeriodValue {
	if m != nil {
		return m.PingSlotPeriodicity
	}
	return nil
}

func (m *MACState) GetPendingApplicationDownlink() *ApplicationDownlink {
	if m != nil {
		return m.PendingApplicationDownlink
	}
	return nil
}

func (m *MACState) GetQueuedResponses() []*MACCommand {
	if m != nil {
		return m.QueuedResponses
	}
	return nil
}

func (m *MACState) GetPendingRequests() []*MACCommand {
	if m != nil {
		return m.PendingRequests
	}
	return nil
}

func (m *MACState) GetQueuedJoinAccept() *MACState_JoinAccept {
	if m != nil {
		return m.QueuedJoinAccept
	}
	return nil
}

func (m *MACState) GetPendingJoinRequest() *MACState_JoinRequest {
	if m != nil {
		return m.PendingJoinRequest
	}
	return nil
}

func (m *MACState) GetRxWindowsAvailable() bool {
	if m != nil {
		return m.RxWindowsAvailable
	}
	return false
}

func (m *MACState) GetRecentUplinks() []*MACState_UplinkMessage {
	if m != nil {
		return m.RecentUplinks
	}
	return nil
}

func (m *MACState) GetRecentDownlinks() []*MACState_DownlinkMessage {
	if m != nil {
		return m.RecentDownlinks
	}
	return nil
}

func (m *MACState) GetLastNetworkInitiatedDownlinkAt() *types.Timestamp {
	if m != nil {
		return m.LastNetworkInitiatedDownlinkAt
	}
	return nil
}

func (m *MACState) GetRejectedAdrDataRateIndexes() []DataRateIndex {
	if m != nil {
		return m.RejectedAdrDataRateIndexes
	}
	return nil
}

func (m *MACState) GetRejectedAdrTxPowerIndexes() []uint32 {
	if m != nil {
		return m.RejectedAdrTxPowerIndexes
	}
	return nil
}

func (m *MACState) GetRejectedFrequencies() []uint64 {
	if m != nil {
		return m.RejectedFrequencies
	}
	return nil
}

func (m *MACState) GetLastDownlinkAt() *types.Timestamp {
	if m != nil {
		return m.LastDownlinkAt
	}
	return nil
}

func (m *MACState) GetRejectedDataRateRanges() map[uint64]*MACState_DataRateRanges {
	if m != nil {
		return m.RejectedDataRateRanges
	}
	return nil
}

func (m *MACState) GetLastAdrChangeFCntUp() uint32 {
	if m != nil {
		return m.LastAdrChangeFCntUp
	}
	return 0
}

func (m *MACState) GetRecentMacCommandIdentifiers() []MACCommandIdentifier {
	if m != nil {
		return m.RecentMacCommandIdentifiers
	}
	return nil
}

type MACState_JoinRequest struct {
	DownlinkSettings     *DLSettings `protobuf:"bytes,6,opt,name=downlink_settings,json=downlinkSettings,proto3" json:"downlink_settings,omitempty"`
	RxDelay              RxDelay     `protobuf:"varint,7,opt,name=rx_delay,json=rxDelay,proto3,enum=ttn.lorawan.v3.RxDelay" json:"rx_delay,omitempty"`
	CfList               *CFList     `protobuf:"bytes,8,opt,name=cf_list,json=cfList,proto3" json:"cf_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MACState_JoinRequest) Reset()         { *m = MACState_JoinRequest{} }
func (m *MACState_JoinRequest) String() string { return proto.CompactTextString(m) }
func (*MACState_JoinRequest) ProtoMessage()    {}
func (*MACState_JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 0}
}
func (m *MACState_JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_JoinRequest.Unmarshal(m, b)
}
func (m *MACState_JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_JoinRequest.Marshal(b, m, deterministic)
}
func (m *MACState_JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_JoinRequest.Merge(m, src)
}
func (m *MACState_JoinRequest) XXX_Size() int {
	return xxx_messageInfo_MACState_JoinRequest.Size(m)
}
func (m *MACState_JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_JoinRequest proto.InternalMessageInfo

func (m *MACState_JoinRequest) GetDownlinkSettings() *DLSettings {
	if m != nil {
		return m.DownlinkSettings
	}
	return nil
}

func (m *MACState_JoinRequest) GetRxDelay() RxDelay {
	if m != nil {
		return m.RxDelay
	}
	return RxDelay_RX_DELAY_0
}

func (m *MACState_JoinRequest) GetCfList() *CFList {
	if m != nil {
		return m.CfList
	}
	return nil
}

type MACState_JoinAccept struct {
	// Payload of the join-accept received from Join Server.
	Payload []byte                `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Request *MACState_JoinRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// Network session keys associated with the join.
	Keys                 *SessionKeys `protobuf:"bytes,3,opt,name=keys,proto3" json:"keys,omitempty"`
	CorrelationIds       []string     `protobuf:"bytes,4,rep,name=correlation_ids,json=correlationIds,proto3" json:"correlation_ids,omitempty"`
	DevAddr              []byte       `protobuf:"bytes,5,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	NetId                []byte       `protobuf:"bytes,6,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MACState_JoinAccept) Reset()         { *m = MACState_JoinAccept{} }
func (m *MACState_JoinAccept) String() string { return proto.CompactTextString(m) }
func (*MACState_JoinAccept) ProtoMessage()    {}
func (*MACState_JoinAccept) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 1}
}
func (m *MACState_JoinAccept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_JoinAccept.Unmarshal(m, b)
}
func (m *MACState_JoinAccept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_JoinAccept.Marshal(b, m, deterministic)
}
func (m *MACState_JoinAccept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_JoinAccept.Merge(m, src)
}
func (m *MACState_JoinAccept) XXX_Size() int {
	return xxx_messageInfo_MACState_JoinAccept.Size(m)
}
func (m *MACState_JoinAccept) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_JoinAccept.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_JoinAccept proto.InternalMessageInfo

func (m *MACState_JoinAccept) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MACState_JoinAccept) GetRequest() *MACState_JoinRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *MACState_JoinAccept) GetKeys() *SessionKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *MACState_JoinAccept) GetCorrelationIds() []string {
	if m != nil {
		return m.CorrelationIds
	}
	return nil
}

func (m *MACState_JoinAccept) GetDevAddr() []byte {
	if m != nil {
		return m.DevAddr
	}
	return nil
}

func (m *MACState_JoinAccept) GetNetId() []byte {
	if m != nil {
		return m.NetId
	}
	return nil
}

// A minimal UplinkMessage definition which is binary compatible with the top level UplinkMessage message.
// Used for type safe recent uplink storage.
type MACState_UplinkMessage struct {
	Payload              *Message                             `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Settings             *MACState_UplinkMessage_TxSettings   `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	RxMetadata           []*MACState_UplinkMessage_RxMetadata `protobuf:"bytes,5,rep,name=rx_metadata,json=rxMetadata,proto3" json:"rx_metadata,omitempty"`
	ReceivedAt           *types.Timestamp                     `protobuf:"bytes,6,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	CorrelationIds       []string                             `protobuf:"bytes,7,rep,name=correlation_ids,json=correlationIds,proto3" json:"correlation_ids,omitempty"`
	DeviceChannelIndex   uint32                               `protobuf:"varint,9,opt,name=device_channel_index,json=deviceChannelIndex,proto3" json:"device_channel_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *MACState_UplinkMessage) Reset()         { *m = MACState_UplinkMessage{} }
func (m *MACState_UplinkMessage) String() string { return proto.CompactTextString(m) }
func (*MACState_UplinkMessage) ProtoMessage()    {}
func (*MACState_UplinkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 2}
}
func (m *MACState_UplinkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_UplinkMessage.Unmarshal(m, b)
}
func (m *MACState_UplinkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_UplinkMessage.Marshal(b, m, deterministic)
}
func (m *MACState_UplinkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_UplinkMessage.Merge(m, src)
}
func (m *MACState_UplinkMessage) XXX_Size() int {
	return xxx_messageInfo_MACState_UplinkMessage.Size(m)
}
func (m *MACState_UplinkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_UplinkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_UplinkMessage proto.InternalMessageInfo

func (m *MACState_UplinkMessage) GetPayload() *Message {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MACState_UplinkMessage) GetSettings() *MACState_UplinkMessage_TxSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *MACState_UplinkMessage) GetRxMetadata() []*MACState_UplinkMessage_RxMetadata {
	if m != nil {
		return m.RxMetadata
	}
	return nil
}

func (m *MACState_UplinkMessage) GetReceivedAt() *types.Timestamp {
	if m != nil {
		return m.ReceivedAt
	}
	return nil
}

func (m *MACState_UplinkMessage) GetCorrelationIds() []string {
	if m != nil {
		return m.CorrelationIds
	}
	return nil
}

func (m *MACState_UplinkMessage) GetDeviceChannelIndex() uint32 {
	if m != nil {
		return m.DeviceChannelIndex
	}
	return 0
}

type MACState_UplinkMessage_TxSettings struct {
	DataRate             *DataRate `protobuf:"bytes,1,opt,name=data_rate,json=dataRate,proto3" json:"data_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MACState_UplinkMessage_TxSettings) Reset()         { *m = MACState_UplinkMessage_TxSettings{} }
func (m *MACState_UplinkMessage_TxSettings) String() string { return proto.CompactTextString(m) }
func (*MACState_UplinkMessage_TxSettings) ProtoMessage()    {}
func (*MACState_UplinkMessage_TxSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 2, 0}
}
func (m *MACState_UplinkMessage_TxSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_UplinkMessage_TxSettings.Unmarshal(m, b)
}
func (m *MACState_UplinkMessage_TxSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_UplinkMessage_TxSettings.Marshal(b, m, deterministic)
}
func (m *MACState_UplinkMessage_TxSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_UplinkMessage_TxSettings.Merge(m, src)
}
func (m *MACState_UplinkMessage_TxSettings) XXX_Size() int {
	return xxx_messageInfo_MACState_UplinkMessage_TxSettings.Size(m)
}
func (m *MACState_UplinkMessage_TxSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_UplinkMessage_TxSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_UplinkMessage_TxSettings proto.InternalMessageInfo

func (m *MACState_UplinkMessage_TxSettings) GetDataRate() *DataRate {
	if m != nil {
		return m.DataRate
	}
	return nil
}

type MACState_UplinkMessage_RxMetadata struct {
	GatewayIds             *GatewayIdentifiers                                     `protobuf:"bytes,1,opt,name=gateway_ids,json=gatewayIds,proto3" json:"gateway_ids,omitempty"`
	ChannelRssi            float32                                                 `protobuf:"fixed32,9,opt,name=channel_rssi,json=channelRssi,proto3" json:"channel_rssi,omitempty"`
	Snr                    float32                                                 `protobuf:"fixed32,11,opt,name=snr,proto3" json:"snr,omitempty"`
	DownlinkPathConstraint DownlinkPathConstraint                                  `protobuf:"varint,14,opt,name=downlink_path_constraint,json=downlinkPathConstraint,proto3,enum=ttn.lorawan.v3.DownlinkPathConstraint" json:"downlink_path_constraint,omitempty"`
	UplinkToken            []byte                                                  `protobuf:"bytes,15,opt,name=uplink_token,json=uplinkToken,proto3" json:"uplink_token,omitempty"`
	PacketBroker           *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata `protobuf:"bytes,18,opt,name=packet_broker,json=packetBroker,proto3" json:"packet_broker,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                                `json:"-"`
	XXX_unrecognized       []byte                                                  `json:"-"`
	XXX_sizecache          int32                                                   `json:"-"`
}

func (m *MACState_UplinkMessage_RxMetadata) Reset()         { *m = MACState_UplinkMessage_RxMetadata{} }
func (m *MACState_UplinkMessage_RxMetadata) String() string { return proto.CompactTextString(m) }
func (*MACState_UplinkMessage_RxMetadata) ProtoMessage()    {}
func (*MACState_UplinkMessage_RxMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 2, 1}
}
func (m *MACState_UplinkMessage_RxMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata.Unmarshal(m, b)
}
func (m *MACState_UplinkMessage_RxMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata.Marshal(b, m, deterministic)
}
func (m *MACState_UplinkMessage_RxMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_UplinkMessage_RxMetadata.Merge(m, src)
}
func (m *MACState_UplinkMessage_RxMetadata) XXX_Size() int {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata.Size(m)
}
func (m *MACState_UplinkMessage_RxMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_UplinkMessage_RxMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_UplinkMessage_RxMetadata proto.InternalMessageInfo

func (m *MACState_UplinkMessage_RxMetadata) GetGatewayIds() *GatewayIdentifiers {
	if m != nil {
		return m.GatewayIds
	}
	return nil
}

func (m *MACState_UplinkMessage_RxMetadata) GetChannelRssi() float32 {
	if m != nil {
		return m.ChannelRssi
	}
	return 0
}

func (m *MACState_UplinkMessage_RxMetadata) GetSnr() float32 {
	if m != nil {
		return m.Snr
	}
	return 0
}

func (m *MACState_UplinkMessage_RxMetadata) GetDownlinkPathConstraint() DownlinkPathConstraint {
	if m != nil {
		return m.DownlinkPathConstraint
	}
	return DownlinkPathConstraint_DOWNLINK_PATH_CONSTRAINT_NONE
}

func (m *MACState_UplinkMessage_RxMetadata) GetUplinkToken() []byte {
	if m != nil {
		return m.UplinkToken
	}
	return nil
}

func (m *MACState_UplinkMessage_RxMetadata) GetPacketBroker() *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata {
	if m != nil {
		return m.PacketBroker
	}
	return nil
}

type MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) Reset() {
	*m = MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata{}
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) String() string {
	return proto.CompactTextString(m)
}
func (*MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) ProtoMessage() {}
func (*MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 2, 1, 0}
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata.Unmarshal(m, b)
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata.Marshal(b, m, deterministic)
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata.Merge(m, src)
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) XXX_Size() int {
	return xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata.Size(m)
}
func (m *MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata proto.InternalMessageInfo

// A minimal DownlinkMessage definition which is binary compatible with the top level DownlinkMessage message.
// Used for type safe recent downlink storage.
type MACState_DownlinkMessage struct {
	Payload              *MACState_DownlinkMessage_Message `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	CorrelationIds       []string                          `protobuf:"bytes,6,rep,name=correlation_ids,json=correlationIds,proto3" json:"correlation_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *MACState_DownlinkMessage) Reset()         { *m = MACState_DownlinkMessage{} }
func (m *MACState_DownlinkMessage) String() string { return proto.CompactTextString(m) }
func (*MACState_DownlinkMessage) ProtoMessage()    {}
func (*MACState_DownlinkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 3}
}
func (m *MACState_DownlinkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DownlinkMessage.Unmarshal(m, b)
}
func (m *MACState_DownlinkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DownlinkMessage.Marshal(b, m, deterministic)
}
func (m *MACState_DownlinkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DownlinkMessage.Merge(m, src)
}
func (m *MACState_DownlinkMessage) XXX_Size() int {
	return xxx_messageInfo_MACState_DownlinkMessage.Size(m)
}
func (m *MACState_DownlinkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DownlinkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DownlinkMessage proto.InternalMessageInfo

func (m *MACState_DownlinkMessage) GetPayload() *MACState_DownlinkMessage_Message {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MACState_DownlinkMessage) GetCorrelationIds() []string {
	if m != nil {
		return m.CorrelationIds
	}
	return nil
}

type MACState_DownlinkMessage_Message struct {
	MHdr                 *MACState_DownlinkMessage_Message_MHDR       `protobuf:"bytes,1,opt,name=m_hdr,json=mHdr,proto3" json:"m_hdr,omitempty"`
	MacPayload           *MACState_DownlinkMessage_Message_MACPayload `protobuf:"bytes,3,opt,name=mac_payload,json=macPayload,proto3" json:"mac_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *MACState_DownlinkMessage_Message) Reset()         { *m = MACState_DownlinkMessage_Message{} }
func (m *MACState_DownlinkMessage_Message) String() string { return proto.CompactTextString(m) }
func (*MACState_DownlinkMessage_Message) ProtoMessage()    {}
func (*MACState_DownlinkMessage_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 3, 0}
}
func (m *MACState_DownlinkMessage_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DownlinkMessage_Message.Unmarshal(m, b)
}
func (m *MACState_DownlinkMessage_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DownlinkMessage_Message.Marshal(b, m, deterministic)
}
func (m *MACState_DownlinkMessage_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DownlinkMessage_Message.Merge(m, src)
}
func (m *MACState_DownlinkMessage_Message) XXX_Size() int {
	return xxx_messageInfo_MACState_DownlinkMessage_Message.Size(m)
}
func (m *MACState_DownlinkMessage_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DownlinkMessage_Message.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DownlinkMessage_Message proto.InternalMessageInfo

func (m *MACState_DownlinkMessage_Message) GetMHdr() *MACState_DownlinkMessage_Message_MHDR {
	if m != nil {
		return m.MHdr
	}
	return nil
}

func (m *MACState_DownlinkMessage_Message) GetMacPayload() *MACState_DownlinkMessage_Message_MACPayload {
	if m != nil {
		return m.MacPayload
	}
	return nil
}

type MACState_DownlinkMessage_Message_MHDR struct {
	MType                MType    `protobuf:"varint,1,opt,name=m_type,json=mType,proto3,enum=ttn.lorawan.v3.MType" json:"m_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACState_DownlinkMessage_Message_MHDR) Reset()         { *m = MACState_DownlinkMessage_Message_MHDR{} }
func (m *MACState_DownlinkMessage_Message_MHDR) String() string { return proto.CompactTextString(m) }
func (*MACState_DownlinkMessage_Message_MHDR) ProtoMessage()    {}
func (*MACState_DownlinkMessage_Message_MHDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 3, 0, 0}
}
func (m *MACState_DownlinkMessage_Message_MHDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR.Unmarshal(m, b)
}
func (m *MACState_DownlinkMessage_Message_MHDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR.Marshal(b, m, deterministic)
}
func (m *MACState_DownlinkMessage_Message_MHDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR.Merge(m, src)
}
func (m *MACState_DownlinkMessage_Message_MHDR) XXX_Size() int {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR.Size(m)
}
func (m *MACState_DownlinkMessage_Message_MHDR) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DownlinkMessage_Message_MHDR proto.InternalMessageInfo

func (m *MACState_DownlinkMessage_Message_MHDR) GetMType() MType {
	if m != nil {
		return m.MType
	}
	return MType_JOIN_REQUEST
}

type MACState_DownlinkMessage_Message_MACPayload struct {
	FPort                uint32   `protobuf:"varint,2,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	FullFCnt             uint32   `protobuf:"varint,5,opt,name=full_f_cnt,json=fullFCnt,proto3" json:"full_f_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACState_DownlinkMessage_Message_MACPayload) Reset() {
	*m = MACState_DownlinkMessage_Message_MACPayload{}
}
func (m *MACState_DownlinkMessage_Message_MACPayload) String() string {
	return proto.CompactTextString(m)
}
func (*MACState_DownlinkMessage_Message_MACPayload) ProtoMessage() {}
func (*MACState_DownlinkMessage_Message_MACPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 3, 0, 1}
}
func (m *MACState_DownlinkMessage_Message_MACPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload.Unmarshal(m, b)
}
func (m *MACState_DownlinkMessage_Message_MACPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload.Marshal(b, m, deterministic)
}
func (m *MACState_DownlinkMessage_Message_MACPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload.Merge(m, src)
}
func (m *MACState_DownlinkMessage_Message_MACPayload) XXX_Size() int {
	return xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload.Size(m)
}
func (m *MACState_DownlinkMessage_Message_MACPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DownlinkMessage_Message_MACPayload proto.InternalMessageInfo

func (m *MACState_DownlinkMessage_Message_MACPayload) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *MACState_DownlinkMessage_Message_MACPayload) GetFullFCnt() uint32 {
	if m != nil {
		return m.FullFCnt
	}
	return 0
}

type MACState_DataRateRange struct {
	MinDataRateIndex     DataRateIndex `protobuf:"varint,1,opt,name=min_data_rate_index,json=minDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"min_data_rate_index,omitempty"`
	MaxDataRateIndex     DataRateIndex `protobuf:"varint,2,opt,name=max_data_rate_index,json=maxDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"max_data_rate_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MACState_DataRateRange) Reset()         { *m = MACState_DataRateRange{} }
func (m *MACState_DataRateRange) String() string { return proto.CompactTextString(m) }
func (*MACState_DataRateRange) ProtoMessage()    {}
func (*MACState_DataRateRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 4}
}
func (m *MACState_DataRateRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DataRateRange.Unmarshal(m, b)
}
func (m *MACState_DataRateRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DataRateRange.Marshal(b, m, deterministic)
}
func (m *MACState_DataRateRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DataRateRange.Merge(m, src)
}
func (m *MACState_DataRateRange) XXX_Size() int {
	return xxx_messageInfo_MACState_DataRateRange.Size(m)
}
func (m *MACState_DataRateRange) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DataRateRange.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DataRateRange proto.InternalMessageInfo

func (m *MACState_DataRateRange) GetMinDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MinDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACState_DataRateRange) GetMaxDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MaxDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

type MACState_DataRateRanges struct {
	Ranges               []*MACState_DataRateRange `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MACState_DataRateRanges) Reset()         { *m = MACState_DataRateRanges{} }
func (m *MACState_DataRateRanges) String() string { return proto.CompactTextString(m) }
func (*MACState_DataRateRanges) ProtoMessage()    {}
func (*MACState_DataRateRanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{6, 5}
}
func (m *MACState_DataRateRanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACState_DataRateRanges.Unmarshal(m, b)
}
func (m *MACState_DataRateRanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACState_DataRateRanges.Marshal(b, m, deterministic)
}
func (m *MACState_DataRateRanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACState_DataRateRanges.Merge(m, src)
}
func (m *MACState_DataRateRanges) XXX_Size() int {
	return xxx_messageInfo_MACState_DataRateRanges.Size(m)
}
func (m *MACState_DataRateRanges) XXX_DiscardUnknown() {
	xxx_messageInfo_MACState_DataRateRanges.DiscardUnknown(m)
}

var xxx_messageInfo_MACState_DataRateRanges proto.InternalMessageInfo

func (m *MACState_DataRateRanges) GetRanges() []*MACState_DataRateRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

// Authentication code for end devices.
type EndDeviceAuthenticationCode struct {
	Value                string           `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ValidFrom            *types.Timestamp `protobuf:"bytes,2,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo              *types.Timestamp `protobuf:"bytes,3,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EndDeviceAuthenticationCode) Reset()         { *m = EndDeviceAuthenticationCode{} }
func (m *EndDeviceAuthenticationCode) String() string { return proto.CompactTextString(m) }
func (*EndDeviceAuthenticationCode) ProtoMessage()    {}
func (*EndDeviceAuthenticationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{7}
}
func (m *EndDeviceAuthenticationCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDeviceAuthenticationCode.Unmarshal(m, b)
}
func (m *EndDeviceAuthenticationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDeviceAuthenticationCode.Marshal(b, m, deterministic)
}
func (m *EndDeviceAuthenticationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDeviceAuthenticationCode.Merge(m, src)
}
func (m *EndDeviceAuthenticationCode) XXX_Size() int {
	return xxx_messageInfo_EndDeviceAuthenticationCode.Size(m)
}
func (m *EndDeviceAuthenticationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDeviceAuthenticationCode.DiscardUnknown(m)
}

var xxx_messageInfo_EndDeviceAuthenticationCode proto.InternalMessageInfo

func (m *EndDeviceAuthenticationCode) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EndDeviceAuthenticationCode) GetValidFrom() *types.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *EndDeviceAuthenticationCode) GetValidTo() *types.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

// Defines an End Device registration and its state on the network.
// The persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.
// SDKs are responsible for combining (if desired) the three.
type EndDevice struct {
	Ids       *EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	CreatedAt *types.Timestamp      `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *types.Timestamp      `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Friendly name of the device. Stored in Entity Registry.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the device. Stored in Entity Registry.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry.
	Attributes map[string]string `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Version Identifiers. Stored in Entity Registry, Network Server and Application Server.
	VersionIds *EndDeviceVersionIdentifiers `protobuf:"bytes,7,opt,name=version_ids,json=versionIds,proto3" json:"version_ids,omitempty"`
	// Default service profile. Stored in Entity Registry.
	ServiceProfileId string `protobuf:"bytes,8,opt,name=service_profile_id,json=serviceProfileId,proto3" json:"service_profile_id,omitempty"`
	// The address of the Network Server where this device is supposed to be registered.
	// Stored in Entity Registry and Join Server.
	// The typical format of the address is "host:port". If the port is omitted,
	// the normal port inference (with DNS lookup, otherwise defaults) is used.
	// The connection shall be established with transport layer security (TLS).
	// Custom certificate authorities may be configured out-of-band.
	NetworkServerAddress string `protobuf:"bytes,9,opt,name=network_server_address,json=networkServerAddress,proto3" json:"network_server_address,omitempty"`
	// The KEK label of the Network Server to use for wrapping network session keys.
	// Stored in Join Server.
	NetworkServerKekLabel string `protobuf:"bytes,47,opt,name=network_server_kek_label,json=networkServerKekLabel,proto3" json:"network_server_kek_label,omitempty"`
	// The address of the Application Server where this device is supposed to be registered.
	// Stored in Entity Registry and Join Server.
	// The typical format of the address is "host:port". If the port is omitted,
	// the normal port inference (with DNS lookup, otherwise defaults) is used.
	// The connection shall be established with transport layer security (TLS).
	// Custom certificate authorities may be configured out-of-band.
	ApplicationServerAddress string `protobuf:"bytes,10,opt,name=application_server_address,json=applicationServerAddress,proto3" json:"application_server_address,omitempty"`
	// The KEK label of the Application Server to use for wrapping the application session key.
	// Stored in Join Server.
	ApplicationServerKekLabel string `protobuf:"bytes,48,opt,name=application_server_kek_label,json=applicationServerKekLabel,proto3" json:"application_server_kek_label,omitempty"`
	// The AS-ID of the Application Server to use.
	// Stored in Join Server.
	ApplicationServerId string `protobuf:"bytes,49,opt,name=application_server_id,json=applicationServerId,proto3" json:"application_server_id,omitempty"`
	// The address of the Join Server where this device is supposed to be registered.
	// Stored in Entity Registry.
	// The typical format of the address is "host:port". If the port is omitted,
	// the normal port inference (with DNS lookup, otherwise defaults) is used.
	// The connection shall be established with transport layer security (TLS).
	// Custom certificate authorities may be configured out-of-band.
	JoinServerAddress string `protobuf:"bytes,11,opt,name=join_server_address,json=joinServerAddress,proto3" json:"join_server_address,omitempty"`
	// Location of the device. Stored in Entity Registry.
	Locations map[string]*Location `protobuf:"bytes,12,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Stored in Entity Registry.
	Picture *Picture `protobuf:"bytes,50,opt,name=picture,proto3" json:"picture,omitempty"`
	// Whether the device supports class B.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	SupportsClassB bool `protobuf:"varint,13,opt,name=supports_class_b,json=supportsClassB,proto3" json:"supports_class_b,omitempty"`
	// Whether the device supports class C.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	SupportsClassC bool `protobuf:"varint,14,opt,name=supports_class_c,json=supportsClassC,proto3" json:"supports_class_c,omitempty"`
	// LoRaWAN MAC version. Stored in Network Server.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	LorawanVersion MACVersion `protobuf:"varint,15,opt,name=lorawan_version,json=lorawanVersion,proto3,enum=ttn.lorawan.v3.MACVersion" json:"lorawan_version,omitempty"`
	// LoRaWAN PHY version. Stored in Network Server.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	LorawanPhyVersion PHYVersion `protobuf:"varint,16,opt,name=lorawan_phy_version,json=lorawanPhyVersion,proto3,enum=ttn.lorawan.v3.PHYVersion" json:"lorawan_phy_version,omitempty"`
	// ID of the frequency plan used by this device.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	FrequencyPlanId string `protobuf:"bytes,17,opt,name=frequency_plan_id,json=frequencyPlanId,proto3" json:"frequency_plan_id,omitempty"`
	// Minimum frequency the device is capable of using (Hz). Stored in Network Server.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	MinFrequency uint64 `protobuf:"varint,18,opt,name=min_frequency,json=minFrequency,proto3" json:"min_frequency,omitempty"`
	// Maximum frequency the device is capable of using (Hz). Stored in Network Server.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	MaxFrequency uint64 `protobuf:"varint,19,opt,name=max_frequency,json=maxFrequency,proto3" json:"max_frequency,omitempty"`
	// The device supports join (it's OTAA).
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	SupportsJoin bool `protobuf:"varint,20,opt,name=supports_join,json=supportsJoin,proto3" json:"supports_join,omitempty"`
	// Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.
	// Copied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any.
	ResetsJoinNonces bool `protobuf:"varint,21,opt,name=resets_join_nonces,json=resetsJoinNonces,proto3" json:"resets_join_nonces,omitempty"`
	// Device root keys. Stored in Join Server.
	RootKeys *RootKeys `protobuf:"bytes,22,opt,name=root_keys,json=rootKeys,proto3" json:"root_keys,omitempty"`
	// Home NetID. Stored in Join Server.
	NetId []byte `protobuf:"bytes,23,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// Settings for how the Network Server handles MAC layer for this device. Stored in Network Server.
	MacSettings *MACSettings `protobuf:"bytes,24,opt,name=mac_settings,json=macSettings,proto3" json:"mac_settings,omitempty"`
	// MAC state of the device. Stored in Network Server.
	MacState *MACState `protobuf:"bytes,25,opt,name=mac_state,json=macState,proto3" json:"mac_state,omitempty"`
	// Pending MAC state of the device. Stored in Network Server.
	PendingMacState *MACState `protobuf:"bytes,44,opt,name=pending_mac_state,json=pendingMacState,proto3" json:"pending_mac_state,omitempty"`
	// Current session of the device. Stored in Network Server and Application Server.
	Session *Session `protobuf:"bytes,26,opt,name=session,proto3" json:"session,omitempty"`
	// Pending session. Stored in Network Server and Application Server until RekeyInd is received.
	PendingSession *Session `protobuf:"bytes,27,opt,name=pending_session,json=pendingSession,proto3" json:"pending_session,omitempty"`
	// Last DevNonce used.
	// This field is only used for devices using LoRaWAN version 1.1 and later.
	// Stored in Join Server.
	LastDevNonce uint32 `protobuf:"varint,28,opt,name=last_dev_nonce,json=lastDevNonce,proto3" json:"last_dev_nonce,omitempty"`
	// Used DevNonces sorted in ascending order.
	// This field is only used for devices using LoRaWAN versions preceding 1.1.
	// Stored in Join Server.
	UsedDevNonces []uint32 `protobuf:"varint,29,rep,packed,name=used_dev_nonces,json=usedDevNonces,proto3" json:"used_dev_nonces,omitempty"`
	// Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.
	// Stored in Join Server.
	LastJoinNonce uint32 `protobuf:"varint,30,opt,name=last_join_nonce,json=lastJoinNonce,proto3" json:"last_join_nonce,omitempty"`
	// Last Rejoin counter value used (type 0/2).
	// Stored in Join Server.
	LastRjCount_0 uint32 `protobuf:"varint,31,opt,name=last_rj_count_0,json=lastRjCount0,proto3" json:"last_rj_count_0,omitempty"`
	// Last Rejoin counter value used (type 1).
	// Stored in Join Server.
	LastRjCount_1 uint32 `protobuf:"varint,32,opt,name=last_rj_count_1,json=lastRjCount1,proto3" json:"last_rj_count_1,omitempty"`
	// Time when last DevStatus MAC command was received.
	// Stored in Network Server.
	LastDevStatusReceivedAt *types.Timestamp `protobuf:"bytes,33,opt,name=last_dev_status_received_at,json=lastDevStatusReceivedAt,proto3" json:"last_dev_status_received_at,omitempty"`
	// The power state of the device; whether it is battery-powered or connected to an external power source.
	// Received via the DevStatus MAC command at status_received_at.
	// Stored in Network Server.
	PowerState PowerState `protobuf:"varint,34,opt,name=power_state,json=powerState,proto3,enum=ttn.lorawan.v3.PowerState" json:"power_state,omitempty"`
	// Latest-known battery percentage of the device.
	// Received via the DevStatus MAC command at last_dev_status_received_at or earlier.
	// Stored in Network Server.
	BatteryPercentage *types.FloatValue `protobuf:"bytes,35,opt,name=battery_percentage,json=batteryPercentage,proto3" json:"battery_percentage,omitempty"`
	// Demodulation signal-to-noise ratio (dB).
	// Received via the DevStatus MAC command at last_dev_status_received_at.
	// Stored in Network Server.
	DownlinkMargin int32 `protobuf:"varint,36,opt,name=downlink_margin,json=downlinkMargin,proto3" json:"downlink_margin,omitempty"`
	// Queued Application downlink messages. Stored in Application Server,
	// which sets them on the Network Server.
	// This field is deprecated and is always set equal to session.queued_application_downlinks.
	QueuedApplicationDownlinks []*ApplicationDownlink `protobuf:"bytes,40,rep,name=queued_application_downlinks,json=queuedApplicationDownlinks,proto3" json:"queued_application_downlinks,omitempty"`
	// The payload formatters for this end device. Stored in Application Server.
	// Copied on creation from template identified by version_ids.
	Formatters *MessagePayloadFormatters `protobuf:"bytes,41,opt,name=formatters,proto3" json:"formatters,omitempty"`
	// ID of the provisioner. Stored in Join Server.
	ProvisionerId string `protobuf:"bytes,42,opt,name=provisioner_id,json=provisionerId,proto3" json:"provisioner_id,omitempty"`
	// Vendor-specific provisioning data. Stored in Join Server.
	ProvisioningData *types.Struct `protobuf:"bytes,43,opt,name=provisioning_data,json=provisioningData,proto3" json:"provisioning_data,omitempty"`
	// Indicates whether this device represents a multicast group.
	Multicast bool `protobuf:"varint,45,opt,name=multicast,proto3" json:"multicast,omitempty"`
	// Authentication code to claim ownership of the end device.
	// From TTS v3.21.0 this field is stored in the Identity Server.
	// For TTS versions < 3.21.0, this field is stored in the Join Server.
	// The value stored on the Identity Server takes precedence.
	ClaimAuthenticationCode *EndDeviceAuthenticationCode `protobuf:"bytes,46,opt,name=claim_authentication_code,json=claimAuthenticationCode,proto3" json:"claim_authentication_code,omitempty"`
	// Skip decryption of uplink payloads and encryption of downlink payloads.
	// This field is deprecated, use skip_payload_crypto_override instead.
	SkipPayloadCrypto bool `protobuf:"varint,51,opt,name=skip_payload_crypto,json=skipPayloadCrypto,proto3" json:"skip_payload_crypto,omitempty"`
	// Skip decryption of uplink payloads and encryption of downlink payloads.
	// This field overrides the application-level setting.
	SkipPayloadCryptoOverride *types.BoolValue `protobuf:"bytes,52,opt,name=skip_payload_crypto_override,json=skipPayloadCryptoOverride,proto3" json:"skip_payload_crypto_override,omitempty"`
	// Timestamp when the device has been activated. Stored in the Entity Registry.
	// This field is set by the Application Server when an end device sends
	// its first uplink.
	// The Application Server will use the field in order to avoid repeated
	// calls to the Entity Registry.
	// The field cannot be unset once set.
	ActivatedAt *types.Timestamp `protobuf:"bytes,53,opt,name=activated_at,json=activatedAt,proto3" json:"activated_at,omitempty"`
	// Timestamp when a device uplink has been last observed.
	// This field is set by the Application Server and stored in the Identity Server.
	LastSeenAt           *types.Timestamp `protobuf:"bytes,54,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EndDevice) Reset()         { *m = EndDevice{} }
func (m *EndDevice) String() string { return proto.CompactTextString(m) }
func (*EndDevice) ProtoMessage()    {}
func (*EndDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{8}
}
func (m *EndDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDevice.Unmarshal(m, b)
}
func (m *EndDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDevice.Marshal(b, m, deterministic)
}
func (m *EndDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDevice.Merge(m, src)
}
func (m *EndDevice) XXX_Size() int {
	return xxx_messageInfo_EndDevice.Size(m)
}
func (m *EndDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDevice.DiscardUnknown(m)
}

var xxx_messageInfo_EndDevice proto.InternalMessageInfo

func (m *EndDevice) GetIds() *EndDeviceIdentifiers {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *EndDevice) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *EndDevice) GetUpdatedAt() *types.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *EndDevice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EndDevice) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EndDevice) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *EndDevice) GetVersionIds() *EndDeviceVersionIdentifiers {
	if m != nil {
		return m.VersionIds
	}
	return nil
}

func (m *EndDevice) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *EndDevice) GetNetworkServerAddress() string {
	if m != nil {
		return m.NetworkServerAddress
	}
	return ""
}

func (m *EndDevice) GetNetworkServerKekLabel() string {
	if m != nil {
		return m.NetworkServerKekLabel
	}
	return ""
}

func (m *EndDevice) GetApplicationServerAddress() string {
	if m != nil {
		return m.ApplicationServerAddress
	}
	return ""
}

func (m *EndDevice) GetApplicationServerKekLabel() string {
	if m != nil {
		return m.ApplicationServerKekLabel
	}
	return ""
}

func (m *EndDevice) GetApplicationServerId() string {
	if m != nil {
		return m.ApplicationServerId
	}
	return ""
}

func (m *EndDevice) GetJoinServerAddress() string {
	if m != nil {
		return m.JoinServerAddress
	}
	return ""
}

func (m *EndDevice) GetLocations() map[string]*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *EndDevice) GetPicture() *Picture {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *EndDevice) GetSupportsClassB() bool {
	if m != nil {
		return m.SupportsClassB
	}
	return false
}

func (m *EndDevice) GetSupportsClassC() bool {
	if m != nil {
		return m.SupportsClassC
	}
	return false
}

func (m *EndDevice) GetLorawanVersion() MACVersion {
	if m != nil {
		return m.LorawanVersion
	}
	return MACVersion_MAC_UNKNOWN
}

func (m *EndDevice) GetLorawanPhyVersion() PHYVersion {
	if m != nil {
		return m.LorawanPhyVersion
	}
	return PHYVersion_PHY_UNKNOWN
}

func (m *EndDevice) GetFrequencyPlanId() string {
	if m != nil {
		return m.FrequencyPlanId
	}
	return ""
}

func (m *EndDevice) GetMinFrequency() uint64 {
	if m != nil {
		return m.MinFrequency
	}
	return 0
}

func (m *EndDevice) GetMaxFrequency() uint64 {
	if m != nil {
		return m.MaxFrequency
	}
	return 0
}

func (m *EndDevice) GetSupportsJoin() bool {
	if m != nil {
		return m.SupportsJoin
	}
	return false
}

func (m *EndDevice) GetResetsJoinNonces() bool {
	if m != nil {
		return m.ResetsJoinNonces
	}
	return false
}

func (m *EndDevice) GetRootKeys() *RootKeys {
	if m != nil {
		return m.RootKeys
	}
	return nil
}

func (m *EndDevice) GetNetId() []byte {
	if m != nil {
		return m.NetId
	}
	return nil
}

func (m *EndDevice) GetMacSettings() *MACSettings {
	if m != nil {
		return m.MacSettings
	}
	return nil
}

func (m *EndDevice) GetMacState() *MACState {
	if m != nil {
		return m.MacState
	}
	return nil
}

func (m *EndDevice) GetPendingMacState() *MACState {
	if m != nil {
		return m.PendingMacState
	}
	return nil
}

func (m *EndDevice) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *EndDevice) GetPendingSession() *Session {
	if m != nil {
		return m.PendingSession
	}
	return nil
}

func (m *EndDevice) GetLastDevNonce() uint32 {
	if m != nil {
		return m.LastDevNonce
	}
	return 0
}

func (m *EndDevice) GetUsedDevNonces() []uint32 {
	if m != nil {
		return m.UsedDevNonces
	}
	return nil
}

func (m *EndDevice) GetLastJoinNonce() uint32 {
	if m != nil {
		return m.LastJoinNonce
	}
	return 0
}

func (m *EndDevice) GetLastRjCount_0() uint32 {
	if m != nil {
		return m.LastRjCount_0
	}
	return 0
}

func (m *EndDevice) GetLastRjCount_1() uint32 {
	if m != nil {
		return m.LastRjCount_1
	}
	return 0
}

func (m *EndDevice) GetLastDevStatusReceivedAt() *types.Timestamp {
	if m != nil {
		return m.LastDevStatusReceivedAt
	}
	return nil
}

func (m *EndDevice) GetPowerState() PowerState {
	if m != nil {
		return m.PowerState
	}
	return PowerState_POWER_UNKNOWN
}

func (m *EndDevice) GetBatteryPercentage() *types.FloatValue {
	if m != nil {
		return m.BatteryPercentage
	}
	return nil
}

func (m *EndDevice) GetDownlinkMargin() int32 {
	if m != nil {
		return m.DownlinkMargin
	}
	return 0
}

func (m *EndDevice) GetQueuedApplicationDownlinks() []*ApplicationDownlink {
	if m != nil {
		return m.QueuedApplicationDownlinks
	}
	return nil
}

func (m *EndDevice) GetFormatters() *MessagePayloadFormatters {
	if m != nil {
		return m.Formatters
	}
	return nil
}

func (m *EndDevice) GetProvisionerId() string {
	if m != nil {
		return m.ProvisionerId
	}
	return ""
}

func (m *EndDevice) GetProvisioningData() *types.Struct {
	if m != nil {
		return m.ProvisioningData
	}
	return nil
}

func (m *EndDevice) GetMulticast() bool {
	if m != nil {
		return m.Multicast
	}
	return false
}

func (m *EndDevice) GetClaimAuthenticationCode() *EndDeviceAuthenticationCode {
	if m != nil {
		return m.ClaimAuthenticationCode
	}
	return nil
}

func (m *EndDevice) GetSkipPayloadCrypto() bool {
	if m != nil {
		return m.SkipPayloadCrypto
	}
	return false
}

func (m *EndDevice) GetSkipPayloadCryptoOverride() *types.BoolValue {
	if m != nil {
		return m.SkipPayloadCryptoOverride
	}
	return nil
}

func (m *EndDevice) GetActivatedAt() *types.Timestamp {
	if m != nil {
		return m.ActivatedAt
	}
	return nil
}

func (m *EndDevice) GetLastSeenAt() *types.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

type EndDevices struct {
	EndDevices           []*EndDevice `protobuf:"bytes,1,rep,name=end_devices,json=endDevices,proto3" json:"end_devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EndDevices) Reset()         { *m = EndDevices{} }
func (m *EndDevices) String() string { return proto.CompactTextString(m) }
func (*EndDevices) ProtoMessage()    {}
func (*EndDevices) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{9}
}
func (m *EndDevices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDevices.Unmarshal(m, b)
}
func (m *EndDevices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDevices.Marshal(b, m, deterministic)
}
func (m *EndDevices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDevices.Merge(m, src)
}
func (m *EndDevices) XXX_Size() int {
	return xxx_messageInfo_EndDevices.Size(m)
}
func (m *EndDevices) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDevices.DiscardUnknown(m)
}

var xxx_messageInfo_EndDevices proto.InternalMessageInfo

func (m *EndDevices) GetEndDevices() []*EndDevice {
	if m != nil {
		return m.EndDevices
	}
	return nil
}

type DevAddrPrefix struct {
	// DevAddr base.
	DevAddr []byte `protobuf:"bytes,1,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Number of most significant bits from dev_addr that are used as prefix.
	Length               uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevAddrPrefix) Reset()         { *m = DevAddrPrefix{} }
func (m *DevAddrPrefix) String() string { return proto.CompactTextString(m) }
func (*DevAddrPrefix) ProtoMessage()    {}
func (*DevAddrPrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{10}
}
func (m *DevAddrPrefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevAddrPrefix.Unmarshal(m, b)
}
func (m *DevAddrPrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevAddrPrefix.Marshal(b, m, deterministic)
}
func (m *DevAddrPrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevAddrPrefix.Merge(m, src)
}
func (m *DevAddrPrefix) XXX_Size() int {
	return xxx_messageInfo_DevAddrPrefix.Size(m)
}
func (m *DevAddrPrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_DevAddrPrefix.DiscardUnknown(m)
}

var xxx_messageInfo_DevAddrPrefix proto.InternalMessageInfo

func (m *DevAddrPrefix) GetDevAddr() []byte {
	if m != nil {
		return m.DevAddr
	}
	return nil
}

func (m *DevAddrPrefix) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type CreateEndDeviceRequest struct {
	EndDevice            *EndDevice `protobuf:"bytes,1,opt,name=end_device,json=endDevice,proto3" json:"end_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateEndDeviceRequest) Reset()         { *m = CreateEndDeviceRequest{} }
func (m *CreateEndDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEndDeviceRequest) ProtoMessage()    {}
func (*CreateEndDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{11}
}
func (m *CreateEndDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEndDeviceRequest.Unmarshal(m, b)
}
func (m *CreateEndDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEndDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CreateEndDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEndDeviceRequest.Merge(m, src)
}
func (m *CreateEndDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEndDeviceRequest.Size(m)
}
func (m *CreateEndDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEndDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEndDeviceRequest proto.InternalMessageInfo

func (m *CreateEndDeviceRequest) GetEndDevice() *EndDevice {
	if m != nil {
		return m.EndDevice
	}
	return nil
}

type UpdateEndDeviceRequest struct {
	EndDevice *EndDevice `protobuf:"bytes,1,opt,name=end_device,json=endDevice,proto3" json:"end_device,omitempty"`
	// The names of the end device fields that should be updated.
	// See the API reference for which fields can be set on the different services.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateEndDeviceRequest) Reset()         { *m = UpdateEndDeviceRequest{} }
func (m *UpdateEndDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEndDeviceRequest) ProtoMessage()    {}
func (*UpdateEndDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{12}
}
func (m *UpdateEndDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEndDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateEndDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEndDeviceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEndDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEndDeviceRequest.Merge(m, src)
}
func (m *UpdateEndDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEndDeviceRequest.Size(m)
}
func (m *UpdateEndDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEndDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEndDeviceRequest proto.InternalMessageInfo

func (m *UpdateEndDeviceRequest) GetEndDevice() *EndDevice {
	if m != nil {
		return m.EndDevice
	}
	return nil
}

func (m *UpdateEndDeviceRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type BatchUpdateEndDeviceLastSeenRequest struct {
	// The last seen timestamp needs to be set per end device.
	Updates              []*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *BatchUpdateEndDeviceLastSeenRequest) Reset()         { *m = BatchUpdateEndDeviceLastSeenRequest{} }
func (m *BatchUpdateEndDeviceLastSeenRequest) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateEndDeviceLastSeenRequest) ProtoMessage()    {}
func (*BatchUpdateEndDeviceLastSeenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{13}
}
func (m *BatchUpdateEndDeviceLastSeenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest.Unmarshal(m, b)
}
func (m *BatchUpdateEndDeviceLastSeenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest.Marshal(b, m, deterministic)
}
func (m *BatchUpdateEndDeviceLastSeenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest.Merge(m, src)
}
func (m *BatchUpdateEndDeviceLastSeenRequest) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest.Size(m)
}
func (m *BatchUpdateEndDeviceLastSeenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest proto.InternalMessageInfo

func (m *BatchUpdateEndDeviceLastSeenRequest) GetUpdates() []*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate struct {
	Ids                  *EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	LastSeenAt           *types.Timestamp      `protobuf:"bytes,2,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) Reset() {
	*m = BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate{}
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) ProtoMessage() {}
func (*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{13, 0}
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate.Unmarshal(m, b)
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate.Marshal(b, m, deterministic)
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate.Merge(m, src)
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate.Size(m)
}
func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate proto.InternalMessageInfo

func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) GetIds() *EndDeviceIdentifiers {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate) GetLastSeenAt() *types.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

type GetEndDeviceRequest struct {
	EndDeviceIds *EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=end_device_ids,json=endDeviceIds,proto3" json:"end_device_ids,omitempty"`
	// The names of the end device fields that should be returned.
	// See the API reference for which fields can be returned by the different services.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetEndDeviceRequest) Reset()         { *m = GetEndDeviceRequest{} }
func (m *GetEndDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetEndDeviceRequest) ProtoMessage()    {}
func (*GetEndDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{14}
}
func (m *GetEndDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEndDeviceRequest.Unmarshal(m, b)
}
func (m *GetEndDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEndDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetEndDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEndDeviceRequest.Merge(m, src)
}
func (m *GetEndDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetEndDeviceRequest.Size(m)
}
func (m *GetEndDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEndDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEndDeviceRequest proto.InternalMessageInfo

func (m *GetEndDeviceRequest) GetEndDeviceIds() *EndDeviceIdentifiers {
	if m != nil {
		return m.EndDeviceIds
	}
	return nil
}

func (m *GetEndDeviceRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type GetEndDeviceIdentifiersForEUIsRequest struct {
	JoinEui              []byte   `protobuf:"bytes,1,opt,name=join_eui,json=joinEui,proto3" json:"join_eui,omitempty"`
	DevEui               []byte   `protobuf:"bytes,2,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEndDeviceIdentifiersForEUIsRequest) Reset()         { *m = GetEndDeviceIdentifiersForEUIsRequest{} }
func (m *GetEndDeviceIdentifiersForEUIsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEndDeviceIdentifiersForEUIsRequest) ProtoMessage()    {}
func (*GetEndDeviceIdentifiersForEUIsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{15}
}
func (m *GetEndDeviceIdentifiersForEUIsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest.Unmarshal(m, b)
}
func (m *GetEndDeviceIdentifiersForEUIsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest.Marshal(b, m, deterministic)
}
func (m *GetEndDeviceIdentifiersForEUIsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest.Merge(m, src)
}
func (m *GetEndDeviceIdentifiersForEUIsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest.Size(m)
}
func (m *GetEndDeviceIdentifiersForEUIsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEndDeviceIdentifiersForEUIsRequest proto.InternalMessageInfo

func (m *GetEndDeviceIdentifiersForEUIsRequest) GetJoinEui() []byte {
	if m != nil {
		return m.JoinEui
	}
	return nil
}

func (m *GetEndDeviceIdentifiersForEUIsRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

type ListEndDevicesRequest struct {
	ApplicationIds *ApplicationIdentifiers `protobuf:"bytes,1,opt,name=application_ids,json=applicationIds,proto3" json:"application_ids,omitempty"`
	// The names of the end device fields that should be returned.
	// See the API reference for which fields can be returned by the different services.
	FieldMask *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Order the results by this field path (must be present in the field mask).
	// Default ordering is by ID. Prepend with a minus (-) to reverse the order.
	Order string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	// Limit the number of results per page.
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Page number for pagination. 0 is interpreted as 1.
	Page                 uint32   `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEndDevicesRequest) Reset()         { *m = ListEndDevicesRequest{} }
func (m *ListEndDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListEndDevicesRequest) ProtoMessage()    {}
func (*ListEndDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{16}
}
func (m *ListEndDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEndDevicesRequest.Unmarshal(m, b)
}
func (m *ListEndDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEndDevicesRequest.Marshal(b, m, deterministic)
}
func (m *ListEndDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEndDevicesRequest.Merge(m, src)
}
func (m *ListEndDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListEndDevicesRequest.Size(m)
}
func (m *ListEndDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEndDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEndDevicesRequest proto.InternalMessageInfo

func (m *ListEndDevicesRequest) GetApplicationIds() *ApplicationIdentifiers {
	if m != nil {
		return m.ApplicationIds
	}
	return nil
}

func (m *ListEndDevicesRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *ListEndDevicesRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *ListEndDevicesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListEndDevicesRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type SetEndDeviceRequest struct {
	EndDevice *EndDevice `protobuf:"bytes,1,opt,name=end_device,json=endDevice,proto3" json:"end_device,omitempty"`
	// The names of the end device fields that should be updated.
	// See the API reference for which fields can be set on the different services.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetEndDeviceRequest) Reset()         { *m = SetEndDeviceRequest{} }
func (m *SetEndDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*SetEndDeviceRequest) ProtoMessage()    {}
func (*SetEndDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{17}
}
func (m *SetEndDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEndDeviceRequest.Unmarshal(m, b)
}
func (m *SetEndDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEndDeviceRequest.Marshal(b, m, deterministic)
}
func (m *SetEndDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEndDeviceRequest.Merge(m, src)
}
func (m *SetEndDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_SetEndDeviceRequest.Size(m)
}
func (m *SetEndDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEndDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetEndDeviceRequest proto.InternalMessageInfo

func (m *SetEndDeviceRequest) GetEndDevice() *EndDevice {
	if m != nil {
		return m.EndDevice
	}
	return nil
}

func (m *SetEndDeviceRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ResetAndGetEndDeviceRequest struct {
	EndDeviceIds *EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=end_device_ids,json=endDeviceIds,proto3" json:"end_device_ids,omitempty"`
	// The names of the end device fields that should be returned.
	// See the API reference for which fields can be returned by the different services.
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResetAndGetEndDeviceRequest) Reset()         { *m = ResetAndGetEndDeviceRequest{} }
func (m *ResetAndGetEndDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ResetAndGetEndDeviceRequest) ProtoMessage()    {}
func (*ResetAndGetEndDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{18}
}
func (m *ResetAndGetEndDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetAndGetEndDeviceRequest.Unmarshal(m, b)
}
func (m *ResetAndGetEndDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetAndGetEndDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ResetAndGetEndDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetAndGetEndDeviceRequest.Merge(m, src)
}
func (m *ResetAndGetEndDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ResetAndGetEndDeviceRequest.Size(m)
}
func (m *ResetAndGetEndDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetAndGetEndDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetAndGetEndDeviceRequest proto.InternalMessageInfo

func (m *ResetAndGetEndDeviceRequest) GetEndDeviceIds() *EndDeviceIdentifiers {
	if m != nil {
		return m.EndDeviceIds
	}
	return nil
}

func (m *ResetAndGetEndDeviceRequest) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type EndDeviceTemplate struct {
	EndDevice            *EndDevice       `protobuf:"bytes,1,opt,name=end_device,json=endDevice,proto3" json:"end_device,omitempty"`
	FieldMask            *types.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	MappingKey           string           `protobuf:"bytes,3,opt,name=mapping_key,json=mappingKey,proto3" json:"mapping_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EndDeviceTemplate) Reset()         { *m = EndDeviceTemplate{} }
func (m *EndDeviceTemplate) String() string { return proto.CompactTextString(m) }
func (*EndDeviceTemplate) ProtoMessage()    {}
func (*EndDeviceTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{19}
}
func (m *EndDeviceTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDeviceTemplate.Unmarshal(m, b)
}
func (m *EndDeviceTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDeviceTemplate.Marshal(b, m, deterministic)
}
func (m *EndDeviceTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDeviceTemplate.Merge(m, src)
}
func (m *EndDeviceTemplate) XXX_Size() int {
	return xxx_messageInfo_EndDeviceTemplate.Size(m)
}
func (m *EndDeviceTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDeviceTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_EndDeviceTemplate proto.InternalMessageInfo

func (m *EndDeviceTemplate) GetEndDevice() *EndDevice {
	if m != nil {
		return m.EndDevice
	}
	return nil
}

func (m *EndDeviceTemplate) GetFieldMask() *types.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *EndDeviceTemplate) GetMappingKey() string {
	if m != nil {
		return m.MappingKey
	}
	return ""
}

type EndDeviceTemplateFormat struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	FileExtensions       []string `protobuf:"bytes,3,rep,name=file_extensions,json=fileExtensions,proto3" json:"file_extensions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndDeviceTemplateFormat) Reset()         { *m = EndDeviceTemplateFormat{} }
func (m *EndDeviceTemplateFormat) String() string { return proto.CompactTextString(m) }
func (*EndDeviceTemplateFormat) ProtoMessage()    {}
func (*EndDeviceTemplateFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{20}
}
func (m *EndDeviceTemplateFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDeviceTemplateFormat.Unmarshal(m, b)
}
func (m *EndDeviceTemplateFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDeviceTemplateFormat.Marshal(b, m, deterministic)
}
func (m *EndDeviceTemplateFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDeviceTemplateFormat.Merge(m, src)
}
func (m *EndDeviceTemplateFormat) XXX_Size() int {
	return xxx_messageInfo_EndDeviceTemplateFormat.Size(m)
}
func (m *EndDeviceTemplateFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDeviceTemplateFormat.DiscardUnknown(m)
}

var xxx_messageInfo_EndDeviceTemplateFormat proto.InternalMessageInfo

func (m *EndDeviceTemplateFormat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EndDeviceTemplateFormat) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EndDeviceTemplateFormat) GetFileExtensions() []string {
	if m != nil {
		return m.FileExtensions
	}
	return nil
}

type EndDeviceTemplateFormats struct {
	Formats              map[string]*EndDeviceTemplateFormat `protobuf:"bytes,1,rep,name=formats,proto3" json:"formats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *EndDeviceTemplateFormats) Reset()         { *m = EndDeviceTemplateFormats{} }
func (m *EndDeviceTemplateFormats) String() string { return proto.CompactTextString(m) }
func (*EndDeviceTemplateFormats) ProtoMessage()    {}
func (*EndDeviceTemplateFormats) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{21}
}
func (m *EndDeviceTemplateFormats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndDeviceTemplateFormats.Unmarshal(m, b)
}
func (m *EndDeviceTemplateFormats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndDeviceTemplateFormats.Marshal(b, m, deterministic)
}
func (m *EndDeviceTemplateFormats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndDeviceTemplateFormats.Merge(m, src)
}
func (m *EndDeviceTemplateFormats) XXX_Size() int {
	return xxx_messageInfo_EndDeviceTemplateFormats.Size(m)
}
func (m *EndDeviceTemplateFormats) XXX_DiscardUnknown() {
	xxx_messageInfo_EndDeviceTemplateFormats.DiscardUnknown(m)
}

var xxx_messageInfo_EndDeviceTemplateFormats proto.InternalMessageInfo

func (m *EndDeviceTemplateFormats) GetFormats() map[string]*EndDeviceTemplateFormat {
	if m != nil {
		return m.Formats
	}
	return nil
}

type ConvertEndDeviceTemplateRequest struct {
	// ID of the format.
	FormatId string `protobuf:"bytes,1,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	// Data to convert.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// End device profile identifiers.
	EndDeviceVersionIds  *EndDeviceVersionIdentifiers `protobuf:"bytes,3,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ConvertEndDeviceTemplateRequest) Reset()         { *m = ConvertEndDeviceTemplateRequest{} }
func (m *ConvertEndDeviceTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*ConvertEndDeviceTemplateRequest) ProtoMessage()    {}
func (*ConvertEndDeviceTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a656ee0551c94a80, []int{22}
}
func (m *ConvertEndDeviceTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertEndDeviceTemplateRequest.Unmarshal(m, b)
}
func (m *ConvertEndDeviceTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertEndDeviceTemplateRequest.Marshal(b, m, deterministic)
}
func (m *ConvertEndDeviceTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertEndDeviceTemplateRequest.Merge(m, src)
}
func (m *ConvertEndDeviceTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_ConvertEndDeviceTemplateRequest.Size(m)
}
func (m *ConvertEndDeviceTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertEndDeviceTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertEndDeviceTemplateRequest proto.InternalMessageInfo

func (m *ConvertEndDeviceTemplateRequest) GetFormatId() string {
	if m != nil {
		return m.FormatId
	}
	return ""
}

func (m *ConvertEndDeviceTemplateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ConvertEndDeviceTemplateRequest) GetEndDeviceVersionIds() *EndDeviceVersionIdentifiers {
	if m != nil {
		return m.EndDeviceVersionIds
	}
	return nil
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.PowerState", PowerState_name, PowerState_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.PowerState", PowerState_name, PowerState_value)
	proto.RegisterType((*Session)(nil), "ttn.lorawan.v3.Session")
	golang_proto.RegisterType((*Session)(nil), "ttn.lorawan.v3.Session")
	proto.RegisterType((*BoolValue)(nil), "ttn.lorawan.v3.BoolValue")
	golang_proto.RegisterType((*BoolValue)(nil), "ttn.lorawan.v3.BoolValue")
	proto.RegisterType((*MACParameters)(nil), "ttn.lorawan.v3.MACParameters")
	golang_proto.RegisterType((*MACParameters)(nil), "ttn.lorawan.v3.MACParameters")
	proto.RegisterType((*MACParameters_Channel)(nil), "ttn.lorawan.v3.MACParameters.Channel")
	golang_proto.RegisterType((*MACParameters_Channel)(nil), "ttn.lorawan.v3.MACParameters.Channel")
	proto.RegisterType((*EndDeviceVersion)(nil), "ttn.lorawan.v3.EndDeviceVersion")
	golang_proto.RegisterType((*EndDeviceVersion)(nil), "ttn.lorawan.v3.EndDeviceVersion")
	proto.RegisterType((*ADRSettings)(nil), "ttn.lorawan.v3.ADRSettings")
	golang_proto.RegisterType((*ADRSettings)(nil), "ttn.lorawan.v3.ADRSettings")
	proto.RegisterType((*ADRSettings_StaticMode)(nil), "ttn.lorawan.v3.ADRSettings.StaticMode")
	golang_proto.RegisterType((*ADRSettings_StaticMode)(nil), "ttn.lorawan.v3.ADRSettings.StaticMode")
	proto.RegisterType((*ADRSettings_DynamicMode)(nil), "ttn.lorawan.v3.ADRSettings.DynamicMode")
	golang_proto.RegisterType((*ADRSettings_DynamicMode)(nil), "ttn.lorawan.v3.ADRSettings.DynamicMode")
	proto.RegisterType((*ADRSettings_DisabledMode)(nil), "ttn.lorawan.v3.ADRSettings.DisabledMode")
	golang_proto.RegisterType((*ADRSettings_DisabledMode)(nil), "ttn.lorawan.v3.ADRSettings.DisabledMode")
	proto.RegisterType((*MACSettings)(nil), "ttn.lorawan.v3.MACSettings")
	golang_proto.RegisterType((*MACSettings)(nil), "ttn.lorawan.v3.MACSettings")
	proto.RegisterType((*MACState)(nil), "ttn.lorawan.v3.MACState")
	golang_proto.RegisterType((*MACState)(nil), "ttn.lorawan.v3.MACState")
	proto.RegisterMapType((map[uint64]*MACState_DataRateRanges)(nil), "ttn.lorawan.v3.MACState.RejectedDataRateRangesEntry")
	golang_proto.RegisterMapType((map[uint64]*MACState_DataRateRanges)(nil), "ttn.lorawan.v3.MACState.RejectedDataRateRangesEntry")
	proto.RegisterType((*MACState_JoinRequest)(nil), "ttn.lorawan.v3.MACState.JoinRequest")
	golang_proto.RegisterType((*MACState_JoinRequest)(nil), "ttn.lorawan.v3.MACState.JoinRequest")
	proto.RegisterType((*MACState_JoinAccept)(nil), "ttn.lorawan.v3.MACState.JoinAccept")
	golang_proto.RegisterType((*MACState_JoinAccept)(nil), "ttn.lorawan.v3.MACState.JoinAccept")
	proto.RegisterType((*MACState_UplinkMessage)(nil), "ttn.lorawan.v3.MACState.UplinkMessage")
	golang_proto.RegisterType((*MACState_UplinkMessage)(nil), "ttn.lorawan.v3.MACState.UplinkMessage")
	proto.RegisterType((*MACState_UplinkMessage_TxSettings)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.TxSettings")
	golang_proto.RegisterType((*MACState_UplinkMessage_TxSettings)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.TxSettings")
	proto.RegisterType((*MACState_UplinkMessage_RxMetadata)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.RxMetadata")
	golang_proto.RegisterType((*MACState_UplinkMessage_RxMetadata)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.RxMetadata")
	proto.RegisterType((*MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.RxMetadata.PacketBrokerMetadata")
	golang_proto.RegisterType((*MACState_UplinkMessage_RxMetadata_PacketBrokerMetadata)(nil), "ttn.lorawan.v3.MACState.UplinkMessage.RxMetadata.PacketBrokerMetadata")
	proto.RegisterType((*MACState_DownlinkMessage)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage")
	golang_proto.RegisterType((*MACState_DownlinkMessage)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage")
	proto.RegisterType((*MACState_DownlinkMessage_Message)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message")
	golang_proto.RegisterType((*MACState_DownlinkMessage_Message)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message")
	proto.RegisterType((*MACState_DownlinkMessage_Message_MHDR)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message.MHDR")
	golang_proto.RegisterType((*MACState_DownlinkMessage_Message_MHDR)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message.MHDR")
	proto.RegisterType((*MACState_DownlinkMessage_Message_MACPayload)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message.MACPayload")
	golang_proto.RegisterType((*MACState_DownlinkMessage_Message_MACPayload)(nil), "ttn.lorawan.v3.MACState.DownlinkMessage.Message.MACPayload")
	proto.RegisterType((*MACState_DataRateRange)(nil), "ttn.lorawan.v3.MACState.DataRateRange")
	golang_proto.RegisterType((*MACState_DataRateRange)(nil), "ttn.lorawan.v3.MACState.DataRateRange")
	proto.RegisterType((*MACState_DataRateRanges)(nil), "ttn.lorawan.v3.MACState.DataRateRanges")
	golang_proto.RegisterType((*MACState_DataRateRanges)(nil), "ttn.lorawan.v3.MACState.DataRateRanges")
	proto.RegisterType((*EndDeviceAuthenticationCode)(nil), "ttn.lorawan.v3.EndDeviceAuthenticationCode")
	golang_proto.RegisterType((*EndDeviceAuthenticationCode)(nil), "ttn.lorawan.v3.EndDeviceAuthenticationCode")
	proto.RegisterType((*EndDevice)(nil), "ttn.lorawan.v3.EndDevice")
	golang_proto.RegisterType((*EndDevice)(nil), "ttn.lorawan.v3.EndDevice")
	proto.RegisterMapType((map[string]string)(nil), "ttn.lorawan.v3.EndDevice.AttributesEntry")
	golang_proto.RegisterMapType((map[string]string)(nil), "ttn.lorawan.v3.EndDevice.AttributesEntry")
	proto.RegisterMapType((map[string]*Location)(nil), "ttn.lorawan.v3.EndDevice.LocationsEntry")
	golang_proto.RegisterMapType((map[string]*Location)(nil), "ttn.lorawan.v3.EndDevice.LocationsEntry")
	proto.RegisterType((*EndDevices)(nil), "ttn.lorawan.v3.EndDevices")
	golang_proto.RegisterType((*EndDevices)(nil), "ttn.lorawan.v3.EndDevices")
	proto.RegisterType((*DevAddrPrefix)(nil), "ttn.lorawan.v3.DevAddrPrefix")
	golang_proto.RegisterType((*DevAddrPrefix)(nil), "ttn.lorawan.v3.DevAddrPrefix")
	proto.RegisterType((*CreateEndDeviceRequest)(nil), "ttn.lorawan.v3.CreateEndDeviceRequest")
	golang_proto.RegisterType((*CreateEndDeviceRequest)(nil), "ttn.lorawan.v3.CreateEndDeviceRequest")
	proto.RegisterType((*UpdateEndDeviceRequest)(nil), "ttn.lorawan.v3.UpdateEndDeviceRequest")
	golang_proto.RegisterType((*UpdateEndDeviceRequest)(nil), "ttn.lorawan.v3.UpdateEndDeviceRequest")
	proto.RegisterType((*BatchUpdateEndDeviceLastSeenRequest)(nil), "ttn.lorawan.v3.BatchUpdateEndDeviceLastSeenRequest")
	golang_proto.RegisterType((*BatchUpdateEndDeviceLastSeenRequest)(nil), "ttn.lorawan.v3.BatchUpdateEndDeviceLastSeenRequest")
	proto.RegisterType((*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate)(nil), "ttn.lorawan.v3.BatchUpdateEndDeviceLastSeenRequest.EndDeviceLastSeenUpdate")
	golang_proto.RegisterType((*BatchUpdateEndDeviceLastSeenRequest_EndDeviceLastSeenUpdate)(nil), "ttn.lorawan.v3.BatchUpdateEndDeviceLastSeenRequest.EndDeviceLastSeenUpdate")
	proto.RegisterType((*GetEndDeviceRequest)(nil), "ttn.lorawan.v3.GetEndDeviceRequest")
	golang_proto.RegisterType((*GetEndDeviceRequest)(nil), "ttn.lorawan.v3.GetEndDeviceRequest")
	proto.RegisterType((*GetEndDeviceIdentifiersForEUIsRequest)(nil), "ttn.lorawan.v3.GetEndDeviceIdentifiersForEUIsRequest")
	golang_proto.RegisterType((*GetEndDeviceIdentifiersForEUIsRequest)(nil), "ttn.lorawan.v3.GetEndDeviceIdentifiersForEUIsRequest")
	proto.RegisterType((*ListEndDevicesRequest)(nil), "ttn.lorawan.v3.ListEndDevicesRequest")
	golang_proto.RegisterType((*ListEndDevicesRequest)(nil), "ttn.lorawan.v3.ListEndDevicesRequest")
	proto.RegisterType((*SetEndDeviceRequest)(nil), "ttn.lorawan.v3.SetEndDeviceRequest")
	golang_proto.RegisterType((*SetEndDeviceRequest)(nil), "ttn.lorawan.v3.SetEndDeviceRequest")
	proto.RegisterType((*ResetAndGetEndDeviceRequest)(nil), "ttn.lorawan.v3.ResetAndGetEndDeviceRequest")
	golang_proto.RegisterType((*ResetAndGetEndDeviceRequest)(nil), "ttn.lorawan.v3.ResetAndGetEndDeviceRequest")
	proto.RegisterType((*EndDeviceTemplate)(nil), "ttn.lorawan.v3.EndDeviceTemplate")
	golang_proto.RegisterType((*EndDeviceTemplate)(nil), "ttn.lorawan.v3.EndDeviceTemplate")
	proto.RegisterType((*EndDeviceTemplateFormat)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormat")
	golang_proto.RegisterType((*EndDeviceTemplateFormat)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormat")
	proto.RegisterType((*EndDeviceTemplateFormats)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormats")
	golang_proto.RegisterType((*EndDeviceTemplateFormats)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormats")
	proto.RegisterMapType((map[string]*EndDeviceTemplateFormat)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormats.FormatsEntry")
	golang_proto.RegisterMapType((map[string]*EndDeviceTemplateFormat)(nil), "ttn.lorawan.v3.EndDeviceTemplateFormats.FormatsEntry")
	proto.RegisterType((*ConvertEndDeviceTemplateRequest)(nil), "ttn.lorawan.v3.ConvertEndDeviceTemplateRequest")
	golang_proto.RegisterType((*ConvertEndDeviceTemplateRequest)(nil), "ttn.lorawan.v3.ConvertEndDeviceTemplateRequest")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/end_device.proto", fileDescriptor_a656ee0551c94a80)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/end_device.proto", fileDescriptor_a656ee0551c94a80)
}

var fileDescriptor_a656ee0551c94a80 = []byte{
	// 5997 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x4f, 0x6c, 0x1b, 0xd9,
	0x79, 0xd7, 0x50, 0x94, 0x48, 0x7e, 0xa4, 0xc8, 0xd1, 0xd3, 0xbf, 0x11, 0xe5, 0x3f, 0x32, 0x57,
	0xeb, 0xa5, 0x9d, 0x15, 0x25, 0x53, 0xeb, 0x4d, 0xd6, 0x9b, 0xc4, 0x4b, 0x4a, 0x72, 0x2c, 0xd9,
	0xf2, 0xca, 0x63, 0xd9, 0xde, 0x64, 0xd7, 0x3b, 0x19, 0xcd, 0x3c, 0x51, 0xb3, 0x22, 0x67, 0x98,
	0x99, 0xa1, 0x4c, 0x65, 0xb3, 0x40, 0x90, 0xb6, 0x28, 0x1a, 0x20, 0x3d, 0x18, 0x45, 0x83, 0xa6,
	0x97, 0xa0, 0x87, 0xa2, 0x30, 0x8a, 0xa2, 0x87, 0x1e, 0x7a, 0x08, 0xd0, 0x5e, 0x02, 0xa4, 0x08,
	0xda, 0x26, 0x3d, 0x16, 0x28, 0x50, 0xa0, 0x87, 0x16, 0x01, 0xda, 0xc3, 0xde, 0x2a, 0x14, 0x6d,
	0xf1, 0xde, 0xbc, 0x37, 0x33, 0x24, 0x87, 0x12, 0x15, 0xef, 0x22, 0x1b, 0x20, 0x97, 0xdd, 0xd1,
	0x7b, 0xdf, 0xf7, 0x9b, 0x37, 0xef, 0x7d, 0xdf, 0xf7, 0xbe, 0x7f, 0x34, 0x14, 0xea, 0x96, 0xad,
	0x3e, 0x55, 0xcd, 0x45, 0xc7, 0x55, 0xb5, 0x83, 0x25, 0xb5, 0x69, 0x2c, 0x61, 0x53, 0x57, 0x74,
	0x7c, 0x68, 0x68, 0xb8, 0xd4, 0xb4, 0x2d, 0xd7, 0x42, 0x59, 0xd7, 0x35, 0x4b, 0x8c, 0xae, 0x74,
	0xb8, 0x92, 0xaf, 0xd4, 0x0c, 0x77, 0xbf, 0xb5, 0x5b, 0xd2, 0xac, 0xc6, 0x12, 0x36, 0x0f, 0xad,
	0xa3, 0xa6, 0x6d, 0xb5, 0x8f, 0x96, 0x28, 0xb1, 0xb6, 0x58, 0xc3, 0xe6, 0xe2, 0xa1, 0x5a, 0x37,
	0x74, 0xd5, 0xc5, 0x4b, 0x3d, 0x0f, 0x1e, 0x64, 0x7e, 0x31, 0x04, 0x51, 0xb3, 0x6a, 0x96, 0xc7,
	0xbc, 0xdb, 0xda, 0xa3, 0x7f, 0xd1, 0x3f, 0xe8, 0x13, 0x23, 0x5f, 0x0b, 0x91, 0xef, 0xec, 0xe3,
	0x9d, 0x7d, 0xc3, 0xac, 0x39, 0x1b, 0xa6, 0xde, 0x72, 0x5c, 0xdb, 0xc0, 0x4e, 0xf8, 0xd5, 0x35,
	0x6b, 0x71, 0xaf, 0xae, 0xd6, 0x9c, 0x25, 0xd5, 0x34, 0x2d, 0x57, 0x75, 0x0d, 0xcb, 0x74, 0x18,
	0xca, 0xea, 0x99, 0x50, 0x3e, 0x70, 0x2c, 0x33, 0x02, 0xe4, 0x42, 0xcd, 0xb2, 0x6a, 0x75, 0x1c,
	0x2c, 0x58, 0x6f, 0xd9, 0x94, 0x80, 0xcd, 0xcf, 0x77, 0xcf, 0xef, 0x19, 0xb8, 0xae, 0x2b, 0x0d,
	0xd5, 0x39, 0x60, 0x14, 0xe7, 0xba, 0x29, 0x1c, 0xd7, 0x6e, 0x69, 0x2e, 0x9b, 0xbd, 0xd8, 0x3d,
	0xeb, 0x1a, 0x0d, 0xec, 0xb8, 0x6a, 0xa3, 0xd9, 0x6f, 0x01, 0x4f, 0x6d, 0xb5, 0xd9, 0xc4, 0x36,
	0x5f, 0xe0, 0xf9, 0xa8, 0x13, 0x6d, 0x35, 0xf8, 0xf4, 0x4b, 0xbd, 0xd3, 0x86, 0x8e, 0x4d, 0xd7,
	0xd8, 0x33, 0x02, 0x8c, 0x73, 0xbd, 0x44, 0x07, 0xf8, 0x88, 0xcf, 0x5e, 0xec, 0x9d, 0xe5, 0xd2,
	0xc1, 0xf6, 0xa0, 0x97, 0xa0, 0x81, 0x1d, 0x47, 0xad, 0x61, 0xe7, 0x24, 0x0a, 0x57, 0xd5, 0x55,
	0x57, 0xed, 0xff, 0x92, 0xa6, 0xa1, 0xb9, 0x2d, 0x9b, 0x8b, 0x50, 0x29, 0x74, 0x5c, 0x56, 0x13,
	0x9b, 0x6a, 0xd3, 0x38, 0x2c, 0x2f, 0x59, 0x4d, 0x7a, 0x58, 0xbd, 0x07, 0x57, 0xf8, 0xde, 0x28,
	0x24, 0x1e, 0x60, 0xc7, 0x31, 0x2c, 0x13, 0xfd, 0x67, 0x0c, 0x92, 0x3a, 0x3e, 0x54, 0x54, 0x5d,
	0xb7, 0xa5, 0xd8, 0xbc, 0x50, 0xcc, 0x54, 0x7f, 0x1e, 0x7b, 0x56, 0x99, 0xdd, 0x84, 0x42, 0xf9,
	0xf5, 0xe5, 0xe5, 0x4a, 0x75, 0x75, 0xad, 0xf0, 0x83, 0x98, 0x90, 0xf8, 0x93, 0xd8, 0x28, 0x91,
	0x0d, 0xb3, 0x76, 0x5c, 0x1d, 0xfd, 0x66, 0x7c, 0x3f, 0xde, 0x14, 0x7e, 0xf1, 0x7c, 0xf6, 0x3b,
	0x02, 0xdc, 0xac, 0x59, 0x25, 0x77, 0x1f, 0xbb, 0x54, 0x82, 0x4a, 0x26, 0x76, 0x9f, 0x5a, 0xf6,
	0xc1, 0x52, 0xe7, 0x8a, 0x0f, 0x57, 0x96, 0x9a, 0x07, 0xb5, 0x25, 0xf7, 0xa8, 0x89, 0x9d, 0xd2,
	0x96, 0x6a, 0x3b, 0xfb, 0x6a, 0xfd, 0xf6, 0xfa, 0x3b, 0xd5, 0x23, 0x17, 0x3b, 0xe8, 0xcc, 0x00,
	0x0f, 0xcd, 0x86, 0x07, 0xf1, 0x1a, 0x05, 0xf8, 0xf8, 0xf9, 0xec, 0x0f, 0x85, 0xfc, 0xbd, 0xc1,
	0x50, 0xb4, 0x86, 0xbe, 0xe4, 0xba, 0xe6, 0x62, 0xfd, 0xe9, 0xa2, 0x56, 0x37, 0x96, 0xb4, 0x96,
	0xe3, 0x5a, 0x0d, 0xaa, 0x24, 0xa5, 0x7b, 0xf8, 0xa9, 0x07, 0x78, 0xab, 0xae, 0xd6, 0x0a, 0x2f,
	0x8e, 0xf7, 0x15, 0xec, 0xae, 0xb7, 0x55, 0xcd, 0xa5, 0x98, 0x72, 0x42, 0xc7, 0x87, 0x15, 0x5d,
	0xb7, 0xd1, 0x1b, 0x10, 0x27, 0xf2, 0x23, 0x0d, 0xcf, 0x0b, 0xc5, 0x74, 0x79, 0xae, 0xd4, 0x69,
	0x50, 0x4a, 0xec, 0x58, 0xee, 0xe0, 0x23, 0xa7, 0x9a, 0x3c, 0xae, 0x8e, 0x7c, 0x57, 0x88, 0x89,
	0x82, 0x4c, 0x59, 0xd0, 0x25, 0x18, 0xab, 0xab, 0x8e, 0xab, 0xec, 0x29, 0x9a, 0xe9, 0x2a, 0xad,
	0xa6, 0x14, 0x9f, 0x17, 0x8a, 0x63, 0x32, 0x90, 0xc1, 0x5b, 0xab, 0xa6, 0xfb, 0xb0, 0x89, 0x8a,
	0x30, 0x4e, 0x49, 0x4c, 0x46, 0xa4, 0x5b, 0x4f, 0x4d, 0x69, 0x84, 0x92, 0x51, 0xde, 0x7b, 0x84,
	0x6e, 0xcd, 0x7a, 0x6a, 0xfa, 0x94, 0x6a, 0x98, 0x72, 0x34, 0xa0, 0xac, 0xf8, 0x94, 0x25, 0x98,
	0xa4, 0x94, 0x9a, 0x65, 0xee, 0x85, 0x89, 0x13, 0x94, 0x58, 0x24, 0x73, 0xab, 0x96, 0xb9, 0xe7,
	0xd3, 0xbf, 0x01, 0xe0, 0xb8, 0xaa, 0xed, 0x62, 0x5d, 0x51, 0x5d, 0x29, 0x49, 0xbf, 0x33, 0x5f,
	0xf2, 0x54, 0xb5, 0xc4, 0x55, 0xb5, 0xb4, 0xc3, 0x75, 0x59, 0x4e, 0x31, 0xea, 0x8a, 0x8b, 0x30,
	0x9c, 0xfb, 0x46, 0x0b, 0xb7, 0x08, 0x67, 0xb3, 0x59, 0x37, 0x34, 0x2a, 0xb5, 0xf4, 0x6d, 0x75,
	0xc3, 0x3c, 0x70, 0xa4, 0xd4, 0xfc, 0x70, 0x31, 0x5d, 0x7e, 0xa9, 0x7b, 0xd3, 0x2a, 0x01, 0xf1,
	0x1a, 0xa3, 0x95, 0xf3, 0x1e, 0x50, 0xc4, 0x94, 0x73, 0x23, 0xf9, 0xf1, 0xf3, 0xd9, 0x78, 0x52,
	0x10, 0x85, 0x4d, 0xf2, 0xdf, 0x58, 0x61, 0x05, 0x52, 0x55, 0xcb, 0xaa, 0x3f, 0x52, 0xeb, 0x2d,
	0x8c, 0x26, 0x61, 0xe4, 0x90, 0x3c, 0x48, 0xc2, 0xbc, 0x50, 0x4c, 0xca, 0xde, 0x1f, 0x37, 0xc4,
	0x5f, 0x3c, 0x9f, 0x8d, 0x49, 0xc2, 0xc7, 0xcf, 0x67, 0x47, 0x09, 0xa3, 0x24, 0x14, 0x7e, 0x9c,
	0x83, 0xb1, 0xad, 0xca, 0xea, 0xb6, 0x6a, 0xab, 0x0d, 0xec, 0x62, 0xdb, 0x41, 0xb3, 0x90, 0x6c,
	0xa8, 0x6d, 0x05, 0x1b, 0x76, 0x93, 0x32, 0xc7, 0xe4, 0x44, 0x43, 0x6d, 0xaf, 0x1b, 0x76, 0x13,
	0x3d, 0x82, 0x09, 0x55, 0xb7, 0x15, 0xa2, 0xd4, 0x8a, 0xad, 0xba, 0x58, 0x31, 0x4c, 0x1d, 0xb7,
	0xe9, 0x01, 0x66, 0xcb, 0xe7, 0xbb, 0xbf, 0x67, 0x4d, 0x75, 0x55, 0x59, 0x75, 0xf1, 0x06, 0x21,
	0xa2, 0x62, 0xf0, 0x1d, 0x2a, 0x06, 0xa2, 0xaa, 0xdb, 0x1d, 0x73, 0xe8, 0x35, 0x40, 0x04, 0xd7,
	0x6d, 0x2b, 0x4d, 0xeb, 0x29, 0xb6, 0x19, 0x2c, 0x3d, 0xf0, 0x6a, 0xe2, 0xb8, 0x1a, 0xbf, 0x1a,
	0x93, 0x72, 0x72, 0x4e, 0xd5, 0xed, 0x9d, 0xf6, 0x36, 0x21, 0xf0, 0xb8, 0xae, 0x40, 0x86, 0x70,
	0x99, 0xbb, 0x8a, 0x6b, 0xab, 0xa6, 0xe3, 0x1d, 0x7b, 0x40, 0x0f, 0xaa, 0x6e, 0xdf, 0xdb, 0xdd,
	0x21, 0x53, 0xe8, 0x32, 0x8c, 0x11, 0x52, 0x55, 0x3b, 0x50, 0xea, 0x46, 0xc3, 0x70, 0xbd, 0x53,
	0xaf, 0xc6, 0x24, 0x41, 0x4e, 0xab, 0xba, 0x5d, 0xd1, 0x0e, 0xee, 0x92, 0xe1, 0x30, 0x9d, 0x8e,
	0xeb, 0xea, 0x11, 0x3d, 0xf7, 0x0e, 0xba, 0x35, 0x32, 0x8c, 0xbe, 0x0c, 0x29, 0xbb, 0x7d, 0x8d,
	0xd1, 0xa4, 0xe8, 0xe7, 0xcf, 0x74, 0x7f, 0xbe, 0xdc, 0xa6, 0xb4, 0xa1, 0x0f, 0x4f, 0xda, 0xed,
	0x6b, 0x1e, 0xff, 0x57, 0x61, 0x92, 0xf2, 0xfb, 0x1b, 0x69, 0xed, 0xed, 0x39, 0xd8, 0x95, 0x80,
	0x42, 0x5d, 0xe8, 0xb7, 0x93, 0x6f, 0x53, 0xaa, 0x10, 0xe2, 0x38, 0x41, 0xec, 0x98, 0x24, 0x67,
	0x64, 0xb7, 0xcb, 0x3d, 0x67, 0x94, 0x3e, 0xe3, 0x19, 0xd9, 0xed, 0x72, 0xe7, 0x19, 0x95, 0x60,
	0x8c, 0xe0, 0xee, 0xd9, 0xf8, 0x1b, 0x2d, 0x6c, 0x6a, 0x47, 0x52, 0x66, 0x5e, 0x28, 0xc6, 0xab,
	0xa9, 0xe3, 0xea, 0x68, 0x39, 0x5e, 0xfc, 0xe1, 0xf7, 0x46, 0xe5, 0x8c, 0xdd, 0x2e, 0xdf, 0xe2,
	0xd3, 0xe8, 0x01, 0x64, 0x89, 0x18, 0xe9, 0x2d, 0xf7, 0x48, 0xd1, 0x8e, 0xb4, 0x3a, 0x96, 0xc6,
	0xe8, 0x12, 0x7a, 0xc5, 0xbe, 0x56, 0xb3, 0x71, 0x4d, 0x75, 0xb1, 0xbe, 0xd6, 0x72, 0x8f, 0x56,
	0x09, 0x69, 0x68, 0x21, 0x99, 0x86, 0xda, 0xf6, 0xc7, 0x91, 0x0e, 0x33, 0x36, 0xfe, 0xc0, 0x32,
	0x4c, 0x85, 0x5c, 0xa2, 0x4a, 0x13, 0xdb, 0x86, 0xa5, 0x1b, 0x9a, 0xe1, 0x1e, 0x49, 0x59, 0x8a,
	0x5e, 0xe8, 0x39, 0x05, 0x4a, 0x4e, 0xd4, 0x74, 0xbd, 0xdd, 0xb4, 0x4c, 0x6c, 0x86, 0xb7, 0x6f,
	0xca, 0xf6, 0x67, 0xb7, 0x03, 0x28, 0x54, 0x03, 0x89, 0xbd, 0x45, 0xb3, 0x5a, 0xa6, 0xdb, 0xf1,
	0x9a, 0x5c, 0xf4, 0x47, 0x78, 0xaf, 0x59, 0x25, 0xe4, 0x11, 0xef, 0x99, 0xb6, 0x83, 0xe9, 0xf0,
	0x8b, 0xde, 0x84, 0x89, 0xa6, 0x61, 0xd6, 0x14, 0xa7, 0x6e, 0xb9, 0xa1, 0x9d, 0x15, 0xe9, 0xce,
	0xa6, 0x8f, 0xab, 0xc9, 0xf2, 0xa8, 0x34, 0x44, 0xf7, 0x76, 0x9c, 0xd0, 0x3d, 0xa8, 0x5b, 0x6e,
	0xb0, 0xc1, 0xef, 0xc2, 0x6c, 0xc0, 0xdc, 0x7d, 0xdc, 0xe3, 0x83, 0x1c, 0x37, 0x11, 0xeb, 0x29,
	0x0e, 0xdc, 0x79, 0xda, 0xaf, 0x83, 0xb8, 0x8b, 0x55, 0xcd, 0x32, 0x43, 0xcb, 0x42, 0xbd, 0xcb,
	0xca, 0x79, 0x44, 0xc1, 0xa2, 0xee, 0x40, 0x52, 0xdb, 0x57, 0x4d, 0x13, 0xd7, 0x1d, 0x69, 0x82,
	0x9a, 0xb9, 0x97, 0xbb, 0xd7, 0xd0, 0x61, 0x6d, 0x4a, 0xab, 0x1e, 0x35, 0xdd, 0xac, 0x67, 0x42,
	0x2c, 0x29, 0xc8, 0x3e, 0x00, 0x5a, 0x87, 0xf1, 0x56, 0x93, 0xd8, 0x3a, 0x45, 0x7f, 0x8a, 0xeb,
	0x75, 0x7a, 0xe6, 0xd2, 0x24, 0xb5, 0xc4, 0xb3, 0xdd, 0xa8, 0xbe, 0xe5, 0x93, 0x73, 0x1e, 0xcf,
	0x1a, 0x61, 0x21, 0x27, 0x8b, 0x36, 0x60, 0x82, 0xdb, 0xde, 0x30, 0xd0, 0xd4, 0x69, 0x40, 0xe3,
	0x9c, 0x2b, 0x80, 0x7a, 0x02, 0xd3, 0x1d, 0x76, 0x44, 0xc1, 0xec, 0xb0, 0xa5, 0x69, 0x8a, 0x56,
	0xec, 0x11, 0xee, 0x35, 0x99, 0x1b, 0x17, 0x2e, 0x17, 0x1e, 0xf8, 0x44, 0xc8, 0xec, 0xf0, 0x99,
	0x30, 0x3c, 0x35, 0x2d, 0x01, 0xfc, 0xcc, 0x49, 0xf0, 0xd4, 0xa6, 0x44, 0xc2, 0x77, 0xcc, 0xa0,
	0x1a, 0x5c, 0xec, 0x2b, 0x31, 0x8a, 0x77, 0x5b, 0x48, 0xf4, 0x3d, 0x85, 0x13, 0xe5, 0xc6, 0x7b,
	0x43, 0x3e, 0x52, 0x70, 0xe8, 0x5c, 0xfe, 0x9f, 0x63, 0x90, 0x60, 0x07, 0x4b, 0x24, 0x89, 0x1d,
	0x62, 0x20, 0x49, 0x42, 0x84, 0x24, 0x79, 0x44, 0x81, 0x24, 0x7d, 0x01, 0x90, 0x7f, 0x6a, 0x01,
	0x67, 0xac, 0xdb, 0xe8, 0xf8, 0x87, 0x14, 0x70, 0x3e, 0x82, 0x89, 0x86, 0x61, 0xf6, 0xa8, 0xc4,
	0xf0, 0x19, 0x2d, 0x60, 0xc3, 0x30, 0x3b, 0x75, 0x82, 0xe0, 0x12, 0x8b, 0xf6, 0x82, 0xb7, 0x1f,
	0x31, 0x68, 0x1d, 0xb8, 0x2f, 0xc1, 0x18, 0x36, 0xd5, 0xdd, 0x3a, 0x56, 0xbc, 0x3d, 0xa0, 0x17,
	0x5f, 0x52, 0xce, 0x78, 0x83, 0x0f, 0xe9, 0x58, 0x70, 0xd9, 0x77, 0x5c, 0xfb, 0x31, 0x71, 0x78,
	0x33, 0x9e, 0x1c, 0x16, 0xe3, 0x85, 0xe3, 0x11, 0x10, 0xd7, 0x4d, 0x7d, 0x8d, 0x86, 0x79, 0x8f,
	0xb0, 0x4d, 0xbd, 0xe2, 0xaf, 0xc0, 0xb0, 0xa1, 0x3b, 0x74, 0xbb, 0xd3, 0xe5, 0xcf, 0x75, 0xaf,
	0xb0, 0x9b, 0x7c, 0x23, 0x88, 0x1a, 0x42, 0x4e, 0x1b, 0x41, 0x40, 0x5b, 0x90, 0x63, 0x8c, 0xca,
	0xa1, 0x47, 0x4c, 0x4f, 0x22, 0x5b, 0xce, 0x47, 0x68, 0x37, 0x83, 0x0b, 0x7d, 0x73, 0x96, 0x11,
	0xf0, 0x75, 0xed, 0xc0, 0x04, 0x87, 0x6b, 0xee, 0x1f, 0xf9, 0x90, 0xc3, 0xd1, 0x90, 0xdb, 0xb7,
	0xbf, 0xda, 0x0b, 0x39, 0xce, 0x08, 0xb6, 0xf7, 0x8f, 0x38, 0xea, 0x0a, 0x8c, 0xfb, 0x82, 0xa2,
	0x34, 0xeb, 0xaa, 0xa9, 0x18, 0x3a, 0x3d, 0x9d, 0x14, 0x75, 0x0a, 0xec, 0x98, 0xf4, 0x96, 0x9c,
	0xf3, 0x29, 0xb6, 0xeb, 0xaa, 0xb9, 0xa1, 0xa3, 0x79, 0x18, 0x6d, 0xee, 0x5b, 0xae, 0xe5, 0x48,
	0x23, 0xf3, 0xc3, 0xc5, 0x14, 0xb7, 0x43, 0x22, 0xc8, 0x6c, 0x1c, 0x15, 0x41, 0x74, 0x5a, 0xcd,
	0xa6, 0x65, 0xbb, 0x8e, 0xa2, 0xd5, 0x55, 0xc7, 0x51, 0x76, 0xa9, 0xab, 0x91, 0x94, 0xb3, 0x7c,
	0x7c, 0x95, 0x0c, 0x57, 0x23, 0x28, 0x35, 0xea, 0x68, 0x74, 0x53, 0xae, 0xa2, 0x2d, 0x98, 0xd4,
	0xf1, 0x9e, 0xda, 0xaa, 0xbb, 0x4a, 0x43, 0xd5, 0x14, 0x07, 0xbb, 0x2e, 0xf1, 0xd0, 0x99, 0x9b,
	0x39, 0x17, 0xb1, 0xa9, 0x0f, 0x18, 0x89, 0x8c, 0x18, 0xe3, 0x96, 0xaa, 0xf1, 0x31, 0x22, 0x41,
	0x44, 0xe2, 0x03, 0x35, 0x21, 0x2e, 0x49, 0x5c, 0xce, 0x34, 0x8c, 0x90, 0x69, 0x26, 0x44, 0x6a,
	0x3b, 0x44, 0x04, 0x8c, 0x48, 0x6d, 0x77, 0x10, 0xf9, 0x9f, 0x40, 0xae, 0x2c, 0xea, 0x37, 0x24,
	0xe5, 0x0c, 0x1f, 0xdc, 0xb4, 0x0c, 0x13, 0xbd, 0x0a, 0xc8, 0xc6, 0x0e, 0x66, 0x24, 0x8a, 0x69,
	0x99, 0x1a, 0x76, 0xa8, 0x3f, 0x90, 0x94, 0x45, 0x6f, 0x86, 0xd0, 0xdd, 0xa3, 0xe3, 0x48, 0x05,
	0xbe, 0x64, 0x65, 0xcf, 0xb2, 0x1b, 0xaa, 0x4b, 0xec, 0x3e, 0x75, 0x06, 0x22, 0x0c, 0xda, 0x96,
	0x17, 0x55, 0x6e, 0xab, 0x47, 0x75, 0x4b, 0xd5, 0x6f, 0xf9, 0xf4, 0x21, 0x81, 0x1c, 0x67, 0x68,
	0xc1, 0x64, 0xe1, 0x7f, 0x12, 0x90, 0xae, 0xac, 0xc9, 0xfe, 0x7e, 0xbc, 0x05, 0xa3, 0x0e, 0x89,
	0x15, 0x35, 0x26, 0xfa, 0x97, 0x23, 0xec, 0x26, 0x27, 0x2e, 0x3d, 0xa0, 0x94, 0x5b, 0x96, 0x8e,
	0x6f, 0x0f, 0xc9, 0x8c, 0x0f, 0xad, 0x42, 0x42, 0x3f, 0x32, 0xd5, 0x86, 0xa1, 0x51, 0x41, 0x4f,
	0x97, 0x5f, 0x39, 0x09, 0x62, 0xcd, 0x23, 0x65, 0x18, 0x9c, 0x13, 0xdd, 0x82, 0xa4, 0x6e, 0x38,
	0x44, 0x89, 0x75, 0x16, 0x28, 0x15, 0x4f, 0x44, 0x61, 0xb4, 0x0c, 0xc6, 0xe7, 0xcd, 0xff, 0x48,
	0x00, 0x08, 0x56, 0x89, 0xde, 0x86, 0x5c, 0xb7, 0x0d, 0x12, 0xce, 0x66, 0x83, 0xc6, 0xf4, 0x0e,
	0x03, 0xb4, 0x08, 0xd9, 0x2e, 0xd7, 0x3b, 0xd6, 0xe9, 0x4a, 0x67, 0xdc, 0xb0, 0xdf, 0xbd, 0x00,
	0x49, 0xdf, 0xe7, 0x1e, 0xa6, 0x84, 0xc4, 0x1e, 0x5f, 0x8d, 0x4b, 0xb9, 0xa2, 0x20, 0x27, 0x4c,
	0xcf, 0xe5, 0x0e, 0xcc, 0x54, 0xfe, 0x2f, 0xe3, 0x90, 0x0e, 0xed, 0x10, 0x5a, 0x81, 0xd1, 0x86,
	0x6a, 0xd7, 0x0c, 0x93, 0x9d, 0xce, 0x5c, 0x4f, 0x54, 0x75, 0xab, 0x6e, 0xa9, 0xec, 0x22, 0x63,
	0xa4, 0xe8, 0x7e, 0xb4, 0x51, 0x8f, 0x0d, 0x7c, 0x5f, 0xf5, 0xda, 0xf3, 0xfb, 0xd1, 0xf6, 0x7c,
	0xf8, 0x0c, 0x90, 0xdd, 0xa6, 0x5c, 0x06, 0x44, 0x56, 0xd9, 0xb5, 0x9b, 0x71, 0x8a, 0x78, 0xae,
	0xe7, 0x33, 0x1f, 0x6e, 0x98, 0xee, 0x4a, 0x99, 0x62, 0x85, 0xc2, 0x9c, 0x86, 0x61, 0x76, 0x84,
	0x39, 0x04, 0x53, 0x6d, 0x47, 0x05, 0x47, 0x67, 0xc0, 0x54, 0xdb, 0x1d, 0x98, 0x1b, 0x40, 0x6c,
	0x43, 0x67, 0xe8, 0x74, 0x1a, 0x1a, 0x3b, 0xe4, 0xe1, 0xa2, 0x20, 0x43, 0xc3, 0x30, 0x79, 0x68,
	0x45, 0xa0, 0xd4, 0x76, 0x00, 0x95, 0x38, 0x2b, 0x94, 0xda, 0xbe, 0xd7, 0x23, 0x32, 0x12, 0x64,
	0xc2, 0xda, 0x10, 0xba, 0xfd, 0x80, 0xc7, 0xae, 0xf3, 0x42, 0x75, 0x14, 0xe2, 0x0d, 0x4b, 0xc7,
	0x85, 0x7f, 0x9a, 0x82, 0x74, 0xc8, 0x44, 0xa2, 0x0a, 0xe4, 0x98, 0xa1, 0xa6, 0x9e, 0x9e, 0xd5,
	0x72, 0x99, 0xa4, 0xcd, 0xf6, 0xac, 0x6a, 0x8d, 0xe5, 0xfa, 0xe4, 0x31, 0xca, 0x51, 0xdd, 0xf1,
	0xe8, 0xd1, 0x63, 0x98, 0x0a, 0x5c, 0xa5, 0xb0, 0xff, 0xef, 0x09, 0x5c, 0x8f, 0xff, 0xbf, 0xcd,
	0x9c, 0x21, 0xcf, 0xbb, 0x67, 0x3e, 0x58, 0xb3, 0x63, 0xd0, 0x73, 0xf9, 0xdf, 0x3b, 0xc9, 0x6b,
	0x1f, 0x5c, 0xf4, 0xfa, 0xb8, 0xed, 0xf7, 0xa2, 0x03, 0x0a, 0x4f, 0x00, 0x7b, 0xc2, 0x4a, 0xdf,
	0xec, 0x33, 0x7f, 0xb7, 0x37, 0xc6, 0xd8, 0x88, 0x08, 0x03, 0x66, 0x07, 0x02, 0xeb, 0x89, 0x0c,
	0xfc, 0x43, 0xd1, 0xfc, 0x43, 0x19, 0x19, 0xec, 0x50, 0x56, 0xf9, 0xa1, 0xbc, 0x11, 0x8e, 0xba,
	0xb9, 0xc8, 0x46, 0x47, 0xdd, 0xde, 0x22, 0x82, 0x80, 0x7b, 0xa7, 0x4f, 0xc0, 0x9d, 0x88, 0x3e,
	0xce, 0xce, 0x98, 0x9a, 0x6d, 0x4f, 0x6f, 0xac, 0x7d, 0x3f, 0x3a, 0xd6, 0x4e, 0x0e, 0x6e, 0x41,
	0x7a, 0xc2, 0xec, 0xd5, 0xee, 0x30, 0x3b, 0x35, 0xd0, 0x76, 0x77, 0xc6, 0xde, 0xb7, 0x20, 0xbf,
	0xa7, 0x6a, 0xae, 0x65, 0x1f, 0x29, 0x4d, 0x7a, 0x1f, 0xfb, 0x78, 0x06, 0x76, 0x24, 0x98, 0x1f,
	0x2e, 0xc6, 0x7d, 0x47, 0xe7, 0xeb, 0xb2, 0xc4, 0x68, 0xb7, 0x29, 0xe9, 0xad, 0x80, 0x12, 0xdd,
	0xeb, 0x89, 0xe1, 0xd3, 0x7d, 0xae, 0xb1, 0xde, 0x18, 0x9e, 0xad, 0xab, 0x23, 0x7c, 0xbf, 0x03,
	0x53, 0xbe, 0x77, 0xb1, 0x52, 0x56, 0x76, 0x0d, 0x96, 0x05, 0xa4, 0xbe, 0xc3, 0xc9, 0xb1, 0x18,
	0xe7, 0x5b, 0x29, 0x57, 0x0d, 0x9a, 0x26, 0x44, 0xaf, 0x43, 0xa2, 0xe5, 0x60, 0x45, 0xd5, 0x6d,
	0xe6, 0x4c, 0xf4, 0x67, 0xa7, 0x91, 0xee, 0x68, 0xcb, 0xc1, 0x15, 0xdd, 0x46, 0x5f, 0x06, 0x20,
	0x41, 0x16, 0xbb, 0x82, 0xb2, 0xa7, 0x5e, 0x41, 0x94, 0x39, 0xa5, 0xea, 0xf6, 0x96, 0x77, 0x13,
	0xbd, 0x09, 0x19, 0xe6, 0xfd, 0x78, 0x6b, 0xcf, 0x9d, 0xb6, 0x76, 0xf0, 0xc8, 0xe9, 0xa2, 0xef,
	0xc3, 0x0c, 0xf1, 0x30, 0x5a, 0x4e, 0x6f, 0x02, 0x43, 0x3c, 0x4d, 0x1b, 0xa6, 0x3c, 0xce, 0xee,
	0x6c, 0xc5, 0x23, 0x90, 0x18, 0x64, 0x6f, 0xb6, 0x62, 0xfc, 0x74, 0x63, 0x2c, 0x4f, 0x7b, 0xdc,
	0x3d, 0xc9, 0x89, 0xdb, 0x30, 0xae, 0x63, 0xc7, 0xb0, 0xb1, 0xae, 0x04, 0x5a, 0x87, 0x06, 0xd0,
	0xba, 0x1c, 0x63, 0x93, 0xb9, 0xf2, 0x69, 0x70, 0xae, 0x03, 0xa9, 0x5b, 0x09, 0x27, 0x06, 0x57,
	0x42, 0x29, 0x84, 0xdd, 0xa9, 0x8b, 0x5f, 0x87, 0xb9, 0xe0, 0x25, 0xbd, 0x3a, 0x39, 0x39, 0xb0,
	0x4e, 0xce, 0xf8, 0xaf, 0x28, 0x77, 0x5f, 0xee, 0x53, 0xe1, 0x37, 0x04, 0x2a, 0x3a, 0x35, 0x90,
	0x8a, 0x4e, 0x04, 0xb8, 0x81, 0xa6, 0x3e, 0x81, 0x69, 0x8e, 0xd9, 0xa5, 0x69, 0xd3, 0x67, 0xd4,
	0x34, 0x0e, 0xbf, 0x15, 0x56, 0xb8, 0x3a, 0x5c, 0xe0, 0xf0, 0x7d, 0xf2, 0x16, 0x33, 0x67, 0xcc,
	0x5b, 0xe4, 0x19, 0x5e, 0x25, 0x22, 0x7d, 0x11, 0xf1, 0xb6, 0xae, 0x34, 0x86, 0x74, 0xc6, 0x34,
	0x46, 0xe7, 0xdb, 0x3a, 0xb3, 0x19, 0x07, 0x70, 0x89, 0xbf, 0xad, 0xff, 0x8d, 0x3a, 0x37, 0xf0,
	0xb1, 0x73, 0x11, 0xdd, 0x8e, 0xbc, 0x58, 0x9f, 0x04, 0xd2, 0x15, 0x75, 0xc1, 0x9e, 0x1b, 0x48,
	0x02, 0xa4, 0xae, 0x57, 0x04, 0x62, 0xf0, 0x0e, 0xf0, 0x39, 0xa5, 0xe7, 0xbe, 0x3d, 0x3f, 0x10,
	0x36, 0x17, 0xa3, 0x6a, 0xd7, 0xb5, 0xbb, 0x01, 0x62, 0x58, 0xc0, 0x68, 0x56, 0xff, 0x02, 0x45,
	0xbc, 0xd8, 0xb3, 0x29, 0x34, 0x19, 0xb0, 0xbe, 0x21, 0x6f, 0x7b, 0x90, 0xd9, 0x40, 0xa2, 0x68,
	0xf6, 0xff, 0x31, 0xcc, 0x71, 0xb7, 0x4a, 0xf3, 0xab, 0x19, 0x8a, 0x61, 0xba, 0xd8, 0x3e, 0x54,
	0xeb, 0xd2, 0xc5, 0xd3, 0xec, 0xd7, 0x8c, 0xe7, 0x62, 0xad, 0xf2, 0x0a, 0xc6, 0x06, 0xe3, 0x8c,
	0xce, 0xf3, 0xcd, 0x7f, 0x52, 0x79, 0xbe, 0x4b, 0xbf, 0x44, 0x9e, 0x6f, 0x11, 0x86, 0xc9, 0xbd,
	0x52, 0x88, 0x0e, 0xc7, 0x43, 0x41, 0x9b, 0x4c, 0xe8, 0xd0, 0x6d, 0x40, 0x8e, 0xb6, 0x8f, 0xf5,
	0x56, 0x1d, 0x87, 0xca, 0x3c, 0x2f, 0x9d, 0x7e, 0xa9, 0x31, 0xa6, 0x88, 0x9a, 0x4e, 0xe1, 0x0f,
	0x8b, 0x90, 0x24, 0x4e, 0xad, 0xab, 0xba, 0x18, 0x3d, 0x02, 0xa4, 0xb5, 0x6c, 0x1b, 0x13, 0xf3,
	0xee, 0xe7, 0x4e, 0x99, 0x53, 0x7b, 0xfe, 0xc4, 0x04, 0x6b, 0x38, 0x70, 0x66, 0x10, 0xa1, 0x5a,
	0xcf, 0x23, 0x12, 0x9b, 0x33, 0xb1, 0x0e, 0x70, 0x63, 0x67, 0xc4, 0xe5, 0x62, 0x1d, 0xe0, 0x56,
	0x21, 0xe3, 0x35, 0x1c, 0x78, 0x79, 0x10, 0x96, 0xd9, 0x99, 0xea, 0x46, 0xf4, 0xf2, 0x26, 0x41,
	0x5c, 0x9a, 0xf6, 0x98, 0xe8, 0x70, 0x54, 0xce, 0x29, 0xfe, 0x02, 0x39, 0xa7, 0xc7, 0x90, 0xf7,
	0xeb, 0x7f, 0x86, 0xdd, 0xc0, 0x7a, 0x20, 0xc2, 0x2a, 0x77, 0x45, 0x4f, 0xaa, 0xef, 0xcd, 0xf0,
	0x0a, 0x21, 0x65, 0xe6, 0x27, 0x56, 0x71, 0xd1, 0x75, 0x90, 0x28, 0xb0, 0x8e, 0x0f, 0x15, 0x76,
	0x11, 0xfb, 0xa5, 0x4d, 0xaf, 0x12, 0x39, 0x41, 0xe6, 0xd7, 0xf0, 0xe1, 0x03, 0x3a, 0xcb, 0x6a,
	0x9c, 0x7d, 0x23, 0x8c, 0xc4, 0x0b, 0x46, 0x18, 0x18, 0xce, 0x35, 0xb1, 0xa9, 0x13, 0xec, 0xa8,
	0xf2, 0x23, 0xf3, 0x4e, 0x07, 0xab, 0x3e, 0x32, 0xa0, 0x88, 0x39, 0xb4, 0x0e, 0x22, 0x2b, 0x72,
	0xda, 0xd8, 0x69, 0x5a, 0xa6, 0x83, 0x79, 0x61, 0x33, 0xea, 0x7c, 0x56, 0xad, 0x46, 0x43, 0x35,
	0x75, 0x39, 0xe7, 0xf1, 0xc8, 0x9c, 0x85, 0xc0, 0xf0, 0xd5, 0x52, 0x9b, 0xe5, 0xb8, 0x9e, 0x83,
	0x7a, 0x0a, 0x0c, 0xe3, 0x91, 0x19, 0x0b, 0xba, 0x0f, 0x88, 0xad, 0x86, 0xa6, 0xa4, 0x54, 0x4d,
	0xc3, 0x4d, 0x97, 0x79, 0xab, 0x2f, 0x45, 0xa5, 0xd3, 0x88, 0x5a, 0x95, 0x36, 0x2d, 0xc3, 0xac,
	0x50, 0x52, 0x99, 0x7d, 0x4c, 0x30, 0x82, 0x1e, 0xc1, 0x24, 0x5f, 0x19, 0xc5, 0x64, 0xcb, 0x63,
	0xbe, 0xea, 0xc2, 0x89, 0xa0, 0x6c, 0x5d, 0x32, 0x62, 0x08, 0xa1, 0x31, 0xb4, 0x4c, 0x42, 0x11,
	0xe5, 0xa9, 0x61, 0xea, 0xd6, 0x53, 0x47, 0x51, 0x0f, 0x55, 0xa3, 0x4e, 0x02, 0x5d, 0xea, 0xc4,
	0x26, 0x65, 0x64, 0xb7, 0x1f, 0x7b, 0x53, 0x15, 0x3e, 0x83, 0xb6, 0x20, 0x6b, 0x63, 0x0d, 0x53,
	0x91, 0xf2, 0x4c, 0x4b, 0x96, 0xee, 0xd0, 0xe5, 0xbe, 0x6b, 0xf0, 0x92, 0xc6, 0x2c, 0x99, 0x26,
	0x8f, 0x79, 0xdc, 0xde, 0xa0, 0x83, 0x1e, 0x80, 0xc8, 0xe0, 0x02, 0x5b, 0x95, 0xa3, 0x80, 0xc5,
	0xbe, 0x80, 0xfc, 0xd8, 0x39, 0x64, 0xce, 0x43, 0xf0, 0x0d, 0x17, 0xda, 0x83, 0x82, 0x57, 0xb2,
	0xf7, 0x7a, 0x0c, 0x14, 0xc3, 0x34, 0x5c, 0x83, 0xb8, 0x29, 0x1d, 0x6a, 0x26, 0x9e, 0xaa, 0x66,
	0x17, 0x68, 0x7d, 0xdf, 0x03, 0xd9, 0xe0, 0x18, 0x21, 0x6d, 0xb3, 0xe1, 0x82, 0x8d, 0x3f, 0xc0,
	0x9a, 0xcb, 0x9c, 0x8c, 0xae, 0x0b, 0x1f, 0x3b, 0xd2, 0xf8, 0xfc, 0xf0, 0xe9, 0xb9, 0xb0, 0xdc,
	0x71, 0x35, 0xf3, 0x4c, 0x48, 0x89, 0xb9, 0x02, 0x33, 0x17, 0x79, 0x8e, 0x5a, 0xe9, 0x2a, 0x4e,
	0x63, 0x07, 0x6d, 0xc3, 0xf9, 0x8e, 0x77, 0x76, 0xa6, 0x62, 0xb0, 0x23, 0xa1, 0xf9, 0xe1, 0xe2,
	0x58, 0x35, 0x7b, 0x5c, 0x4d, 0x3f, 0x13, 0x92, 0x62, 0xae, 0xe0, 0x65, 0x5d, 0x66, 0x43, 0x90,
	0xe1, 0xec, 0x0b, 0x76, 0x50, 0x05, 0x26, 0x7d, 0xc4, 0x70, 0x68, 0x36, 0x41, 0x43, 0x33, 0x06,
	0x54, 0xe0, 0x35, 0x8e, 0x09, 0x4e, 0x1b, 0x8e, 0xcd, 0xd6, 0x40, 0xf4, 0xcc, 0x4e, 0x68, 0x7b,
	0x27, 0x4f, 0xdd, 0xde, 0x2c, 0x35, 0x45, 0xc1, 0x76, 0x5a, 0xe0, 0xaf, 0x32, 0xb4, 0x95, 0xb6,
	0x6a, 0xd6, 0xb0, 0x23, 0x4d, 0x51, 0xa1, 0x78, 0xad, 0xaf, 0x50, 0xc8, 0x8c, 0x93, 0xef, 0x97,
	0x4c, 0xd9, 0xd6, 0x4d, 0xd7, 0x3e, 0xa2, 0x25, 0xcf, 0x88, 0x49, 0xdf, 0x5a, 0x92, 0x7d, 0xd4,
	0xf6, 0xc9, 0x58, 0x60, 0x2d, 0xa7, 0x03, 0x6b, 0x59, 0xd1, 0xed, 0x55, 0x3a, 0xcb, 0xac, 0xa5,
	0x41, 0x8e, 0x9d, 0xca, 0x6c, 0x43, 0xd5, 0x14, 0xcd, 0x33, 0x03, 0x4a, 0xa8, 0xcf, 0x49, 0x9a,
	0xa1, 0xc7, 0xbe, 0xd0, 0xdf, 0x68, 0x04, 0xe5, 0x0d, 0x79, 0xce, 0xc3, 0xda, 0x52, 0xb5, 0x9e,
	0x39, 0x27, 0xff, 0x5b, 0x31, 0x48, 0x87, 0xf5, 0xf5, 0x3e, 0xf8, 0x0e, 0x42, 0x90, 0xa8, 0x1f,
	0x65, 0x3b, 0xdd, 0x2d, 0x64, 0x77, 0xb9, 0x63, 0x10, 0xba, 0x1f, 0x45, 0xce, 0xee, 0x27, 0xa8,
	0xbe, 0x08, 0x49, 0xbb, 0xcd, 0x22, 0xaa, 0xc4, 0xa0, 0xdd, 0x03, 0x09, 0xdb, 0x1b, 0x42, 0x4b,
	0x90, 0xd0, 0xf6, 0x94, 0xba, 0xe1, 0xf0, 0xb6, 0x94, 0xe9, 0x9e, 0x7b, 0xf5, 0xd6, 0x5d, 0xc3,
	0x71, 0xe5, 0x51, 0x6d, 0x8f, 0xfc, 0xbf, 0xbb, 0x51, 0x24, 0x5c, 0x37, 0xda, 0x8c, 0x27, 0xe3,
	0xe2, 0xc8, 0x66, 0x3c, 0x39, 0x22, 0x8e, 0x6e, 0xc6, 0x93, 0x29, 0x11, 0x36, 0xe3, 0x49, 0x10,
	0xd3, 0xf9, 0x9f, 0x27, 0x00, 0x42, 0xc6, 0xf0, 0x25, 0x48, 0x34, 0xbd, 0x9c, 0x3c, 0xf5, 0x3a,
	0x32, 0x34, 0x85, 0xf7, 0xcd, 0xb8, 0x38, 0x2e, 0x5d, 0x92, 0xf9, 0x0c, 0xba, 0x0d, 0x09, 0x6e,
	0x24, 0x63, 0x83, 0x1b, 0xc9, 0xd0, 0x4e, 0x71, 0xf6, 0x17, 0x69, 0x2f, 0xba, 0x0e, 0x39, 0xcd,
	0xb2, 0x6d, 0x5c, 0xf7, 0xae, 0x3d, 0x43, 0x77, 0xa4, 0x38, 0xad, 0xec, 0x64, 0x8e, 0xab, 0xa9,
	0x67, 0xc2, 0x68, 0x21, 0x6e, 0xc7, 0x24, 0x5d, 0xce, 0x86, 0x88, 0x36, 0x74, 0xa7, 0xb3, 0x81,
	0x6c, 0xe4, 0x37, 0x0d, 0x64, 0x9f, 0x76, 0x03, 0xd9, 0xbf, 0xc7, 0x60, 0xd4, 0xc4, 0xae, 0x62,
	0xe8, 0x54, 0x97, 0x32, 0xd5, 0x7f, 0x8c, 0x3d, 0xab, 0xcc, 0x6c, 0x26, 0x0b, 0xcb, 0xcb, 0xcb,
	0xcb, 0xd7, 0x56, 0xa2, 0xf6, 0x7a, 0xf8, 0x33, 0xb0, 0xd7, 0x2b, 0x9f, 0xf4, 0x5e, 0xaf, 0x7c,
	0x7a, 0x7b, 0x3d, 0x62, 0x62, 0x77, 0x43, 0x0f, 0x65, 0xd5, 0xff, 0x3b, 0x01, 0x63, 0x1d, 0x9e,
	0x01, 0x7a, 0x33, 0x50, 0x6b, 0x4f, 0x63, 0x67, 0xfa, 0x14, 0xe4, 0xc2, 0x4a, 0xca, 0xd5, 0xfd,
	0x31, 0x24, 0x7d, 0x7b, 0xe8, 0x65, 0x98, 0xaf, 0x0d, 0xe6, 0x90, 0x94, 0x76, 0xda, 0x11, 0x66,
	0xd2, 0x07, 0x43, 0x32, 0xa4, 0xed, 0xb6, 0xc2, 0xdb, 0x47, 0x69, 0x61, 0x76, 0x70, 0x6c, 0xb9,
	0xbd, 0xc5, 0x18, 0x65, 0xb0, 0xfd, 0x67, 0xf4, 0x26, 0xa4, 0x89, 0xd1, 0x37, 0x0e, 0xbd, 0x7e,
	0xbe, 0xd1, 0x53, 0x6f, 0x4a, 0xe0, 0xe4, 0xd4, 0xc5, 0xef, 0xb1, 0x29, 0x89, 0x01, 0x6c, 0xca,
	0x0d, 0x98, 0xe4, 0x51, 0x90, 0xd7, 0x0c, 0xc1, 0x92, 0x12, 0x29, 0x5a, 0x34, 0x23, 0x5f, 0x7e,
	0x75, 0x58, 0xfa, 0x3f, 0x41, 0x46, 0x2c, 0xec, 0xf1, 0x88, 0xa8, 0x8f, 0x90, 0x7f, 0x00, 0x10,
	0xec, 0x12, 0xba, 0x09, 0x29, 0xff, 0x76, 0x66, 0x61, 0x9f, 0xd4, 0xcf, 0xc1, 0x09, 0x6f, 0x29,
	0xaf, 0xf3, 0x51, 0x93, 0x0f, 0xf9, 0x7f, 0x1d, 0x06, 0x08, 0xf6, 0x07, 0x6d, 0x41, 0xba, 0xa6,
	0xba, 0xf8, 0xa9, 0x7a, 0xa4, 0x04, 0x6d, 0x02, 0x3d, 0xb9, 0x92, 0xaf, 0x78, 0x24, 0xd1, 0xdd,
	0x01, 0x50, 0xe3, 0xb3, 0x0e, 0xba, 0x04, 0x19, 0xfe, 0x9d, 0xb6, 0xe3, 0x18, 0xf4, 0x33, 0x63,
	0x72, 0x9a, 0x8d, 0xc9, 0x8e, 0x63, 0x20, 0x11, 0x86, 0x1d, 0xd3, 0xa6, 0x7e, 0x79, 0x4c, 0x26,
	0x8f, 0xe8, 0x03, 0x90, 0xfc, 0xdb, 0xb5, 0xa9, 0xba, 0xfb, 0x24, 0x3e, 0x73, 0x5c, 0x5b, 0x35,
	0x4c, 0x97, 0xb5, 0x74, 0xf5, 0x78, 0xb9, 0xdc, 0x7d, 0xd9, 0x56, 0xdd, 0xfd, 0x55, 0x9f, 0x3a,
	0xdc, 0x6e, 0xa5, 0x47, 0x52, 0x90, 0x05, 0xb2, 0x3c, 0x83, 0x6b, 0x1d, 0x60, 0x93, 0x66, 0x6e,
	0x33, 0x72, 0xda, 0x1b, 0xdb, 0x21, 0x43, 0xe8, 0x00, 0xc6, 0x9a, 0xaa, 0x76, 0x80, 0x5d, 0x65,
	0xd7, 0xb6, 0x0e, 0xb0, 0xcd, 0x12, 0x9e, 0xb7, 0xce, 0x2c, 0x7c, 0xa5, 0x6d, 0x0a, 0x53, 0xa5,
	0x28, 0xbe, 0x44, 0x66, 0x9a, 0xa1, 0xd1, 0xfc, 0x39, 0x98, 0x8c, 0xa2, 0xa2, 0xb7, 0x74, 0x9a,
	0x1e, 0x59, 0xca, 0xbb, 0x8d, 0x37, 0xe3, 0xc9, 0x8c, 0x38, 0xb6, 0x19, 0x4f, 0x8e, 0x89, 0xd9,
	0xcd, 0x78, 0x52, 0x14, 0xc7, 0x37, 0xe3, 0xc9, 0x71, 0x11, 0x6d, 0xc6, 0x93, 0x13, 0xe2, 0xe4,
	0x66, 0x3c, 0x39, 0x29, 0x4e, 0x6d, 0xc6, 0x93, 0x9a, 0xa8, 0xfb, 0x37, 0xbc, 0x77, 0xb7, 0x27,
	0x39, 0x42, 0xfe, 0xfb, 0x71, 0xc8, 0x75, 0x39, 0xf1, 0x68, 0xb3, 0x5b, 0xfb, 0x97, 0x07, 0xf5,
	0xff, 0xb9, 0x59, 0x08, 0x8c, 0x41, 0x84, 0x8a, 0x8c, 0x9e, 0xae, 0x22, 0xf9, 0xff, 0x8a, 0x41,
	0x82, 0x2f, 0x67, 0x07, 0x46, 0x1a, 0xca, 0xbe, 0x6e, 0x33, 0x41, 0xbc, 0x7e, 0xd6, 0xc5, 0x94,
	0xb6, 0x6e, 0xaf, 0xc9, 0x61, 0x7f, 0xa0, 0x71, 0x5b, 0xb7, 0xd1, 0x7b, 0x90, 0x26, 0x2e, 0x23,
	0xff, 0x50, 0xcf, 0xa3, 0x78, 0xf3, 0xec, 0xd8, 0x95, 0x55, 0xd6, 0x94, 0x20, 0x43, 0x43, 0xd5,
	0xd8, 0x73, 0x7e, 0x0d, 0xe2, 0xe4, 0xad, 0xe8, 0x75, 0x18, 0x6d, 0x28, 0xe4, 0xae, 0x60, 0xa5,
	0xf8, 0x9e, 0x54, 0xc7, 0xd6, 0xce, 0x51, 0x33, 0xdc, 0xd7, 0x38, 0xd2, 0x20, 0x03, 0x9e, 0x2b,
	0x96, 0x7f, 0x02, 0x10, 0xe0, 0xa3, 0x8b, 0x30, 0xba, 0xa7, 0x34, 0x2d, 0xdb, 0x65, 0x65, 0xf8,
	0xc0, 0x50, 0x8c, 0xec, 0x6d, 0x5b, 0xb6, 0x8b, 0xce, 0x01, 0xec, 0xb5, 0xea, 0x75, 0x56, 0x7f,
	0xf0, 0xfa, 0xa2, 0x93, 0x64, 0x84, 0x38, 0xcb, 0x5d, 0x12, 0xe0, 0x79, 0x77, 0x9e, 0xbf, 0x17,
	0x17, 0x93, 0xa1, 0x59, 0xe2, 0xef, 0x25, 0xc4, 0x64, 0xfe, 0xef, 0x04, 0x18, 0xeb, 0x70, 0xd2,
	0xfb, 0x35, 0x50, 0x09, 0x9f, 0x52, 0x03, 0x55, 0xec, 0x05, 0x1b, 0xa8, 0x42, 0x37, 0x9c, 0x0e,
	0xd9, 0xae, 0x78, 0xe3, 0x36, 0x8c, 0xb2, 0x68, 0x46, 0x38, 0x25, 0x66, 0xee, 0x60, 0x0c, 0xf5,
	0x23, 0x32, 0xfe, 0xd0, 0x5b, 0x6c, 0x98, 0x3b, 0x21, 0xf4, 0x21, 0x46, 0xee, 0x00, 0xb3, 0x26,
	0x37, 0x99, 0x3c, 0xa2, 0x2f, 0xf1, 0x66, 0xec, 0x3e, 0xbd, 0x24, 0xd1, 0x6b, 0x70, 0x78, 0xd7,
	0x76, 0xec, 0x0b, 0xa1, 0xae, 0xaf, 0xc2, 0x4f, 0x05, 0x98, 0xf3, 0x5b, 0xb7, 0x2a, 0x2d, 0x77,
	0x9f, 0xd8, 0x65, 0x2f, 0x39, 0xb3, 0x6a, 0xe9, 0x18, 0x2d, 0x87, 0x3b, 0xbf, 0x53, 0xd5, 0xfc,
	0x71, 0x75, 0xc6, 0x9e, 0x2a, 0x4f, 0xbc, 0xff, 0xae, 0xba, 0xf8, 0xcd, 0xca, 0xe2, 0xd7, 0x96,
	0x17, 0xdf, 0x78, 0xf2, 0xe1, 0xb5, 0x57, 0x57, 0xca, 0x1f, 0x2d, 0x30, 0x7c, 0xf4, 0x06, 0x00,
	0xfd, 0x35, 0x8f, 0xb2, 0x67, 0x5b, 0x0d, 0xb6, 0xc6, 0x13, 0x5b, 0xdd, 0x29, 0xf5, 0x2d, 0xdb,
	0x6a, 0xa0, 0xeb, 0x90, 0xf4, 0x58, 0x5d, 0x8b, 0xa9, 0xd6, 0x49, 0x8c, 0x09, 0x4a, 0xbb, 0x63,
	0x85, 0xbe, 0xe6, 0x8f, 0xe7, 0x21, 0xe5, 0x7f, 0x0d, 0xba, 0x1d, 0x6e, 0x58, 0x5b, 0xe8, 0xdb,
	0xb0, 0x16, 0xbe, 0x8b, 0x44, 0xae, 0xef, 0x14, 0x72, 0xa8, 0xc8, 0x3a, 0xd6, 0x56, 0x01, 0x34,
	0x1b, 0xab, 0xac, 0x7d, 0xff, 0xd4, 0x6f, 0xaa, 0x7a, 0x2b, 0x1a, 0x12, 0x87, 0xe4, 0x14, 0xe3,
	0xab, 0xb8, 0x04, 0xa4, 0xd5, 0xd4, 0x39, 0xc8, 0xf0, 0x59, 0x40, 0x18, 0x5f, 0xc5, 0x45, 0x73,
	0x10, 0x37, 0xd5, 0x06, 0xee, 0xec, 0x44, 0x2b, 0xcb, 0x74, 0x10, 0x5d, 0x85, 0xb4, 0x8e, 0x1d,
	0xcd, 0x36, 0xe8, 0xaf, 0x5c, 0xa8, 0x2e, 0x7b, 0x3d, 0x68, 0xf6, 0xb0, 0xf4, 0xb3, 0x9c, 0x1c,
	0x9e, 0x44, 0xdf, 0x16, 0x00, 0x54, 0xd7, 0xb5, 0x8d, 0xdd, 0x96, 0x8b, 0x3d, 0xf3, 0x9a, 0x2e,
	0x5f, 0xe9, 0xbb, 0x49, 0xa5, 0x8a, 0x4f, 0x4b, 0xe5, 0xb2, 0x7a, 0xfd, 0xb8, 0x5a, 0xfe, 0x81,
	0xb0, 0x24, 0x42, 0x61, 0xc1, 0x2e, 0x48, 0x0b, 0xe5, 0x0b, 0x54, 0x24, 0x88, 0x3c, 0x14, 0x6f,
	0xde, 0x78, 0x77, 0xf1, 0xc9, 0x4d, 0xfe, 0xe7, 0x95, 0x0f, 0xcb, 0xaf, 0x7e, 0xb4, 0x70, 0x95,
	0xac, 0xe1, 0x27, 0x82, 0x1c, 0x7a, 0x27, 0xba, 0x0b, 0x69, 0x96, 0x8b, 0x65, 0x4e, 0xd0, 0x59,
	0x1b, 0x0b, 0x65, 0x38, 0xe4, 0x63, 0x24, 0x54, 0x43, 0x0e, 0xb6, 0xa9, 0x83, 0xd4, 0xb4, 0xad,
	0x3d, 0xa3, 0x8e, 0x49, 0x38, 0x90, 0xec, 0xec, 0xd8, 0x13, 0x19, 0xc9, 0xb6, 0x47, 0xb1, 0xa1,
	0xa3, 0x1f, 0x0b, 0x30, 0xcd, 0xd3, 0x4c, 0x64, 0x12, 0xdb, 0x34, 0x6a, 0xc3, 0x8e, 0x43, 0x5d,
	0x8e, 0x54, 0xf5, 0xf7, 0x85, 0xe3, 0xea, 0x77, 0x05, 0xfb, 0x77, 0x85, 0xf2, 0x6f, 0x0b, 0xef,
	0x17, 0x6f, 0xde, 0x20, 0x9f, 0x17, 0x08, 0xff, 0xb7, 0x42, 0xcf, 0xc1, 0xe3, 0x7b, 0x8b, 0x4f,
	0xae, 0x86, 0x26, 0xae, 0xbc, 0x57, 0xba, 0x72, 0x95, 0xf0, 0x55, 0x16, 0xbf, 0xc6, 0x76, 0xe5,
	0x5b, 0xa1, 0xe7, 0xe0, 0x91, 0xf2, 0x05, 0x13, 0x57, 0x8a, 0x37, 0x6f, 0xdc, 0x78, 0x97, 0xe9,
	0xd8, 0xf5, 0x8f, 0xae, 0xdc, 0x5c, 0xf8, 0xd6, 0xfb, 0x0b, 0xf2, 0x24, 0x5b, 0xee, 0x03, 0xba,
	0xda, 0x8a, 0xb7, 0x58, 0x54, 0x01, 0xa9, 0xeb, 0x33, 0x0e, 0xf0, 0x81, 0x52, 0x57, 0x77, 0x71,
	0x5d, 0x5a, 0x0a, 0x0b, 0xc2, 0xb7, 0x45, 0x79, 0xaa, 0x03, 0xe1, 0x0e, 0x3e, 0xb8, 0x4b, 0xc8,
	0xd0, 0xdf, 0x0b, 0x90, 0x0f, 0x27, 0x79, 0xbb, 0xb6, 0x03, 0x3e, 0x9b, 0xdb, 0x21, 0x85, 0x96,
	0xdc, 0xb9, 0x25, 0x1b, 0x70, 0x2e, 0xe2, 0x73, 0x82, 0x6d, 0x59, 0xee, 0xda, 0x96, 0xd9, 0x1e,
	0x24, 0x7f, 0x6b, 0xde, 0x84, 0xa9, 0x08, 0x28, 0x43, 0x97, 0xae, 0x85, 0xe5, 0x4b, 0x97, 0x27,
	0x7a, 0x20, 0x36, 0x74, 0xf4, 0x37, 0x02, 0x4c, 0xd0, 0xa4, 0x6f, 0xd7, 0x86, 0xa6, 0x3f, 0x9b,
	0x1b, 0x3a, 0x4e, 0xd6, 0xda, 0xb9, 0x93, 0x2e, 0xa4, 0xea, 0x96, 0xf7, 0x55, 0x8e, 0x94, 0x89,
	0xce, 0xee, 0x06, 0xa6, 0xe2, 0x2e, 0x27, 0xf5, 0x2c, 0xc5, 0xab, 0xc7, 0xd5, 0x2b, 0x3f, 0x10,
	0x2e, 0x0f, 0x66, 0x27, 0xe4, 0xe0, 0x45, 0xe8, 0x1a, 0x24, 0xd8, 0x6f, 0xfa, 0xa4, 0x72, 0x74,
	0x3c, 0xb9, 0xed, 0x4d, 0xcb, 0x9c, 0x2e, 0xb2, 0xbd, 0x76, 0x6c, 0xe0, 0xf6, 0xda, 0x6c, 0x9f,
	0xf6, 0xda, 0x9e, 0xd2, 0x51, 0xee, 0x93, 0x6f, 0x57, 0x16, 0x3f, 0x85, 0x76, 0xe5, 0xf1, 0x53,
	0xda, 0x95, 0x7b, 0x3a, 0x7d, 0xd1, 0x20, 0x9d, 0xbe, 0x13, 0x83, 0x74, 0xfa, 0x4e, 0x0e, 0xdc,
	0xe9, 0x3b, 0xd5, 0xa7, 0xd3, 0xf7, 0x3a, 0xa4, 0x6c, 0xcb, 0x72, 0x15, 0x9a, 0xba, 0x9b, 0x8e,
	0x8e, 0x52, 0x65, 0xcb, 0x72, 0xef, 0xe0, 0x23, 0x47, 0x4e, 0xda, 0xec, 0x29, 0x9c, 0x0a, 0x9a,
	0xf9, 0x4d, 0x2a, 0xe8, 0x53, 0x4c, 0x05, 0xa1, 0x2f, 0x43, 0xa6, 0xa3, 0xdd, 0x5c, 0x3a, 0xbd,
	0xdd, 0x9c, 0x04, 0x4f, 0x7e, 0x1a, 0xe2, 0x3a, 0xa4, 0x28, 0x3f, 0xf1, 0x55, 0x59, 0x1f, 0xa0,
	0xd4, 0xcf, 0x97, 0x95, 0x93, 0x84, 0x93, 0x56, 0xaf, 0xd7, 0x60, 0x9c, 0x57, 0xd2, 0x02, 0xf6,
	0x57, 0x4f, 0x61, 0xe7, 0x25, 0xbe, 0x2d, 0x8e, 0x72, 0x0d, 0x12, 0x8e, 0x97, 0xf7, 0x95, 0xf2,
	0xd1, 0xb6, 0x85, 0xa5, 0x85, 0x65, 0x4e, 0x87, 0xde, 0x02, 0x8e, 0xa2, 0x70, 0xd6, 0xb9, 0x93,
	0x59, 0xb3, 0x8c, 0x9e, 0xff, 0xae, 0x78, 0x01, 0xb2, 0x7e, 0x71, 0x97, 0x4a, 0x3f, 0x6d, 0xf5,
	0x18, 0x93, 0x33, 0xac, 0xa4, 0x4b, 0x25, 0x1f, 0x5d, 0x86, 0x5c, 0xcb, 0xc1, 0x7a, 0x40, 0xe5,
	0x48, 0xe7, 0xe7, 0x87, 0x8b, 0x63, 0xf2, 0x18, 0x19, 0xe6, 0x64, 0x0e, 0xa1, 0xa3, 0x68, 0x81,
	0x32, 0xd1, 0x5e, 0x0c, 0xf6, 0x5b, 0x55, 0x5f, 0x93, 0xd0, 0xcb, 0x8c, 0xce, 0xfe, 0x80, 0xf5,
	0x74, 0x2d, 0xd3, 0xee, 0x0a, 0xf6, 0x5a, 0xf9, 0x03, 0xda, 0xab, 0xb5, 0xdc, 0x4b, 0x76, 0x8d,
	0x76, 0x4d, 0x74, 0x92, 0x5d, 0x43, 0xef, 0xc0, 0x5c, 0x77, 0x81, 0x3a, 0x9c, 0x0a, 0xbb, 0x34,
	0x58, 0xe9, 0xdb, 0xaf, 0x5f, 0xcb, 0x41, 0x5e, 0xec, 0x0e, 0xa4, 0xbd, 0x42, 0x98, 0x77, 0xa4,
	0x85, 0x3e, 0x06, 0x91, 0x90, 0xd0, 0x33, 0xac, 0x66, 0xb9, 0x41, 0xfc, 0xf8, 0xf9, 0x6c, 0x4c,
	0x1c, 0x92, 0xa1, 0xe9, 0xcf, 0xa1, 0x77, 0x01, 0xed, 0xd2, 0x7e, 0xfe, 0x23, 0xa5, 0x89, 0x6d,
	0x0d, 0x9b, 0xae, 0x5a, 0xc3, 0xac, 0x89, 0xe2, 0xc4, 0xfe, 0xbc, 0xdc, 0x71, 0x35, 0x03, 0x70,
	0x7e, 0x68, 0xe8, 0xdb, 0x37, 0x17, 0x87, 0x86, 0x86, 0x86, 0xe4, 0x71, 0x86, 0xb3, 0xed, 0xc3,
	0xa0, 0x57, 0x20, 0xe7, 0xa7, 0x99, 0x58, 0xe7, 0xdf, 0xc2, 0xbc, 0x50, 0x1c, 0x91, 0xb3, 0x7c,
	0x98, 0x75, 0xf7, 0x9d, 0xf6, 0xdb, 0xdd, 0xe2, 0x27, 0xf2, 0xdb, 0x5d, 0x74, 0x1b, 0x20, 0xf4,
	0x63, 0x88, 0x2b, 0x67, 0xfb, 0x31, 0x84, 0x1c, 0xe2, 0x45, 0xf7, 0x21, 0xdb, 0xb4, 0xad, 0x43,
	0x83, 0x88, 0xab, 0xe7, 0xe0, 0x5c, 0xa5, 0x77, 0xc8, 0xd5, 0xe3, 0xea, 0x2b, 0xf6, 0xcb, 0xd2,
	0x42, 0xf9, 0xd2, 0xc9, 0xd7, 0x37, 0xf1, 0x1f, 0xc6, 0x42, 0x08, 0x1b, 0x3a, 0xd5, 0x57, 0x3e,
	0x40, 0x74, 0x87, 0x66, 0x61, 0x3f, 0xc7, 0x14, 0xa7, 0xfb, 0x20, 0x1e, 0xd0, 0x7f, 0xeb, 0x40,
	0x16, 0xc3, 0x1c, 0x24, 0x8c, 0x45, 0xe7, 0x20, 0xd5, 0x68, 0xd5, 0x49, 0x68, 0xea, 0xb8, 0xd2,
	0x22, 0xbd, 0x32, 0x82, 0x01, 0x54, 0x83, 0x59, 0xad, 0xae, 0x1a, 0x0d, 0x45, 0xed, 0x88, 0x60,
	0x15, 0xcd, 0xd2, 0xb1, 0x54, 0x3a, 0x25, 0xae, 0xe8, 0x8d, 0x7a, 0x69, 0x73, 0x91, 0xd1, 0x88,
	0x08, 0x87, 0x4b, 0x30, 0xe1, 0x1c, 0x18, 0x4d, 0x9e, 0x00, 0x52, 0x34, 0xfb, 0xa8, 0xe9, 0x5a,
	0xd2, 0x0a, 0x5d, 0xd0, 0x38, 0x99, 0x62, 0xfb, 0xbb, 0x4a, 0x27, 0xd0, 0xbb, 0x70, 0x2e, 0x82,
	0x5e, 0xb1, 0x0e, 0xb1, 0x6d, 0x1b, 0x3a, 0x96, 0x5e, 0xeb, 0xa3, 0x2e, 0x41, 0x5b, 0xcf, 0x6c,
	0x0f, 0xe8, 0xdb, 0x8c, 0x19, 0x7d, 0x09, 0x32, 0xaa, 0xe6, 0x1a, 0x87, 0x3c, 0xa4, 0xbc, 0x7e,
	0xaa, 0xee, 0xa5, 0x7d, 0xfa, 0x8a, 0x8b, 0xbe, 0x08, 0x54, 0xb3, 0x15, 0x07, 0x63, 0x93, 0xb0,
	0xbf, 0x7e, 0x7a, 0x16, 0x9b, 0xd0, 0x3f, 0xc0, 0xd8, 0xac, 0xb8, 0xf9, 0x2f, 0x41, 0xae, 0x2b,
	0x24, 0x0c, 0xa7, 0x2a, 0x52, 0x5e, 0xaa, 0x62, 0x32, 0x9c, 0xaa, 0x48, 0x85, 0x32, 0x10, 0xf9,
	0x47, 0x90, 0xed, 0x74, 0x13, 0x23, 0xb8, 0x4b, 0x9d, 0x89, 0x8e, 0x1e, 0xeb, 0xce, 0x01, 0x22,
	0x33, 0x1b, 0x9b, 0xf1, 0xe4, 0xcb, 0xe2, 0xe5, 0xcd, 0x78, 0xf2, 0xb2, 0xf8, 0xca, 0x66, 0x3c,
	0xf9, 0x8a, 0x58, 0x2c, 0xdc, 0x06, 0xf0, 0x0f, 0xdd, 0x41, 0x37, 0x20, 0x1d, 0xfc, 0x53, 0x26,
	0x3c, 0xa1, 0x33, 0xdb, 0x57, 0x4a, 0x64, 0xc0, 0x3e, 0x6f, 0xe1, 0x63, 0x01, 0xc6, 0xd6, 0xbc,
	0xda, 0xd3, 0xb6, 0x8d, 0xf7, 0x8c, 0x36, 0xfa, 0x89, 0x10, 0xaa, 0xf8, 0x79, 0x45, 0xcd, 0x3f,
	0x17, 0x7e, 0x9d, 0x2a, 0x7e, 0x41, 0x31, 0x6d, 0x1a, 0x46, 0xeb, 0xd8, 0xac, 0xb9, 0xfb, 0x5e,
	0xc6, 0x50, 0x66, 0x7f, 0x15, 0xde, 0x83, 0xe9, 0x55, 0x9a, 0xcc, 0x08, 0xf6, 0x84, 0x15, 0x58,
	0xab, 0x00, 0xc1, 0x56, 0xfa, 0xbf, 0x8e, 0xe8, 0xb7, 0x93, 0xa1, 0xa4, 0x6a, 0xca, 0xdf, 0xd3,
	0xc2, 0xf7, 0x05, 0x98, 0x7e, 0x48, 0xd3, 0x1c, 0x9f, 0x06, 0x3c, 0x7a, 0x03, 0x20, 0xf8, 0x97,
	0x56, 0xfa, 0x66, 0x70, 0x6e, 0x11, 0x92, 0x2d, 0xd5, 0x39, 0x90, 0x53, 0x7b, 0xfc, 0xb1, 0xf0,
	0x67, 0x31, 0x78, 0xa9, 0xaa, 0xba, 0xda, 0x7e, 0xd7, 0xf2, 0xee, 0x32, 0x65, 0xe0, 0xcb, 0xc4,
	0x90, 0xf0, 0xf2, 0x34, 0x5c, 0x98, 0xee, 0xf4, 0x34, 0xeb, 0x9d, 0x8e, 0x52, 0xea, 0x99, 0xf0,
	0xe8, 0x65, 0x8e, 0x9d, 0xff, 0x23, 0x01, 0x66, 0xfa, 0x10, 0xa1, 0xb7, 0xce, 0x9e, 0xf1, 0xea,
	0xfa, 0x6d, 0x66, 0xb7, 0x51, 0x88, 0x9d, 0xc5, 0x28, 0x14, 0xfe, 0x54, 0x80, 0x09, 0xe2, 0x2b,
	0x76, 0x9f, 0xe0, 0x0e, 0x64, 0x83, 0x13, 0x54, 0x7e, 0xf9, 0x25, 0x66, 0x70, 0x30, 0xef, 0xbc,
	0xc8, 0x99, 0xfe, 0x74, 0x18, 0x5e, 0x0e, 0x2f, 0x34, 0xf4, 0xba, 0x5b, 0x96, 0xbd, 0xfe, 0x70,
	0xc3, 0xe1, 0x4b, 0xff, 0x99, 0x00, 0x49, 0xea, 0x61, 0xe1, 0x96, 0xc1, 0x14, 0xfb, 0xaf, 0x84,
	0x67, 0x95, 0x4b, 0x9b, 0xa8, 0xf0, 0xf9, 0xe5, 0xea, 0xca, 0xda, 0xf5, 0xcf, 0xaf, 0xaf, 0x2d,
	0xf7, 0x57, 0xf0, 0xe4, 0x67, 0x40, 0xc1, 0xbf, 0xc0, 0x14, 0x9c, 0x7c, 0xc6, 0x7a, 0xcb, 0x40,
	0xff, 0x20, 0x00, 0x51, 0x76, 0xfa, 0x45, 0xb1, 0x5f, 0xe7, 0x2f, 0x1a, 0xd5, 0xf1, 0xe1, 0x7a,
	0xcb, 0x28, 0x1c, 0xc7, 0x60, 0xea, 0xae, 0xe1, 0x04, 0xc7, 0xe9, 0x9f, 0xde, 0xdb, 0x90, 0x0b,
	0x7b, 0x5e, 0x81, 0xe4, 0x5d, 0x3e, 0xc1, 0xe7, 0x0a, 0x67, 0x18, 0xb3, 0x6a, 0x78, 0xfc, 0x45,
	0x64, 0x0e, 0xfd, 0x50, 0x80, 0x11, 0xcb, 0xd6, 0xb1, 0x4d, 0x73, 0xbf, 0xa9, 0xea, 0xef, 0x09,
	0xc7, 0xd5, 0xdf, 0x11, 0xec, 0xef, 0x08, 0xf2, 0x90, 0x9c, 0xf2, 0x55, 0x43, 0x86, 0xc5, 0xe0,
	0xd9, 0x97, 0x3c, 0x39, 0xb5, 0xe8, 0x3f, 0xf2, 0xb3, 0x93, 0x93, 0x8b, 0xfc, 0x89, 0xa6, 0x7f,
	0xe5, 0x91, 0x45, 0xfa, 0xbf, 0x70, 0x9a, 0x57, 0xce, 0x2c, 0x86, 0xff, 0x0a, 0x65, 0xb1, 0xe5,
	0xf4, 0x62, 0xe8, 0x0f, 0x6f, 0x61, 0xe8, 0x02, 0x8c, 0x78, 0xff, 0xa2, 0x49, 0x3c, 0x5c, 0x2b,
	0xfa, 0x8f, 0x84, 0xec, 0x0d, 0x23, 0x04, 0xf1, 0x26, 0xf1, 0xa3, 0xbd, 0x2a, 0x11, 0x7d, 0x2e,
	0xfc, 0x81, 0x00, 0x13, 0x0f, 0x22, 0x74, 0xfe, 0x57, 0x6c, 0xb5, 0xff, 0x42, 0x80, 0x39, 0x19,
	0x3b, 0xd8, 0xad, 0x98, 0xfa, 0xaf, 0x85, 0x49, 0xfa, 0x91, 0x00, 0xe3, 0xfe, 0xbb, 0x76, 0x70,
	0xa3, 0x59, 0x27, 0x16, 0xfd, 0x57, 0xbb, 0x8b, 0xa8, 0x08, 0xe9, 0x86, 0xda, 0xa4, 0xad, 0xc5,
	0xc4, 0x39, 0x1b, 0xee, 0xcc, 0x76, 0x02, 0x9b, 0xbb, 0x83, 0x8f, 0x0a, 0x7f, 0x1d, 0xbe, 0x96,
	0xf8, 0xf2, 0xbd, 0x28, 0xc3, 0x2f, 0x5a, 0x08, 0x9d, 0xec, 0x91, 0x45, 0x8b, 0x58, 0x38, 0x29,
	0xfb, 0x13, 0xa1, 0xb3, 0x68, 0xb1, 0x03, 0x39, 0x9a, 0xd8, 0xc7, 0x6d, 0x17, 0x9b, 0x0e, 0xcd,
	0x46, 0x0e, 0xd3, 0xba, 0xf0, 0xe7, 0x8e, 0xab, 0xc5, 0x67, 0xc2, 0xcb, 0xa2, 0x2e, 0x09, 0x85,
	0x8b, 0xf6, 0xf9, 0xf2, 0xdc, 0xfb, 0xc5, 0x9b, 0x37, 0xde, 0x2b, 0xf1, 0xe0, 0xe4, 0xc3, 0x6b,
	0xaf, 0x5e, 0x7b, 0xfd, 0xa3, 0x2b, 0x1f, 0x5e, 0x7b, 0xb5, 0xfc, 0xd1, 0x82, 0x9c, 0x25, 0x18,
	0xeb, 0x3e, 0x44, 0xe1, 0x7f, 0x05, 0x90, 0xfa, 0x2c, 0xdd, 0x41, 0x1f, 0x41, 0xc2, 0x8b, 0x8f,
	0xf8, 0xad, 0x7e, 0xbd, 0xef, 0xee, 0x77, 0xb1, 0x96, 0xd8, 0xff, 0x7f, 0x99, 0x2c, 0x28, 0x7f,
	0x67, 0x5e, 0x83, 0x4c, 0x18, 0x26, 0xc2, 0x4b, 0x3e, 0xad, 0x1c, 0xd8, 0x67, 0x79, 0x21, 0xa7,
	0xb9, 0xf0, 0x2f, 0x02, 0x5c, 0x5c, 0xb5, 0xcc, 0x43, 0x6c, 0xbb, 0x3d, 0xd4, 0x5c, 0x5f, 0xd6,
	0x20, 0xe5, 0xad, 0x89, 0x04, 0x85, 0xde, 0x41, 0xbe, 0x72, 0x5c, 0x1d, 0xec, 0x6b, 0x92, 0x1e,
	0xe7, 0x86, 0x4e, 0x0c, 0x08, 0x8d, 0xff, 0xe8, 0xb5, 0x23, 0xd3, 0x67, 0xf4, 0x75, 0x98, 0x0e,
	0x69, 0x62, 0xb8, 0x22, 0x34, 0x7c, 0xf6, 0x8a, 0xd0, 0x04, 0xee, 0x99, 0x74, 0xae, 0x3e, 0x04,
	0x08, 0xd2, 0x06, 0x68, 0x1c, 0xc6, 0xb6, 0xdf, 0x7e, 0xbc, 0x2e, 0x2b, 0x0f, 0xef, 0xdd, 0xb9,
	0xf7, 0xf6, 0xe3, 0x7b, 0xe2, 0x50, 0x30, 0x54, 0xad, 0xec, 0xec, 0xac, 0xcb, 0x5f, 0x15, 0x05,
	0x84, 0x20, 0xeb, 0x0d, 0xad, 0xbf, 0xb3, 0xb3, 0x2e, 0xdf, 0xab, 0xdc, 0x15, 0x63, 0xf9, 0xb1,
	0x5f, 0x3c, 0x9f, 0x4d, 0x49, 0xc2, 0xd5, 0x11, 0x3a, 0x53, 0xbd, 0xfe, 0xb7, 0xff, 0x76, 0x41,
	0xf8, 0xda, 0xd2, 0x19, 0x6e, 0x31, 0xd7, 0x6c, 0xee, 0xee, 0x8e, 0x52, 0x95, 0x5b, 0xf9, 0xff,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0xf7, 0x79, 0xf9, 0x5c, 0x51, 0x00, 0x00,
}
